{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to my mini-blog, I will share some interesting documents, photoes, stories here with you. Summary C/CPP - Learning C/CPP/QT, etc. Python - Learning Python about website/automation/game/mobile. English - Learning English. Other - Other articles.","title":"Home"},{"location":"#welcome","text":"Welcome to my mini-blog, I will share some interesting documents, photoes, stories here with you.","title":"Welcome"},{"location":"#summary","text":"C/CPP - Learning C/CPP/QT, etc. Python - Learning Python about website/automation/game/mobile. English - Learning English. Other - Other articles.","title":"Summary"},{"location":"about/","text":"Find Us Web: http://hiechoer.github.io Github: https://github.com/hiechoer Mail: hiechoer@yeah.net","title":"Find Us"},{"location":"about/#find-us","text":"Web: http://hiechoer.github.io Github: https://github.com/hiechoer Mail: hiechoer@yeah.net","title":"Find Us"},{"location":"cpp/","text":"C++","title":"C++"},{"location":"cpp/#c","text":"","title":"C++"},{"location":"misc/","text":"Misc Useful online git code management Some useful online git code management systems in the link. How to write file in markdown formation The syntax about markdown file. Free bug tools Some free bug tools. Free design tools Some free design tools.","title":"Misc"},{"location":"misc/#misc","text":"","title":"Misc"},{"location":"misc/#useful-online-git-code-management","text":"Some useful online git code management systems in the link.","title":"Useful online git code management"},{"location":"misc/#how-to-write-file-in-markdown-formation","text":"The syntax about markdown file.","title":"How to write file in markdown formation"},{"location":"misc/#free-bug-tools","text":"Some free bug tools.","title":"Free bug tools"},{"location":"misc/#free-design-tools","text":"Some free design tools.","title":"Free design tools"},{"location":"misc/bug-tool/","text":"Free bug tools Name Link bugout https://bugout2.testin.cn/ bugtags https://bugtags.com/ delbug https://delbug.cn/","title":"Free bug tools"},{"location":"misc/bug-tool/#free-bug-tools","text":"Name Link bugout https://bugout2.testin.cn/ bugtags https://bugtags.com/ delbug https://delbug.cn/","title":"Free bug tools"},{"location":"misc/design-tool/","text":"Free design tools Name Link visual-paradigm \u793e\u533a\u7248 https://www.visual-paradigm.com/solution/ edraw \u514d\u8d39\u7248 https://www.edrawsoft.com/cn/freemind.php","title":"Free design tools"},{"location":"misc/design-tool/#free-design-tools","text":"Name Link visual-paradigm \u793e\u533a\u7248 https://www.visual-paradigm.com/solution/ edraw \u514d\u8d39\u7248 https://www.edrawsoft.com/cn/freemind.php","title":"Free design tools"},{"location":"misc/git-server/","text":"Useful links of git Name Link github https://github.com/ bitbucket https://bitbucket.org/ coding https://coding.net/ gogs https://gogs.io/ gitee https://gitee.com/ gitea https://gitea.io/ codegit https://codegit.net/","title":"Useful links of git"},{"location":"misc/git-server/#useful-links-of-git","text":"Name Link github https://github.com/ bitbucket https://bitbucket.org/ coding https://coding.net/ gogs https://gogs.io/ gitee https://gitee.com/ gitea https://gitea.io/ codegit https://codegit.net/","title":"Useful links of git"},{"location":"misc/howto-markdown/","text":"How to markdown http://www.markdown.cn/","title":"How to markdown"},{"location":"misc/howto-markdown/#how-to-markdown","text":"http://www.markdown.cn/","title":"How to markdown"},{"location":"other/","text":"Other Hello mini-blog! It is my first mini-blog, ^_^","title":"Other"},{"location":"other/#other","text":"","title":"Other"},{"location":"other/#hello-mini-blog","text":"It is my first mini-blog, ^_^","title":"Hello mini-blog!"},{"location":"other/hello/","text":"Hello Hello mini-blog!","title":"Hello"},{"location":"other/hello/#hello","text":"Hello mini-blog!","title":"Hello"},{"location":"python/","text":"Python","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"qt/","text":"Qt 0. event and signal-slot 1. introduction 2. Hello World 3. widgets 4. menu toolbar 5. dialog 6. internationalization 7. container 8. model-view 9. algo and data type 10. file 11. process 12. multi platform 13. library 14. drag and drop (DnD) 15. ui framework 16. ui design 17. media 18. package and deploy 19. special interfaces for dir and file 20. listwidget 21. grab window 22. shared memory 23. browser 24. database 25. configuration for develop android 26. Qt Quick and QML 27. How to plugin 28. sample on deiban for qml and postgresql problems","title":"Qt"},{"location":"qt/#qt","text":"","title":"Qt"},{"location":"qt/#0-event-and-signal-slot","text":"","title":"0. event and signal-slot"},{"location":"qt/#1-introduction","text":"","title":"1. introduction"},{"location":"qt/#2-hello-world","text":"","title":"2. Hello World"},{"location":"qt/#3-widgets","text":"","title":"3. widgets"},{"location":"qt/#4-menu-toolbar","text":"","title":"4. menu &amp; toolbar"},{"location":"qt/#5-dialog","text":"","title":"5. dialog"},{"location":"qt/#6-internationalization","text":"","title":"6. internationalization"},{"location":"qt/#7-container","text":"","title":"7. container"},{"location":"qt/#8-model-view","text":"","title":"8. model-view"},{"location":"qt/#9-algo-and-data-type","text":"","title":"9. algo and data type"},{"location":"qt/#10-file","text":"","title":"10. file"},{"location":"qt/#11-process","text":"","title":"11. process"},{"location":"qt/#12-multi-platform","text":"","title":"12. multi platform"},{"location":"qt/#13-library","text":"","title":"13. library"},{"location":"qt/#14-drag-and-drop-dnd","text":"","title":"14. drag and drop (DnD)"},{"location":"qt/#15-ui-framework","text":"","title":"15. ui framework"},{"location":"qt/#16-ui-design","text":"","title":"16. ui design"},{"location":"qt/#17-media","text":"","title":"17. media"},{"location":"qt/#18-package-and-deploy","text":"","title":"18. package and deploy"},{"location":"qt/#19-special-interfaces-for-dir-and-file","text":"","title":"19. special interfaces for dir and file"},{"location":"qt/#20-listwidget","text":"","title":"20. listwidget"},{"location":"qt/#21-grab-window","text":"","title":"21. grab window"},{"location":"qt/#22-shared-memory","text":"","title":"22. shared memory"},{"location":"qt/#23-browser","text":"","title":"23. browser"},{"location":"qt/#24-database","text":"","title":"24. database"},{"location":"qt/#25-configuration-for-develop-android","text":"","title":"25. configuration for develop android"},{"location":"qt/#26-qt-quick-and-qml","text":"","title":"26. Qt Quick and QML"},{"location":"qt/#27-how-to-plugin","text":"","title":"27. How to plugin"},{"location":"qt/#28-sample-on-deiban-for-qml-and-postgresql","text":"","title":"28. sample on deiban for qml and postgresql"},{"location":"qt/#problems","text":"","title":"problems"},{"location":"qt/0-event-signal-slot/","text":"event and signal-slot framework \u4ee5\u4e0b\u662f\u4e2a\u4eba\u5bf9QT\u4e2d\u7684\u4e8b\u4ef6event\u548c\u4fe1\u53f7\u69fd(signal/slog)\u7684\u7406\u89e3, \u672a\u5fc5\u6b63\u786e, \u4ec5\u4f9b\u4e2a\u4eba\u53c2\u8003. ---------------------------------------------------------- \u5bf9\u7528\u6237\u64cd\u4f5c\u505a\u51fa\u7684\u54cd\u5e94\u4e8b\u4ef6 or \u7cfb\u7edf\u81ea\u52a8\u53d1\u51fa\u7684\u4e8b\u4ef6 (\u5982\u70b9\u51fb\u64cd\u4f5c) (\u5982\u5b9a\u65f6\u5668) ---------------------------------------------------------- || \\/ ----------------------- \u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61 ----------------------- || \\/ --------------------------------- \u88ab\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u8fc7\u6ee4 === 1 \u4f8b\u5982\u5728\u5305\u542b\u7a97\u53e3\u4e2d\u8fc7\u8f7deventFilter --------------------------------- || \\/ ---------------------------- \u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u884c\u4e3a \u901a\u8fc7\u8fc7\u8f7devent() \u6bd4\u5982\u6539\u53d8tab\u952e\u7ec4\u4ef6,\u6216\u6dfb\u52a0 === 2 \u81ea\u5b9a\u4e49\u4e8b\u4ef6 ---------------------------- || \\/ ----------------------------------------- \u5c06event\u5bf9\u8c61\u4f20\u9012\u7ed9QObject\u7684event\u51fd\u6570 event\u51fd\u6570\u6309\u7167\u4e8b\u4ef6\u7c7b\u578b\u5206\u53d1\u7ed9\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 ---------------------------------------- || or || \\/ \\/ ---------- ---------- \u4e8b\u4ef6\u961f\u5217 \u76f4\u63a5\u5904\u7406 ---------- ---------- \\ / -------------------- \u5bf9\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 === 3 -------------------- || \\/ ---------------------- \u6709\u53ef\u80fd\u53d1\u51fa\u4fe1\u53f7signal === 4 ---------------------- || \\/ ---------------------- \u7acb\u5373\u6267\u884c\u5bf9\u5e94\u7684\u69fd\u51fd\u6570 ---------------------- \u5982\u4e0a\u56fe\u6240\u793a \u5982\u679c\u4f7f\u7528\u7ec4\u4ef6\u7684\u9ed8\u8ba4\u4e8b\u4ef6, \u76f4\u63a5\u5b9a\u4e49signal/slot - p4 \u5982\u679c\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u884c\u4e3a, \u5728\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u4e2d\u8f7d\u7236\u7c7b\u540c\u540d\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u6709\u53ef\u80fd\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u4e2d\u51fd\u6570\u9ed8\u8ba4\u884c\u4e3a. \u4f8b\u5982mouseMoveEvent/mousePressEvent/mouseReleaseEvent - p3 \u5728\u7a97\u53e3\u5173\u95ed\u65f6, \u5982\u679c\u6539\u53d8\u5173\u95ed\u65f6\u7684\u9ed8\u8ba4\u884c\u4e3a, \u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u9700\u8981\u8c03\u7528accept()\u6216\u8005ignore() - p3 \u8fc7\u8f7devent\u65f6, \u4e0d\u662f\u4fee\u6539\u9ed8\u8ba4\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u800c\u662f\u5728\u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u534f\u8c03\u4e8b\u4ef6\u6216\u8005\u6dfb\u52a0\u81ea\u5b9a\u4e49\u4e8b\u4ef6 - p2 \u5728\u7236\u7c7b\u4e2d\u91cd\u5199eventFilter, \u5728\u81ea\u8eab\u4e2d\u901a\u8fc7installEventFilte\u628a\u81ea\u8eab\u5b89\u88c5\u5230\u7236\u7c7b\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e2d, \u5904\u7406\u4e8b\u4ef6\u65f6\u5c31\u4f1a\u5148\u88ab\u8fc7\u6ee4\u5668\u8fc7\u6ee4\u4e00\u904d, \u4f8b\u5982\u67d0\u4e9b\u7ec4\u4ef6\u4e0d\u5904\u7406\u67d0\u4e9b\u6d88\u606f - p1","title":"event and signal-slot"},{"location":"qt/0-event-signal-slot/#event-and-signal-slot","text":"","title":"event and signal-slot"},{"location":"qt/0-event-signal-slot/#framework","text":"\u4ee5\u4e0b\u662f\u4e2a\u4eba\u5bf9QT\u4e2d\u7684\u4e8b\u4ef6event\u548c\u4fe1\u53f7\u69fd(signal/slog)\u7684\u7406\u89e3, \u672a\u5fc5\u6b63\u786e, \u4ec5\u4f9b\u4e2a\u4eba\u53c2\u8003. ---------------------------------------------------------- \u5bf9\u7528\u6237\u64cd\u4f5c\u505a\u51fa\u7684\u54cd\u5e94\u4e8b\u4ef6 or \u7cfb\u7edf\u81ea\u52a8\u53d1\u51fa\u7684\u4e8b\u4ef6 (\u5982\u70b9\u51fb\u64cd\u4f5c) (\u5982\u5b9a\u65f6\u5668) ---------------------------------------------------------- || \\/ ----------------------- \u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61 ----------------------- || \\/ --------------------------------- \u88ab\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u8fc7\u6ee4 === 1 \u4f8b\u5982\u5728\u5305\u542b\u7a97\u53e3\u4e2d\u8fc7\u8f7deventFilter --------------------------------- || \\/ ---------------------------- \u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u884c\u4e3a \u901a\u8fc7\u8fc7\u8f7devent() \u6bd4\u5982\u6539\u53d8tab\u952e\u7ec4\u4ef6,\u6216\u6dfb\u52a0 === 2 \u81ea\u5b9a\u4e49\u4e8b\u4ef6 ---------------------------- || \\/ ----------------------------------------- \u5c06event\u5bf9\u8c61\u4f20\u9012\u7ed9QObject\u7684event\u51fd\u6570 event\u51fd\u6570\u6309\u7167\u4e8b\u4ef6\u7c7b\u578b\u5206\u53d1\u7ed9\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 ---------------------------------------- || or || \\/ \\/ ---------- ---------- \u4e8b\u4ef6\u961f\u5217 \u76f4\u63a5\u5904\u7406 ---------- ---------- \\ / -------------------- \u5bf9\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 === 3 -------------------- || \\/ ---------------------- \u6709\u53ef\u80fd\u53d1\u51fa\u4fe1\u53f7signal === 4 ---------------------- || \\/ ---------------------- \u7acb\u5373\u6267\u884c\u5bf9\u5e94\u7684\u69fd\u51fd\u6570 ----------------------","title":"framework"},{"location":"qt/0-event-signal-slot/#_1","text":"\u5982\u679c\u4f7f\u7528\u7ec4\u4ef6\u7684\u9ed8\u8ba4\u4e8b\u4ef6, \u76f4\u63a5\u5b9a\u4e49signal/slot - p4 \u5982\u679c\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u884c\u4e3a, \u5728\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u4e2d\u8f7d\u7236\u7c7b\u540c\u540d\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u6709\u53ef\u80fd\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u4e2d\u51fd\u6570\u9ed8\u8ba4\u884c\u4e3a. \u4f8b\u5982mouseMoveEvent/mousePressEvent/mouseReleaseEvent - p3 \u5728\u7a97\u53e3\u5173\u95ed\u65f6, \u5982\u679c\u6539\u53d8\u5173\u95ed\u65f6\u7684\u9ed8\u8ba4\u884c\u4e3a, \u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u9700\u8981\u8c03\u7528accept()\u6216\u8005ignore() - p3 \u8fc7\u8f7devent\u65f6, \u4e0d\u662f\u4fee\u6539\u9ed8\u8ba4\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u800c\u662f\u5728\u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u534f\u8c03\u4e8b\u4ef6\u6216\u8005\u6dfb\u52a0\u81ea\u5b9a\u4e49\u4e8b\u4ef6 - p2 \u5728\u7236\u7c7b\u4e2d\u91cd\u5199eventFilter, \u5728\u81ea\u8eab\u4e2d\u901a\u8fc7installEventFilte\u628a\u81ea\u8eab\u5b89\u88c5\u5230\u7236\u7c7b\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e2d, \u5904\u7406\u4e8b\u4ef6\u65f6\u5c31\u4f1a\u5148\u88ab\u8fc7\u6ee4\u5668\u8fc7\u6ee4\u4e00\u904d, \u4f8b\u5982\u67d0\u4e9b\u7ec4\u4ef6\u4e0d\u5904\u7406\u67d0\u4e9b\u6d88\u606f - p1","title":"\u5982\u4e0a\u56fe\u6240\u793a"},{"location":"qt/1-introduction/","text":"QTCreator how to New Project Application - Qt Widgets Application for general applications on desktop Non-Qt Project - Plain C++ Application for general C++ console applications Color in Editor: In Tools - Options - Color Scheme for Theme ... Vim mode: In Tools - Options - FakeVim some shortcuts build: Ctl+B run: Ctl+R breakpoint: F9 fullscreen: Ctl+Shift+F11 help: Ctl+6, Alt+L to \"Look for\", Esc to exit help sub-wind in foot: Alt+num other source file: Alt+arrow (left right) left sidebar: Alt+0 right sidebar: Alt+Shift+0 preview ui: alt+shift+r( Tools- Options- Environment- Keyboard- FormEditor ) opened file: Ctl+Tab Locater: Ctl+k Symbol: F2 Switch between header and source: F4 some skills layout: Ctl+H to H, Ctl+L to V source/header: F4 layout\u4e2d\u53ef\u4ee5\u52a0\u5165\u5f39\u7c27\u628a\u5176\u4ed6\u7ec4\u4ef6\u9876\u8d77\u6765: layout- addStretch() \u7ec4\u4ef6\u4e2d\u53ef\u4ee5\u53d1\u5c04\u81ea\u8eab\u7684\u4fe1\u53f7, \u76f8\u5f53\u4e8e\u8c03\u7528\u8fd9\u4e2a\u4fe1\u53f7\u5bf9\u5e94\u7684\u6240\u6709\u69fd\u51fd\u6570, emit findPrevious(text, cs); QWidget/QDialog/QMainWindow\u7684layout\u662f\u4e0d\u540c\u7684, QWidget/QDialog\u4e2d\u53ef\u4ee5\u7528setLayout, QMainWindow\u4e2d\u7528setCentralWidget\u6dfb\u52a0\u4e00\u4e2aWidget, \u56e0\u4e3aQMainWindow\u4e4b\u4e2d\u5df2\u7ecf\u6709\u4e86layout \u7ec4\u4ef6\u663e\u793a\u5b57\u7b26\u4e32\u4e2d C \u662f\u5feb\u6377\u952e in Forms- ui editor , you can add spacer, F3 to widget editor, F4 to signal/slot editor fixed window size: max min size to be the same qDebug(#include QtDebug ) to output debug logs","title":"QTCreator"},{"location":"qt/1-introduction/#qtcreator","text":"","title":"QTCreator"},{"location":"qt/1-introduction/#how-to","text":"New Project Application - Qt Widgets Application for general applications on desktop Non-Qt Project - Plain C++ Application for general C++ console applications Color in Editor: In Tools - Options - Color Scheme for Theme ... Vim mode: In Tools - Options - FakeVim","title":"how to"},{"location":"qt/1-introduction/#some-shortcuts","text":"build: Ctl+B run: Ctl+R breakpoint: F9 fullscreen: Ctl+Shift+F11 help: Ctl+6, Alt+L to \"Look for\", Esc to exit help sub-wind in foot: Alt+num other source file: Alt+arrow (left right) left sidebar: Alt+0 right sidebar: Alt+Shift+0 preview ui: alt+shift+r( Tools- Options- Environment- Keyboard- FormEditor ) opened file: Ctl+Tab Locater: Ctl+k Symbol: F2 Switch between header and source: F4","title":"some shortcuts"},{"location":"qt/1-introduction/#some-skills","text":"layout: Ctl+H to H, Ctl+L to V source/header: F4 layout\u4e2d\u53ef\u4ee5\u52a0\u5165\u5f39\u7c27\u628a\u5176\u4ed6\u7ec4\u4ef6\u9876\u8d77\u6765: layout- addStretch() \u7ec4\u4ef6\u4e2d\u53ef\u4ee5\u53d1\u5c04\u81ea\u8eab\u7684\u4fe1\u53f7, \u76f8\u5f53\u4e8e\u8c03\u7528\u8fd9\u4e2a\u4fe1\u53f7\u5bf9\u5e94\u7684\u6240\u6709\u69fd\u51fd\u6570, emit findPrevious(text, cs); QWidget/QDialog/QMainWindow\u7684layout\u662f\u4e0d\u540c\u7684, QWidget/QDialog\u4e2d\u53ef\u4ee5\u7528setLayout, QMainWindow\u4e2d\u7528setCentralWidget\u6dfb\u52a0\u4e00\u4e2aWidget, \u56e0\u4e3aQMainWindow\u4e4b\u4e2d\u5df2\u7ecf\u6709\u4e86layout \u7ec4\u4ef6\u663e\u793a\u5b57\u7b26\u4e32\u4e2d C \u662f\u5feb\u6377\u952e in Forms- ui editor , you can add spacer, F3 to widget editor, F4 to signal/slot editor fixed window size: max min size to be the same qDebug(#include QtDebug ) to output debug logs","title":"some skills"},{"location":"qt/10-io/","text":"File QIODevice \u8bbe\u5907\u7c7b\u578b \u968f\u673a\u8bbf\u95ee\u8bbe\u5907 QFile QTemporaryFile QBuffer \u987a\u5e8f\u8bbf\u95ee\u8bbe\u5907 QProcess QTcpSocket QUdpSocket QSslSocket \u8bbf\u95ee\u65b9\u5f0f QDataStream: \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 QTextStream: \u6587\u672c\u6587\u4ef6\u8bfb\u5199 example \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 Headers #include QFile #include QDataStream #include QImage #include QMap Codes QImage image( :/close.png ); QMap QString, QColor map; map.insert( red , Qt::red); map.insert( green , Qt::green); map.insert( white , Qt::white); QFile file( new.dat ); QDataStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } out.setVersion(QDataStream::Qt_5_9); out quint32(0xdeadabcd) quint32(592) image map; file.close(); QImage image2; QMap QString, QColor map2; quint32 magic, v; QDataStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Read fail ), tr( Read fail )); return; } in.setVersion(QDataStream::Qt_5_9); in magic; if (0xdeadabcd != magic) { QMessageBox::information(NULL, tr( File formation wrong ), tr( File formation wrong )); return; } in v; #if 0 if (v 592) { } else if (v 592) { } #else if (v != 592) { QMessageBox::information(NULL, tr( invalid version number ), tr( invalid version number )); return; } #endif in.setVersion(QDataStream::Qt_5_9); in image2 map2; QMessageBox::information(NULL, tr( read file ), QString( magic: %1, v: %2 ).arg(magic).arg(v)); file.close(); \u6587\u672c\u6587\u4ef6\u8bfb\u5199 Headers #include QFile #include QTextStream Codes QFile file( new.txt ); QTextStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } #if 0 out.setCodec( UTF-8 ); out.setIntegerBase(16); out.setNumberFlags(QTextStream::ShowBase); #else out showbase uppercasedigits hex; #endif out abcdefg 12345; file.close(); QTextStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } QString content = in.readAll(); // in.readline() QMessageBox::information(NULL, tr( read file ), content); file.close();","title":"File"},{"location":"qt/10-io/#file","text":"","title":"File"},{"location":"qt/10-io/#qiodevice","text":"","title":"QIODevice"},{"location":"qt/10-io/#_1","text":"","title":"\u8bbe\u5907\u7c7b\u578b"},{"location":"qt/10-io/#_2","text":"QFile QTemporaryFile QBuffer","title":"\u968f\u673a\u8bbf\u95ee\u8bbe\u5907"},{"location":"qt/10-io/#_3","text":"QProcess QTcpSocket QUdpSocket QSslSocket","title":"\u987a\u5e8f\u8bbf\u95ee\u8bbe\u5907"},{"location":"qt/10-io/#_4","text":"QDataStream: \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 QTextStream: \u6587\u672c\u6587\u4ef6\u8bfb\u5199","title":"\u8bbf\u95ee\u65b9\u5f0f"},{"location":"qt/10-io/#example","text":"","title":"example"},{"location":"qt/10-io/#_5","text":"","title":"\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199"},{"location":"qt/10-io/#headers","text":"#include QFile #include QDataStream #include QImage #include QMap","title":"Headers"},{"location":"qt/10-io/#codes","text":"QImage image( :/close.png ); QMap QString, QColor map; map.insert( red , Qt::red); map.insert( green , Qt::green); map.insert( white , Qt::white); QFile file( new.dat ); QDataStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } out.setVersion(QDataStream::Qt_5_9); out quint32(0xdeadabcd) quint32(592) image map; file.close(); QImage image2; QMap QString, QColor map2; quint32 magic, v; QDataStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Read fail ), tr( Read fail )); return; } in.setVersion(QDataStream::Qt_5_9); in magic; if (0xdeadabcd != magic) { QMessageBox::information(NULL, tr( File formation wrong ), tr( File formation wrong )); return; } in v; #if 0 if (v 592) { } else if (v 592) { } #else if (v != 592) { QMessageBox::information(NULL, tr( invalid version number ), tr( invalid version number )); return; } #endif in.setVersion(QDataStream::Qt_5_9); in image2 map2; QMessageBox::information(NULL, tr( read file ), QString( magic: %1, v: %2 ).arg(magic).arg(v)); file.close();","title":"Codes"},{"location":"qt/10-io/#_6","text":"","title":"\u6587\u672c\u6587\u4ef6\u8bfb\u5199"},{"location":"qt/10-io/#headers_1","text":"#include QFile #include QTextStream","title":"Headers"},{"location":"qt/10-io/#codes_1","text":"QFile file( new.txt ); QTextStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } #if 0 out.setCodec( UTF-8 ); out.setIntegerBase(16); out.setNumberFlags(QTextStream::ShowBase); #else out showbase uppercasedigits hex; #endif out abcdefg 12345; file.close(); QTextStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } QString content = in.readAll(); // in.readline() QMessageBox::information(NULL, tr( read file ), content); file.close();","title":"Codes"},{"location":"qt/11-process/","text":"process example(\u6267\u884c\u4e00\u4e2a\u5916\u90e8\u7a0b\u5e8f\u5e76\u663e\u793a\u7ed3\u679c) Header #include QProcess #include QTextCodec Data memeber and Slots private slots: void showProcess(); void showResults(int exitCode); private: QProcess *p Codes In main: connect(pActionOpen, SIGNAL(triggered()), this, SLOT(showProcess())); void MainWindow::showProcess() { //QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel); QStringList params; params.append( -a ); params.append( -l ); p = new QProcess(this); p- start( ls , params); connect(p, SIGNAL(finished(int)), this, SLOT(showResults(int))); } void MainWindow::showResults(int exitCode) { if (0 == exitCode) { #if defined(Q_OS_WIN32) QTextCodec* gbkCodec = QTextCodec::codecForName( BGK ); QString info = gbkCodec- toUnicode(p- readAll()); #elif defined(Q_OS_LINUX) QTextCodec* utfCodec = QTextCodec::codecForName( UTF-8 ); QString info = utfCodec- toUnicode(p- readAll()); #endif QMessageBox::information(NULL, tr( results ), info); } }","title":"process"},{"location":"qt/11-process/#process","text":"","title":"process"},{"location":"qt/11-process/#example","text":"","title":"example(\u6267\u884c\u4e00\u4e2a\u5916\u90e8\u7a0b\u5e8f\u5e76\u663e\u793a\u7ed3\u679c)"},{"location":"qt/11-process/#header","text":"#include QProcess #include QTextCodec","title":"Header"},{"location":"qt/11-process/#data-memeber-and-slots","text":"private slots: void showProcess(); void showResults(int exitCode); private: QProcess *p","title":"Data memeber and Slots"},{"location":"qt/11-process/#codes","text":"In main: connect(pActionOpen, SIGNAL(triggered()), this, SLOT(showProcess())); void MainWindow::showProcess() { //QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel); QStringList params; params.append( -a ); params.append( -l ); p = new QProcess(this); p- start( ls , params); connect(p, SIGNAL(finished(int)), this, SLOT(showResults(int))); } void MainWindow::showResults(int exitCode) { if (0 == exitCode) { #if defined(Q_OS_WIN32) QTextCodec* gbkCodec = QTextCodec::codecForName( BGK ); QString info = gbkCodec- toUnicode(p- readAll()); #elif defined(Q_OS_LINUX) QTextCodec* utfCodec = QTextCodec::codecForName( UTF-8 ); QString info = utfCodec- toUnicode(p- readAll()); #endif QMessageBox::information(NULL, tr( results ), info); } }","title":"Codes"},{"location":"qt/12-multi-platform/","text":"multi platform #if defined(Q_OS_WIN32) #elif defined(Q_OS_LINUX) #elif defined (Q_OS_UNIX) #endif","title":"multi platform"},{"location":"qt/12-multi-platform/#multi-platform","text":"#if defined(Q_OS_WIN32) #elif defined(Q_OS_LINUX) #elif defined (Q_OS_UNIX) #endif","title":"multi platform"},{"location":"qt/13-library/","text":"shared library Path: Projects - New Project - Library - C++ Library Name: mywin Most of times, we will only build shared library for algo but not GUI, you'd better don't export class but only function from library. Codes to load shared library at program startup mywin_global.h #ifndef MYWIN_GLOBAL_H #define MYWIN_GLOBAL_H #include QtCore/qglobal.h #if defined(MYWIN_LIBRARY) # define MYWINSHARED_EXPORT Q_DECL_EXPORT #else # define MYWINSHARED_EXPORT Q_DECL_IMPORT #endif #endif // MYWIN_GLOBAL_H mywin.h #ifndef MYWIN_H #define MYWIN_H #include QMainWindow #include QPushButton #include QHBoxLayout #include mywin_global.h class MYWINSHARED_EXPORT Mywin: public QMainWindow { public: Mywin(QWidget *parent = 0); private: QHBoxLayout *lout; QWidget *wgt; QPushButton *btn; }; #endif // MYWIN_H mywin.cpp #include mywin.h Mywin::Mywin(QWidget *parent): QMainWindow (parent) { wgt = new QWidget; setCentralWidget(wgt); lout = new QHBoxLayout(wgt); // set parent to wgt to avoid warning wgt- setLayout(lout); btn = new QPushButton(tr( temp )); lout- addWidget(btn); } how to run in new proj compile project create a new project edit newproj.pro add two lines: INCLUDEPATH += /path/to/mywin LIBS += -L/path/to/so -lmywi For example: INCLUDEPATH += ../mywin LIBS += -L../build-mywin-Desktop_Qt_5_12_0_GCC_64bit-Debug -lmywin Or right click on new-proj, click Add Library... - External library - fill Library file and path, qtcreator will add some confs in new-proj.pro automatelly, for example: unix:!macx: LIBS += -L$$PWD/../build-mywin-Desktop_Qt_5_12_0_GCC_64bit-Debug/ -lmywin INCLUDEPATH += $$PWD/../mywin DEPENDPATH += $$PWD/../mywin edit LD_LIBRARY_PATH On left side: click Projects - Build Run - Run In Run Settings - Run Environment - Details: append path to LD_LIBRARY_PATH: old-pathes:/home/xxx/a/codes/qtproj/build-mywin-Desktop_Qt_5_12_0_GCC_64bit-Debug set new-proj to Active Project edit codes in newproj #include mywin.h int main(int argc, char *argv[]) { QApplication a(argc, argv); Mywin w; w.show(); return a.exec(); } build newproj and run how to run without QtCreator copy shared libraries to /usr/local/lib..., etc edit /etc/ld.so.conf... , add your new path to shared libraries, then exec command ldconfig edit environment var: Show values: export $LD_LIBRARY_PATH append value: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:new/path Codes to load shared library at runtime (for example: shared library as a plugin) \u8fd9\u79cd\u8c03\u7528\u65b9\u6cd5\u6ca1\u5fc5\u8981include\u5e93\u7684\u5934\u6587\u4ef6, \u4e5f\u6ca1\u5fc5\u8981\u4fee\u6539 LIBS/INCLUDEPATH \u4f46\u662f\u8981\u6c42\u5728\u5e93\u4e2d\u5bfc\u51fa\u7b26\u53f7\u65f6\u4f7f\u7528 MYTEXTSHARED_EXPORT , \u5e76\u4e00\u822c\u4f7f\u7528 extern \"C\" \u6765\u9632\u6b62C++\u7684\u51fd\u6570\u540d\u7c89\u788e \u6682\u65f6\u6ca1\u5b9e\u9a8c\u6210\u529f\u76f4\u63a5\u4ece\u52a8\u6001\u5e93\u4e2d\u5bfc\u51fa\u7c7b\u7684\u65b9\u6cd5, \u76f4\u63a5\u5bfc\u51fa\u7c7b\u7684\u65f6\u5019\u5bb9\u6613\u9020\u6210Dll Hell\u8fd9\u79cd\u5f88\u96be\u89e3\u51b3\u7684\u95ee\u9898 \u53ef\u4ee5\u5728\u52a8\u6001\u5e93\u4e2d\u5c01\u88c5\u4e00\u4e2a\u51fd\u6570\u6765\u5904\u7406\u7c7b, \u6765\u907f\u514d\u76f4\u63a5\u5bfc\u51fa\u7c7b mywin_global.h The same as previous file mywin.h extern C { // it is important int MYTEXTSHARED_EXPORT try_add(int, int); } mywin.cpp int try_add(int a, int b) { return a + b; } how to run in new proj compile project create a new project edit LD_LIBRARY_PATH (the same as previous step) set new-proj to Active Project edit codes in newproj typedef int (*Myfunc)(int, int); #if 1 QLibrary lib( mytext ); int sum = 0; if (!lib.load()) { QMessageBox::information(NULL, title , not load ); } Myfunc func = (Myfunc)lib.resolve( try_add ); #else // Or you can use static function in QLibrary Myfunc func = (Myfunc)QLibrary::resolve( mytext , try_add ); #endif if (func) { sum = func(100, 200); } else { QMessageBox::information(NULL, title , fun is NULL ); } QMessageBox::information(NULL, title , QString::number(sum)); build newproj and run how to run without QtCreator The same as previous step","title":"shared library"},{"location":"qt/13-library/#shared-library","text":"Path: Projects - New Project - Library - C++ Library Name: mywin Most of times, we will only build shared library for algo but not GUI, you'd better don't export class but only function from library.","title":"shared library"},{"location":"qt/13-library/#codes-to-load-shared-library-at-program-startup","text":"","title":"Codes to load shared library at program startup"},{"location":"qt/13-library/#mywin_globalh","text":"#ifndef MYWIN_GLOBAL_H #define MYWIN_GLOBAL_H #include QtCore/qglobal.h #if defined(MYWIN_LIBRARY) # define MYWINSHARED_EXPORT Q_DECL_EXPORT #else # define MYWINSHARED_EXPORT Q_DECL_IMPORT #endif #endif // MYWIN_GLOBAL_H","title":"mywin_global.h"},{"location":"qt/13-library/#mywinh","text":"#ifndef MYWIN_H #define MYWIN_H #include QMainWindow #include QPushButton #include QHBoxLayout #include mywin_global.h class MYWINSHARED_EXPORT Mywin: public QMainWindow { public: Mywin(QWidget *parent = 0); private: QHBoxLayout *lout; QWidget *wgt; QPushButton *btn; }; #endif // MYWIN_H","title":"mywin.h"},{"location":"qt/13-library/#mywincpp","text":"#include mywin.h Mywin::Mywin(QWidget *parent): QMainWindow (parent) { wgt = new QWidget; setCentralWidget(wgt); lout = new QHBoxLayout(wgt); // set parent to wgt to avoid warning wgt- setLayout(lout); btn = new QPushButton(tr( temp )); lout- addWidget(btn); }","title":"mywin.cpp"},{"location":"qt/13-library/#how-to-run-in-new-proj","text":"compile project create a new project edit newproj.pro add two lines: INCLUDEPATH += /path/to/mywin LIBS += -L/path/to/so -lmywi For example: INCLUDEPATH += ../mywin LIBS += -L../build-mywin-Desktop_Qt_5_12_0_GCC_64bit-Debug -lmywin Or right click on new-proj, click Add Library... - External library - fill Library file and path, qtcreator will add some confs in new-proj.pro automatelly, for example: unix:!macx: LIBS += -L$$PWD/../build-mywin-Desktop_Qt_5_12_0_GCC_64bit-Debug/ -lmywin INCLUDEPATH += $$PWD/../mywin DEPENDPATH += $$PWD/../mywin edit LD_LIBRARY_PATH On left side: click Projects - Build Run - Run In Run Settings - Run Environment - Details: append path to LD_LIBRARY_PATH: old-pathes:/home/xxx/a/codes/qtproj/build-mywin-Desktop_Qt_5_12_0_GCC_64bit-Debug set new-proj to Active Project edit codes in newproj #include mywin.h int main(int argc, char *argv[]) { QApplication a(argc, argv); Mywin w; w.show(); return a.exec(); } build newproj and run","title":"how to run in new proj"},{"location":"qt/13-library/#how-to-run-without-qtcreator","text":"copy shared libraries to /usr/local/lib..., etc edit /etc/ld.so.conf... , add your new path to shared libraries, then exec command ldconfig edit environment var: Show values: export $LD_LIBRARY_PATH append value: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:new/path","title":"how to run without QtCreator"},{"location":"qt/13-library/#codes-to-load-shared-library-at-runtime-for-example-shared-library-as-a-plugin","text":"\u8fd9\u79cd\u8c03\u7528\u65b9\u6cd5\u6ca1\u5fc5\u8981include\u5e93\u7684\u5934\u6587\u4ef6, \u4e5f\u6ca1\u5fc5\u8981\u4fee\u6539 LIBS/INCLUDEPATH \u4f46\u662f\u8981\u6c42\u5728\u5e93\u4e2d\u5bfc\u51fa\u7b26\u53f7\u65f6\u4f7f\u7528 MYTEXTSHARED_EXPORT , \u5e76\u4e00\u822c\u4f7f\u7528 extern \"C\" \u6765\u9632\u6b62C++\u7684\u51fd\u6570\u540d\u7c89\u788e \u6682\u65f6\u6ca1\u5b9e\u9a8c\u6210\u529f\u76f4\u63a5\u4ece\u52a8\u6001\u5e93\u4e2d\u5bfc\u51fa\u7c7b\u7684\u65b9\u6cd5, \u76f4\u63a5\u5bfc\u51fa\u7c7b\u7684\u65f6\u5019\u5bb9\u6613\u9020\u6210Dll Hell\u8fd9\u79cd\u5f88\u96be\u89e3\u51b3\u7684\u95ee\u9898 \u53ef\u4ee5\u5728\u52a8\u6001\u5e93\u4e2d\u5c01\u88c5\u4e00\u4e2a\u51fd\u6570\u6765\u5904\u7406\u7c7b, \u6765\u907f\u514d\u76f4\u63a5\u5bfc\u51fa\u7c7b","title":"Codes to load shared library at runtime (for example: shared library as a plugin)"},{"location":"qt/13-library/#mywin_globalh_1","text":"The same as previous file","title":"mywin_global.h"},{"location":"qt/13-library/#mywinh_1","text":"extern C { // it is important int MYTEXTSHARED_EXPORT try_add(int, int); }","title":"mywin.h"},{"location":"qt/13-library/#mywincpp_1","text":"int try_add(int a, int b) { return a + b; }","title":"mywin.cpp"},{"location":"qt/13-library/#how-to-run-in-new-proj_1","text":"compile project create a new project edit LD_LIBRARY_PATH (the same as previous step) set new-proj to Active Project edit codes in newproj typedef int (*Myfunc)(int, int); #if 1 QLibrary lib( mytext ); int sum = 0; if (!lib.load()) { QMessageBox::information(NULL, title , not load ); } Myfunc func = (Myfunc)lib.resolve( try_add ); #else // Or you can use static function in QLibrary Myfunc func = (Myfunc)QLibrary::resolve( mytext , try_add ); #endif if (func) { sum = func(100, 200); } else { QMessageBox::information(NULL, title , fun is NULL ); } QMessageBox::information(NULL, title , QString::number(sum)); build newproj and run","title":"how to run in new proj"},{"location":"qt/13-library/#how-to-run-without-qtcreator_1","text":"The same as previous step","title":"how to run without QtCreator"},{"location":"qt/15-ui-framework/","text":"framework project if generate form ui codes mainwindow.h #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); }; #endif // MAINWINDOW_H mainwindow.cpp #include mainwindow.h MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { } MainWindow::~MainWindow() { } main.cpp #include mainwindow.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); MainWindow w; w.show(); return a.exec(); } project if no generate form ui codes mainwindow.h #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private: Ui::MainWindow *ui; }; #endif // MAINWINDOW_H mainwindow.cpp #include mainwindow.h #include ui_mainwindow.h MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); } MainWindow::~MainWindow() { delete ui; } mainwindow.ui ui version= 4.0 class MainWindow /class widget class= QMainWindow name= MainWindow property name= geometry rect x 0 /x y 0 /y width 400 /width height 300 /height /rect /property property name= windowTitle string MainWindow /string /property widget class= QMenuBar name= menuBar / widget class= QToolBar name= mainToolBar / widget class= QWidget name= centralWidget / widget class= QStatusBar name= statusBar / /widget layoutDefault spacing= 6 margin= 11 / pixmapfunction /pixmapfunction resources/ connections/ /ui main.cpp #include mainwindow.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); MainWindow w; w.show(); return a.exec(); } explaination mainwindow.ui is a xml file, it generated with ui designer. When you edit widgets or signal/slot, qtcreator will update this file for some nodes. build the project, qtcreator generate moc_mainwindow.cpp moc_predefs.h ui_mainwindow.h , ui_mainwindow.h is generated based on mainwind.ui in ui_mainwindow.h , it define class Ui_MainWindow and namespace Ui , then define class MainWindow in namespace Ui , it is a sub-class of Ui_MainWindow there is a public member function in Ui::MainWindow , the prototype is void Ui::MainWindow setupUi(QMainWindow *MainWindow); , this interface will setup widgets to parameter MainWindow based on mainwindow.ui in mainwindow.h , it define class MainWindow inhert from QMainWindow , this class is different from class Ui::MainWindow defined in ui_mainwindow.h . There is private data member Ui::MainWindow *ui in class MainWindow . in mainwindow.cpp , call constructor of parent class QMainWindow and init data member ui by new Ui::MainWindow when realize constructor of class MainWindow , then call ui- setupUi(this); in Ui::MainWindows - setupUi , it accept object of class MainWindow , then init widgets based on mainwindow.ui (xml file) for this pointer (object of class MainWindow ). in main.cpp , it create a instance of class MainWindow and show it. then if you want to handle widgets of ui, you can ui- xxx- fun() in class MainWindow . you can exec: uic mainwindow.ui ui_mainwindow.h to generate new header file if some problems in it.","title":"framework"},{"location":"qt/15-ui-framework/#framework","text":"","title":"framework"},{"location":"qt/15-ui-framework/#project-if-generate-form-ui","text":"","title":"project if generate form ui"},{"location":"qt/15-ui-framework/#codes","text":"","title":"codes"},{"location":"qt/15-ui-framework/#mainwindowh","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); }; #endif // MAINWINDOW_H","title":"mainwindow.h"},{"location":"qt/15-ui-framework/#mainwindowcpp","text":"#include mainwindow.h MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { } MainWindow::~MainWindow() { }","title":"mainwindow.cpp"},{"location":"qt/15-ui-framework/#maincpp","text":"#include mainwindow.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); MainWindow w; w.show(); return a.exec(); }","title":"main.cpp"},{"location":"qt/15-ui-framework/#project-if-no-generate-form-ui","text":"","title":"project if no generate form ui"},{"location":"qt/15-ui-framework/#codes_1","text":"","title":"codes"},{"location":"qt/15-ui-framework/#mainwindowh_1","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private: Ui::MainWindow *ui; }; #endif // MAINWINDOW_H","title":"mainwindow.h"},{"location":"qt/15-ui-framework/#mainwindowcpp_1","text":"#include mainwindow.h #include ui_mainwindow.h MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); } MainWindow::~MainWindow() { delete ui; }","title":"mainwindow.cpp"},{"location":"qt/15-ui-framework/#mainwindowui","text":"ui version= 4.0 class MainWindow /class widget class= QMainWindow name= MainWindow property name= geometry rect x 0 /x y 0 /y width 400 /width height 300 /height /rect /property property name= windowTitle string MainWindow /string /property widget class= QMenuBar name= menuBar / widget class= QToolBar name= mainToolBar / widget class= QWidget name= centralWidget / widget class= QStatusBar name= statusBar / /widget layoutDefault spacing= 6 margin= 11 / pixmapfunction /pixmapfunction resources/ connections/ /ui","title":"mainwindow.ui"},{"location":"qt/15-ui-framework/#maincpp_1","text":"#include mainwindow.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); MainWindow w; w.show(); return a.exec(); }","title":"main.cpp"},{"location":"qt/15-ui-framework/#explaination","text":"mainwindow.ui is a xml file, it generated with ui designer. When you edit widgets or signal/slot, qtcreator will update this file for some nodes. build the project, qtcreator generate moc_mainwindow.cpp moc_predefs.h ui_mainwindow.h , ui_mainwindow.h is generated based on mainwind.ui in ui_mainwindow.h , it define class Ui_MainWindow and namespace Ui , then define class MainWindow in namespace Ui , it is a sub-class of Ui_MainWindow there is a public member function in Ui::MainWindow , the prototype is void Ui::MainWindow setupUi(QMainWindow *MainWindow); , this interface will setup widgets to parameter MainWindow based on mainwindow.ui in mainwindow.h , it define class MainWindow inhert from QMainWindow , this class is different from class Ui::MainWindow defined in ui_mainwindow.h . There is private data member Ui::MainWindow *ui in class MainWindow . in mainwindow.cpp , call constructor of parent class QMainWindow and init data member ui by new Ui::MainWindow when realize constructor of class MainWindow , then call ui- setupUi(this); in Ui::MainWindows - setupUi , it accept object of class MainWindow , then init widgets based on mainwindow.ui (xml file) for this pointer (object of class MainWindow ). in main.cpp , it create a instance of class MainWindow and show it. then if you want to handle widgets of ui, you can ui- xxx- fun() in class MainWindow . you can exec: uic mainwindow.ui ui_mainwindow.h to generate new header file if some problems in it.","title":"explaination"},{"location":"qt/16-ui-design/","text":"ui design resource add Qt Resource File add prefix add icon files menu Type here on top ( name( N) ) add slot function add connect in constructor in Action Editor , add icon toolbar drag action from Action Editor to toolbar add new toolbar: Add Tool Bar on MainWindow signal/slot F4 to Edit Signals/Slots internal slot: drag from one signal widgit to slot widget, then edit self-defined slot to button: right click to Go to slot... , then connect in constructor name of widget right click to Change objectName hide echo in QLineEdit set echoMode to Password special: ollydbg on windows, EDB on linux fixed size set maximumSize and minimuSize to be the same about Qt qApp is global instance of QCoreApplication, so: connect(ui- actionAboutQt_Q, SIGNAL(triggered()), qApp, SLOT(aboutQt())); add 1 more Dialog right click project Add New... - Files and Classes - Qt - At Designer Form Class Dialog without Buttons modify class name include in mainwindow.cpp AboutDialog *aboutDlg = new AboutDialog; aboutDlg- show(); in mainwindow.cpp show gif add gif file to resource add a Label in a dialog (for example) #include QMovie add private data member QMovie *movie; add 2 buttons set movie in label, connect 2 signal/slot(s) #include aboutdialog.h #include ui_aboutdialog.h AboutDialog::AboutDialog(QWidget *parent) : QDialog(parent), ui(new Ui::AboutDialog) { ui- setupUi(this); movie = new QMovie( :/resource/icons/resource/play.gif ); ui- labelMovie- setMovie(movie); connect(ui- pushButtonStart, SIGNAL(clicked()), movie, SLOT(start())); connect(ui- pushButtonStop, SIGNAL(clicked()), movie, SLOT(stop())); movie- start(); } AboutDialog::~AboutDialog() { delete movie; delete ui; } mediaplayer splash screen #include mainwindow.h #include QApplication #include QPixmap #include QSplashScreen int main(int argc, char *argv[]) { QApplication a(argc, argv); QPixmap pixmap( :/resource/icons/resource/start.jpg ); QSplashScreen startScreen(pixmap); startScreen.show(); // do some initialize here { for (int i = 0; i 300000000; i ++); // } MainWindow w; w.show(); startScreen.finish( w); return a.exec(); }","title":"ui design"},{"location":"qt/16-ui-design/#ui-design","text":"","title":"ui design"},{"location":"qt/16-ui-design/#resource","text":"add Qt Resource File add prefix add icon files","title":"resource"},{"location":"qt/16-ui-design/#menu","text":"Type here on top ( name( N) ) add slot function add connect in constructor in Action Editor , add icon","title":"menu"},{"location":"qt/16-ui-design/#toolbar","text":"drag action from Action Editor to toolbar add new toolbar: Add Tool Bar on MainWindow","title":"toolbar"},{"location":"qt/16-ui-design/#signalslot","text":"F4 to Edit Signals/Slots internal slot: drag from one signal widgit to slot widget, then edit self-defined slot to button: right click to Go to slot... , then connect in constructor","title":"signal/slot"},{"location":"qt/16-ui-design/#name-of-widget","text":"right click to Change objectName","title":"name of widget"},{"location":"qt/16-ui-design/#hide-echo-in-qlineedit","text":"set echoMode to Password special: ollydbg on windows, EDB on linux","title":"hide echo in QLineEdit"},{"location":"qt/16-ui-design/#fixed-size","text":"set maximumSize and minimuSize to be the same","title":"fixed size"},{"location":"qt/16-ui-design/#about-qt","text":"qApp is global instance of QCoreApplication, so: connect(ui- actionAboutQt_Q, SIGNAL(triggered()), qApp, SLOT(aboutQt()));","title":"about Qt"},{"location":"qt/16-ui-design/#add-1-more-dialog","text":"right click project Add New... - Files and Classes - Qt - At Designer Form Class Dialog without Buttons modify class name include in mainwindow.cpp AboutDialog *aboutDlg = new AboutDialog; aboutDlg- show(); in mainwindow.cpp","title":"add 1 more Dialog"},{"location":"qt/16-ui-design/#show-gif","text":"add gif file to resource add a Label in a dialog (for example) #include QMovie add private data member QMovie *movie; add 2 buttons set movie in label, connect 2 signal/slot(s) #include aboutdialog.h #include ui_aboutdialog.h AboutDialog::AboutDialog(QWidget *parent) : QDialog(parent), ui(new Ui::AboutDialog) { ui- setupUi(this); movie = new QMovie( :/resource/icons/resource/play.gif ); ui- labelMovie- setMovie(movie); connect(ui- pushButtonStart, SIGNAL(clicked()), movie, SLOT(start())); connect(ui- pushButtonStop, SIGNAL(clicked()), movie, SLOT(stop())); movie- start(); } AboutDialog::~AboutDialog() { delete movie; delete ui; }","title":"show gif"},{"location":"qt/16-ui-design/#mediaplayer","text":"","title":"mediaplayer"},{"location":"qt/16-ui-design/#splash-screen","text":"#include mainwindow.h #include QApplication #include QPixmap #include QSplashScreen int main(int argc, char *argv[]) { QApplication a(argc, argv); QPixmap pixmap( :/resource/icons/resource/start.jpg ); QSplashScreen startScreen(pixmap); startScreen.show(); // do some initialize here { for (int i = 0; i 300000000; i ++); // } MainWindow w; w.show(); startScreen.finish( w); return a.exec(); }","title":"splash screen"},{"location":"qt/17-media/","text":"media install gstreamer official link: https://gstreamer.freedesktop.org link for arch: https://wiki.archlinux.org/index.php/GStreamer install (pacman -S xxx): gstreamer, gst-libav, gst-plugin-good for video see: https://aur.archlinux.org/packages/gst-plugin-libde25 for gst-plugin-libde265 git clone https://github.com/strukturag/gstreamer-libde265 ./autogen.sh ./configure --prefix=/usr make make install pacman -S libde265 for high speed, install gstreamer-vaapi config append multimedia and multimediawidgets (if you want to play video) to QT += core gui in project.pro firstly. #include QMediaPlayer #include QVideoWidget // if you want to play video #include QMediaPlaylist // if you want to play media list add data member in class QMediaPlayer player; QVideoWidget videoWidget; // if you want to play video QMediaPlaylist list; // if you want to play media list add 3 buttons to Open Pause Stop slots for example #include mainwindow.h #include ui_mainwindow.h #include QStringList #include QFileDialog #include QUrl #include QDir #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); } MainWindow::~MainWindow() { delete ui; } void MainWindow::on_pushButtonOpen_clicked() { #if 0 // for open mp4 media list QStringList fileList = QFileDialog::getOpenFileNames(this, tr( Open meida files ), QDir::currentPath(), Media files(*.mp3 *.mp4) ); if (!fileList.isEmpty()) { QStringList::const_iterator const_iterator; for (const_iterator = fileList.constBegin(); const_iterator != fileList.constEnd(); const_iterator ++) { list.addMedia(QUrl::fromLocalFile(*const_iterator)); } list.setCurrentIndex(1); player.setPlaylist( list); player.setVolume(40); player.setVideoOutput( videoWidget); videoWidget.show(); player.play(); #endif QString file = QFileDialog::getOpenFileName(this, tr( Open meida file ), QDir::currentPath(), Media files(*.mp3 *.mp4) ); if (!file.isEmpty()) { // only special media player.setMedia(QUrl::fromLocalFile(file)); player.setVolume(40); if (file.endsWith( mp3 , Qt::CaseInsensitive)) { player.play(); } else if (file.endsWith( mp4 , Qt::CaseInsensitive)) { player.setVideoOutput( videoWidget); videoWidget.show(); videoWidget.setFullScreen(false); player.play(); } else { QMessageBox::information(this, tr( Formation ), tr( Formation invalid )); } } } void MainWindow::on_pushButtonStop_clicked() { player.stop(); } void MainWindow::on_pushButtonPause_clicked() { player.pause(); }","title":"media"},{"location":"qt/17-media/#media","text":"","title":"media"},{"location":"qt/17-media/#install-gstreamer","text":"official link: https://gstreamer.freedesktop.org link for arch: https://wiki.archlinux.org/index.php/GStreamer install (pacman -S xxx): gstreamer, gst-libav, gst-plugin-good for video see: https://aur.archlinux.org/packages/gst-plugin-libde25 for gst-plugin-libde265 git clone https://github.com/strukturag/gstreamer-libde265 ./autogen.sh ./configure --prefix=/usr make make install pacman -S libde265 for high speed, install gstreamer-vaapi","title":"install gstreamer"},{"location":"qt/17-media/#config","text":"append multimedia and multimediawidgets (if you want to play video) to QT += core gui in project.pro firstly. #include QMediaPlayer #include QVideoWidget // if you want to play video #include QMediaPlaylist // if you want to play media list add data member in class QMediaPlayer player; QVideoWidget videoWidget; // if you want to play video QMediaPlaylist list; // if you want to play media list add 3 buttons to Open Pause Stop","title":"config"},{"location":"qt/17-media/#slots-for-example","text":"#include mainwindow.h #include ui_mainwindow.h #include QStringList #include QFileDialog #include QUrl #include QDir #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); } MainWindow::~MainWindow() { delete ui; } void MainWindow::on_pushButtonOpen_clicked() { #if 0 // for open mp4 media list QStringList fileList = QFileDialog::getOpenFileNames(this, tr( Open meida files ), QDir::currentPath(), Media files(*.mp3 *.mp4) ); if (!fileList.isEmpty()) { QStringList::const_iterator const_iterator; for (const_iterator = fileList.constBegin(); const_iterator != fileList.constEnd(); const_iterator ++) { list.addMedia(QUrl::fromLocalFile(*const_iterator)); } list.setCurrentIndex(1); player.setPlaylist( list); player.setVolume(40); player.setVideoOutput( videoWidget); videoWidget.show(); player.play(); #endif QString file = QFileDialog::getOpenFileName(this, tr( Open meida file ), QDir::currentPath(), Media files(*.mp3 *.mp4) ); if (!file.isEmpty()) { // only special media player.setMedia(QUrl::fromLocalFile(file)); player.setVolume(40); if (file.endsWith( mp3 , Qt::CaseInsensitive)) { player.play(); } else if (file.endsWith( mp4 , Qt::CaseInsensitive)) { player.setVideoOutput( videoWidget); videoWidget.show(); videoWidget.setFullScreen(false); player.play(); } else { QMessageBox::information(this, tr( Formation ), tr( Formation invalid )); } } } void MainWindow::on_pushButtonStop_clicked() { player.stop(); } void MainWindow::on_pushButtonPause_clicked() { player.pause(); }","title":"slots for example"},{"location":"qt/18-package-deploy/","text":"package and deploy official official document https://doc.qt.io/qt-5/deployment.html https://doc.qt.io/qt-5/linux-deployment.html 2 types for deploying static links shared libraries (ldd to get dependencies) appimage for static links donwload and install linuxdeployqt download linuxdeployqt-continuous-x86_64.AppImage from https://github.com/probonopd/linuxdeployqt/releases mv linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt chmod a+x /usr/local/bin/linuxdeployqt linuxdeplotqt --version patchelf download patchelf-0.9.tar.gz from https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz , and install it. or pacman -S patchelf appimagetool download appimagetool from https://github.com/probonopd/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool chmod a+x /usr/local/bin/appimagetool how to linuxdeployqt mkdir newdir copy your bin (app-binary) into newdir exec linuxdepliyqt app-binary -appimage you can see app-binary.Appimage in newdir how to add icons search \"Setting the Application Icon\" in qtcreator, see: Setting the Application Icon on Common Linux Desktops setIcon to add icon on statusvar and title to add icon to app-binary itself (neet to try this case) 1. only change pro file in newpro.pro, add: RC_ICONS = logo.ico, add logo.ico in root dir of newpro 2. new logo.rc content: IDI_ICON1 ICON DISCARDABLE logo.ico in pro file: RC_FILE = logo.rc rebuild all","title":"package and deploy"},{"location":"qt/18-package-deploy/#package-and-deploy","text":"","title":"package and deploy"},{"location":"qt/18-package-deploy/#official","text":"","title":"official"},{"location":"qt/18-package-deploy/#official-document","text":"https://doc.qt.io/qt-5/deployment.html https://doc.qt.io/qt-5/linux-deployment.html","title":"official document"},{"location":"qt/18-package-deploy/#2-types-for-deploying","text":"static links shared libraries (ldd to get dependencies)","title":"2 types for deploying"},{"location":"qt/18-package-deploy/#appimage-for-static-links","text":"","title":"appimage for static links"},{"location":"qt/18-package-deploy/#donwload-and-install","text":"","title":"donwload and install"},{"location":"qt/18-package-deploy/#linuxdeployqt","text":"download linuxdeployqt-continuous-x86_64.AppImage from https://github.com/probonopd/linuxdeployqt/releases mv linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt chmod a+x /usr/local/bin/linuxdeployqt linuxdeplotqt --version","title":"linuxdeployqt"},{"location":"qt/18-package-deploy/#patchelf","text":"download patchelf-0.9.tar.gz from https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz , and install it. or pacman -S patchelf","title":"patchelf"},{"location":"qt/18-package-deploy/#appimagetool","text":"download appimagetool from https://github.com/probonopd/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool chmod a+x /usr/local/bin/appimagetool","title":"appimagetool"},{"location":"qt/18-package-deploy/#how-to-linuxdeployqt","text":"mkdir newdir copy your bin (app-binary) into newdir exec linuxdepliyqt app-binary -appimage you can see app-binary.Appimage in newdir","title":"how to linuxdeployqt"},{"location":"qt/18-package-deploy/#how-to-add-icons","text":"search \"Setting the Application Icon\" in qtcreator, see: Setting the Application Icon on Common Linux Desktops setIcon to add icon on statusvar and title to add icon to app-binary itself (neet to try this case) 1. only change pro file in newpro.pro, add: RC_ICONS = logo.ico, add logo.ico in root dir of newpro 2. new logo.rc content: IDI_ICON1 ICON DISCARDABLE logo.ico in pro file: RC_FILE = logo.rc rebuild all","title":"how to add icons"},{"location":"qt/19-dir-file/","text":"some special interfaces for dir and file dir #include QDir QDir::tempPath() QDir::rootPath() QDir::homePath() QTemporaryDir dir; if (dir.isValid()) { // dir.path() } file QTemporaryDir file; if (file.open()) { // file.fileName() } file info #include QString #include QFileDialog #include QFile #include QFileInfo #include QDateTime QString strFileName; strFileName = QFileDialog::getOpenFileName(...); if (strFileName.isEmpty()) { return; } QFileInfo fileInfo(strFileName); fileInfo.size(); fileInfo.lastModified().toString( yyyy-MM-dd hh:mm:ss ); fileInfo.lastRead().toString( yyyy-MM-dd hh:mm:ss ); fileInfo.isDir();","title":"some special interfaces for dir and file"},{"location":"qt/19-dir-file/#some-special-interfaces-for-dir-and-file","text":"","title":"some special interfaces for dir and file"},{"location":"qt/19-dir-file/#dir","text":"#include QDir QDir::tempPath() QDir::rootPath() QDir::homePath() QTemporaryDir dir; if (dir.isValid()) { // dir.path() }","title":"dir"},{"location":"qt/19-dir-file/#file","text":"QTemporaryDir file; if (file.open()) { // file.fileName() }","title":"file"},{"location":"qt/19-dir-file/#file-info","text":"#include QString #include QFileDialog #include QFile #include QFileInfo #include QDateTime QString strFileName; strFileName = QFileDialog::getOpenFileName(...); if (strFileName.isEmpty()) { return; } QFileInfo fileInfo(strFileName); fileInfo.size(); fileInfo.lastModified().toString( yyyy-MM-dd hh:mm:ss ); fileInfo.lastRead().toString( yyyy-MM-dd hh:mm:ss ); fileInfo.isDir();","title":"file info"},{"location":"qt/2-hello-world/","text":"Hello World Create Qt Widgets Application with QWidget as base class (disable Generate form ) Codes In hellowrld.h #ifndef HELLOWORLD_H #define HELLOWORLD_H #include QWidget #include QLabel #include QPushButton #include QHBoxLayout class HelloWorld : public QWidget { Q_OBJECT public: HelloWorld(QWidget *parent = 0); ~HelloWorld(); private: QLabel *pLabel; QPushButton * pBtn; QHBoxLayout *pLayout; }; #endif // HELLOWORLD_ In helloworld.cpp #include helloworld.h HelloWorld::HelloWorld(QWidget *parent) : QWidget(parent) { pLabel = new QLabel(tr( Hello World! )); pBtn = new QPushButton(tr( Exit )); pLayout = new QHBoxLayout(this); pLayout- addWidget(pLabel); pLayout- addWidget(pBtn); connect(pBtn, SIGNAL(clicked()), this, SLOT(close())); // signal-slot setLayout(pLayout); setFixedSize(200, 100); setWindowTitle(tr( My Hello World )); } HelloWorld::~HelloWorld() { } In main.cpp #include helloworld.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); HelloWorld w; w.show(); return a.exec(); }","title":"Hello World"},{"location":"qt/2-hello-world/#hello-world","text":"","title":"Hello World"},{"location":"qt/2-hello-world/#create-qt-widgets-application-with-qwidget-as-base-class-disable-generate-form","text":"","title":"Create Qt Widgets Application with QWidget as base class (disable Generate form)"},{"location":"qt/2-hello-world/#codes","text":"","title":"Codes"},{"location":"qt/2-hello-world/#in-hellowrldh","text":"#ifndef HELLOWORLD_H #define HELLOWORLD_H #include QWidget #include QLabel #include QPushButton #include QHBoxLayout class HelloWorld : public QWidget { Q_OBJECT public: HelloWorld(QWidget *parent = 0); ~HelloWorld(); private: QLabel *pLabel; QPushButton * pBtn; QHBoxLayout *pLayout; }; #endif // HELLOWORLD_","title":"In hellowrld.h"},{"location":"qt/2-hello-world/#in-helloworldcpp","text":"#include helloworld.h HelloWorld::HelloWorld(QWidget *parent) : QWidget(parent) { pLabel = new QLabel(tr( Hello World! )); pBtn = new QPushButton(tr( Exit )); pLayout = new QHBoxLayout(this); pLayout- addWidget(pLabel); pLayout- addWidget(pBtn); connect(pBtn, SIGNAL(clicked()), this, SLOT(close())); // signal-slot setLayout(pLayout); setFixedSize(200, 100); setWindowTitle(tr( My Hello World )); } HelloWorld::~HelloWorld() { }","title":"In helloworld.cpp"},{"location":"qt/2-hello-world/#in-maincpp","text":"#include helloworld.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); HelloWorld w; w.show(); return a.exec(); }","title":"In main.cpp"},{"location":"qt/20-listwidget/","text":"QListWidget Add and remove item in QListWidget Include #include QString #include QMessageBox #include QListWidgetItem #include QListWidget #inlcude QKeyEvent Edit in mainwindow.ui Add the following componments: 1 QListWidget 1 QLineEdit 3 QPushButton(s), one for add, one for delete, on for show entries in directory mainwindow.h #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow #include QListWidgetItem namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private slots: void on_pushButtonAdd_clicked(); void on_pushButtonDelete_clicked(); void on_pushButtonShowDir_clicked(); void listWidgetCitiesDoubleClickedSlot(QListWidgetItem *item); private: Ui::MainWindow *ui; protected: virtual void keyPressEvent(QKeyEvent *event); }; #endif // MAINWINDOW_H mainwindow.cpp #include mainwindow.h #include ui_mainwindow.h #include QString #include QMessageBox #include QListWidgetItem #include QListWidget #include QKeyEvent #include QDir #include QStringList #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); connect(ui- lineEditCity, SIGNAL(returnPressed()), this, SLOT(on_pushButtonAdd_clicked())); connect(ui- listWidgetCities, SIGNAL(itemDoubleClicked(QListWidgetItem *item)), this, SLOT(listWidgetCitiesDoubleClickedSlot(QListWidgetItem *item))); } MainWindow::~MainWindow() { delete ui; } void MainWindow::on_pushButtonAdd_clicked() { QString cityName = ui- lineEditCity- text(); if (cityName.isEmpty()) { return; } if (!ui- listWidgetCities- findItems(cityName, Qt::MatchWildcard).isEmpty()) { QMessageBox::information(this, tr( Duplicated item ), QString( %1 is duplicated ).arg(cityName)); return; } QListWidgetItem *item = new QListWidgetItem(cityName); ui- listWidgetCities- addItem(item); ui- lineEditCity- clear(); } void MainWindow::on_pushButtonDelete_clicked() { ui- listWidgetCities- removeItemWidget(ui- listWidgetCities- takeItem(ui- listWidgetCities- currentRow())); } void MainWindow::keyPressEvent(QKeyEvent *event) { if (event- key() == Qt::Key_Delete) { ui- listWidgetCities- removeItemWidget(ui- listWidgetCities- takeItem(ui- listWidgetCities- currentRow())); return; } QWidget::keyPressEvent(event); } void MainWindow::on_pushButtonShowDir_clicked() { ui- listWidgetCities- clear(); QDir dir = QDir::currentPath(); QStringList strList = dir.entryList(); QStringList::const_iterator citer = strList.constBegin(); while (citer != strList.constEnd()) { if (!citer- startsWith( . ) !citer- startsWith( .. )) { ui- listWidgetCities- addItem(*citer); } citer ++; } } void MainWindow::listWidgetCitiesDoubleClickedSlot(QListWidgetItem *item) { QMessageBox::information(this, tr( info ), tr( information )); }","title":"QListWidget"},{"location":"qt/20-listwidget/#qlistwidget","text":"Add and remove item in QListWidget","title":"QListWidget"},{"location":"qt/20-listwidget/#include","text":"#include QString #include QMessageBox #include QListWidgetItem #include QListWidget #inlcude QKeyEvent","title":"Include"},{"location":"qt/20-listwidget/#edit-in-mainwindowui","text":"Add the following componments: 1 QListWidget 1 QLineEdit 3 QPushButton(s), one for add, one for delete, on for show entries in directory","title":"Edit in mainwindow.ui"},{"location":"qt/20-listwidget/#mainwindowh","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow #include QListWidgetItem namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private slots: void on_pushButtonAdd_clicked(); void on_pushButtonDelete_clicked(); void on_pushButtonShowDir_clicked(); void listWidgetCitiesDoubleClickedSlot(QListWidgetItem *item); private: Ui::MainWindow *ui; protected: virtual void keyPressEvent(QKeyEvent *event); }; #endif // MAINWINDOW_H","title":"mainwindow.h"},{"location":"qt/20-listwidget/#mainwindowcpp","text":"#include mainwindow.h #include ui_mainwindow.h #include QString #include QMessageBox #include QListWidgetItem #include QListWidget #include QKeyEvent #include QDir #include QStringList #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); connect(ui- lineEditCity, SIGNAL(returnPressed()), this, SLOT(on_pushButtonAdd_clicked())); connect(ui- listWidgetCities, SIGNAL(itemDoubleClicked(QListWidgetItem *item)), this, SLOT(listWidgetCitiesDoubleClickedSlot(QListWidgetItem *item))); } MainWindow::~MainWindow() { delete ui; } void MainWindow::on_pushButtonAdd_clicked() { QString cityName = ui- lineEditCity- text(); if (cityName.isEmpty()) { return; } if (!ui- listWidgetCities- findItems(cityName, Qt::MatchWildcard).isEmpty()) { QMessageBox::information(this, tr( Duplicated item ), QString( %1 is duplicated ).arg(cityName)); return; } QListWidgetItem *item = new QListWidgetItem(cityName); ui- listWidgetCities- addItem(item); ui- lineEditCity- clear(); } void MainWindow::on_pushButtonDelete_clicked() { ui- listWidgetCities- removeItemWidget(ui- listWidgetCities- takeItem(ui- listWidgetCities- currentRow())); } void MainWindow::keyPressEvent(QKeyEvent *event) { if (event- key() == Qt::Key_Delete) { ui- listWidgetCities- removeItemWidget(ui- listWidgetCities- takeItem(ui- listWidgetCities- currentRow())); return; } QWidget::keyPressEvent(event); } void MainWindow::on_pushButtonShowDir_clicked() { ui- listWidgetCities- clear(); QDir dir = QDir::currentPath(); QStringList strList = dir.entryList(); QStringList::const_iterator citer = strList.constBegin(); while (citer != strList.constEnd()) { if (!citer- startsWith( . ) !citer- startsWith( .. )) { ui- listWidgetCities- addItem(*citer); } citer ++; } } void MainWindow::listWidgetCitiesDoubleClickedSlot(QListWidgetItem *item) { QMessageBox::information(this, tr( info ), tr( information )); }","title":"mainwindow.cpp"},{"location":"qt/21-grabwin/","text":"grab window Componments 1 label 1 groupbox (1 label, 1 spinbox, 1 checkbox) 3 pushbuttons (1 grab, 1 save, 1 quit) Description we can play video by continue to grab and show some pictures (for example 5 pics / 1 minute) overload contextMenuEvent from QWidget to right-click menu Header #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow #include QTimer #include QScreen #include QPixmap // For right-click menu (Save as on pixmap) #include QContextMenuEvent namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private slots: void on_pushButtonQuit_clicked(); void on_pushButtonGrab_clicked(); void timeoutForGrab(); void on_pushButtonSave_clicked(); // For right-click menu void grabSaveAsAction(); private: Ui::MainWindow *ui; QTimer *timer; QScreen *screen; QPixmap pixmap; // For right-click menu, use data member to avoid memory QMenu *menu; QAction *actionSaveAs; private: void saveGrabToClipboard(); protected: // For right-click menu void contextMenuEvent(QContextMenuEvent *event); }; #endif // MAINWINDOW_H Cpp #include mainwindow.h #include ui_mainwindow.h #include QMessageBox #include QScreen #include QPixmap #include QDesktopWidget #include QFileDialog #include QDesktopServices #include QStandardPaths #include QClipboard // For right-click menu #include QMenu #include QAction #include QCursor MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); timer = new QTimer; screen = QApplication::primaryScreen(); menu = new QMenu(this); actionSaveAs = new QAction(this); actionSaveAs- setText(tr( Save as )); connect(actionSaveAs, SIGNAL(triggered()), this, SLOT(grabSaveAsAction())); menu- addAction(actionSaveAs); } MainWindow::~MainWindow() { delete timer; delete screen; delete actionSaveAs; delete menu; delete ui; } void MainWindow::on_pushButtonQuit_clicked() { this- close(); } void MainWindow::on_pushButtonGrab_clicked() { if (ui- checkBoxEnabled- isChecked()) { connect(this- timer, SIGNAL(timeout()), this, SLOT(timeoutForGrab())); this- hide(); this- timer- start(ui- spinBoxTimerValue- value() * 1000); } else { // grab myself too. qApp- beep(); pixmap = screen- grabWindow(QApplication::desktop()- winId()); ui- labelShow- setPixmap(pixmap.scaled(ui- labelShow- size())); saveGrabToClipboard(); } } void MainWindow::timeoutForGrab() { qApp- beep(); pixmap = screen- grabWindow(QApplication::desktop()- winId()); ui- labelShow- setPixmap(pixmap.scaled(ui- labelShow- size())); this- show(); this- timer- stop(); saveGrabToClipboard(); } void MainWindow::on_pushButtonSave_clicked() { QString name = QFileDialog::getSaveFileName(this, tr( Save pic ), QStandardPaths::writableLocation(QStandardPaths::PicturesLocation)); pixmap.save(name); } void MainWindow::saveGrabToClipboard() { QClipboard *clipboard = QApplication::clipboard(); clipboard- setPixmap(this- pixmap); } /* For right-click menu { */ void MainWindow::contextMenuEvent(QContextMenuEvent *event) { menu- exec(QCursor::pos()); } /* } */ void MainWindow::grabSaveAsAction() { on_pushButtonSave_clicked(); }","title":"grab window"},{"location":"qt/21-grabwin/#grab-window","text":"","title":"grab window"},{"location":"qt/21-grabwin/#componments","text":"1 label 1 groupbox (1 label, 1 spinbox, 1 checkbox) 3 pushbuttons (1 grab, 1 save, 1 quit)","title":"Componments"},{"location":"qt/21-grabwin/#description","text":"we can play video by continue to grab and show some pictures (for example 5 pics / 1 minute) overload contextMenuEvent from QWidget to right-click menu","title":"Description"},{"location":"qt/21-grabwin/#header","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow #include QTimer #include QScreen #include QPixmap // For right-click menu (Save as on pixmap) #include QContextMenuEvent namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private slots: void on_pushButtonQuit_clicked(); void on_pushButtonGrab_clicked(); void timeoutForGrab(); void on_pushButtonSave_clicked(); // For right-click menu void grabSaveAsAction(); private: Ui::MainWindow *ui; QTimer *timer; QScreen *screen; QPixmap pixmap; // For right-click menu, use data member to avoid memory QMenu *menu; QAction *actionSaveAs; private: void saveGrabToClipboard(); protected: // For right-click menu void contextMenuEvent(QContextMenuEvent *event); }; #endif // MAINWINDOW_H","title":"Header"},{"location":"qt/21-grabwin/#cpp","text":"#include mainwindow.h #include ui_mainwindow.h #include QMessageBox #include QScreen #include QPixmap #include QDesktopWidget #include QFileDialog #include QDesktopServices #include QStandardPaths #include QClipboard // For right-click menu #include QMenu #include QAction #include QCursor MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); timer = new QTimer; screen = QApplication::primaryScreen(); menu = new QMenu(this); actionSaveAs = new QAction(this); actionSaveAs- setText(tr( Save as )); connect(actionSaveAs, SIGNAL(triggered()), this, SLOT(grabSaveAsAction())); menu- addAction(actionSaveAs); } MainWindow::~MainWindow() { delete timer; delete screen; delete actionSaveAs; delete menu; delete ui; } void MainWindow::on_pushButtonQuit_clicked() { this- close(); } void MainWindow::on_pushButtonGrab_clicked() { if (ui- checkBoxEnabled- isChecked()) { connect(this- timer, SIGNAL(timeout()), this, SLOT(timeoutForGrab())); this- hide(); this- timer- start(ui- spinBoxTimerValue- value() * 1000); } else { // grab myself too. qApp- beep(); pixmap = screen- grabWindow(QApplication::desktop()- winId()); ui- labelShow- setPixmap(pixmap.scaled(ui- labelShow- size())); saveGrabToClipboard(); } } void MainWindow::timeoutForGrab() { qApp- beep(); pixmap = screen- grabWindow(QApplication::desktop()- winId()); ui- labelShow- setPixmap(pixmap.scaled(ui- labelShow- size())); this- show(); this- timer- stop(); saveGrabToClipboard(); } void MainWindow::on_pushButtonSave_clicked() { QString name = QFileDialog::getSaveFileName(this, tr( Save pic ), QStandardPaths::writableLocation(QStandardPaths::PicturesLocation)); pixmap.save(name); } void MainWindow::saveGrabToClipboard() { QClipboard *clipboard = QApplication::clipboard(); clipboard- setPixmap(this- pixmap); } /* For right-click menu { */ void MainWindow::contextMenuEvent(QContextMenuEvent *event) { menu- exec(QCursor::pos()); } /* } */ void MainWindow::grabSaveAsAction() { on_pushButtonSave_clicked(); }","title":"Cpp"},{"location":"qt/22-shared-mem/","text":"shared memory Search IPC - Shared Memory Example in document of QtCreator","title":"shared memory"},{"location":"qt/22-shared-mem/#shared-memory","text":"Search IPC - Shared Memory Example in document of QtCreator","title":"shared memory"},{"location":"qt/23-browser/","text":"browser Not finished ..., because it is a strange issue that NO QWebEngineView widget in Display Widgets on manjaro and Qt Creator 4.8.2 webengine module QT += webenginewidgets in project.pro Include #include QWebEngineWidgets Search QWebEngineWidgets Just a Demo QWebEngineView *view = new QWebEngineView; view- load( www.baidu.com ); view- show","title":"browser"},{"location":"qt/23-browser/#browser","text":"Not finished ..., because it is a strange issue that NO QWebEngineView widget in Display Widgets on manjaro and Qt Creator 4.8.2","title":"browser"},{"location":"qt/23-browser/#webengine-module","text":"QT += webenginewidgets in project.pro","title":"webengine module"},{"location":"qt/23-browser/#include","text":"#include QWebEngineWidgets Search QWebEngineWidgets","title":"Include"},{"location":"qt/23-browser/#just-a-demo","text":"QWebEngineView *view = new QWebEngineView; view- load( www.baidu.com ); view- show","title":"Just a Demo"},{"location":"qt/24-db/","text":"database QT += sql in qmake Description Search QSql Fix problems about QPSQL driver not loaded but it is available error log QSqlDatabase: QPSQL driver not loaded QSqlDatabase: available drivers: QSQLITE QMYSQL QMYSQL3 QODBC QODBC3 QPSQL QPSQL7 check with ldd We can see that libpq.so.5 was not found. [hiechoer@hiechoer-pc ~]$ ls -al .Qt/5.13.0/gcc_64/plugins/sqldrivers/libqsqlpsql.so -rwxrwxr-x 1 hiechoer hiechoer 115056 3\u6708 12 07:16 .Qt/5.13.0/gcc_64/plugins/sqldrivers/libqsqlpsql.so [hiechoer@hiechoer-pc ~]$ ls -al .Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/libqsqlpsql.so -rwxrwxr-x 1 hiechoer hiechoer 112440 2\u6708 28 23:40 .Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/libqsqlpsql.so [hiechoer@hiechoer-pc ~]$ ldd .Qt/5.13.0/gcc_64/plugins/sqldrivers/libqsqlpsql.so linux-vdso.so.1 (0x00007ffe07752000) libQt5Sql.so.5 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libQt5Sql.so.5 (0x00007ff831d41000) libQt5Core.so.5 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libQt5Core.so.5 (0x00007ff831599000) libpthread.so.0 = /usr/lib/libpthread.so.0 (0x00007ff831545000) libpq.so.5 = not found libstdc++.so.6 = /usr/lib/libstdc++.so.6 (0x00007ff8313b6000) libm.so.6 = /usr/lib/libm.so.6 (0x00007ff831231000) libgcc_s.so.1 = /usr/lib/libgcc_s.so.1 (0x00007ff831215000) libc.so.6 = /usr/lib/libc.so.6 (0x00007ff831051000) libz.so.1 = /usr/lib/libz.so.1 (0x00007ff830e3a000) libicui18n.so.56 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libicui18n.so.56 (0x00007ff8309a1000) libicuuc.so.56 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libicuuc.so.56 (0x00007ff8305e9000) libicudata.so.56 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libicudata.so.56 (0x00007ff82ec06000) libdl.so.2 = /usr/lib/libdl.so.2 (0x00007ff82ebff000) libgthread-2.0.so.0 = /usr/lib/libgthread-2.0.so.0 (0x00007ff82ebfa000) libglib-2.0.so.0 = /usr/lib/libglib-2.0.so.0 (0x00007ff82ead7000) /usr/lib64/ld-linux-x86-64.so.2 (0x00007ff8321a0000) libpcre.so.1 = /usr/lib/libpcre.so.1 (0x00007ff82ea64000) [hiechoer@hiechoer-pc ~]$ ldd .Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/libqsqlpsql.so linux-vdso.so.1 (0x00007ffdc97d6000) libQt5Sql.so.5 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libQt5Sql.so.5 (0x00007f76dab4f000) libQt5Core.so.5 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libQt5Core.so.5 (0x00007f76da3bc000) libpthread.so.0 = /usr/lib/libpthread.so.0 (0x00007f76da368000) libpq.so.5 = not found libstdc++.so.6 = /usr/lib/libstdc++.so.6 (0x00007f76da1d9000) libm.so.6 = /usr/lib/libm.so.6 (0x00007f76da054000) libgcc_s.so.1 = /usr/lib/libgcc_s.so.1 (0x00007f76da038000) libc.so.6 = /usr/lib/libc.so.6 (0x00007f76d9e74000) libz.so.1 = /usr/lib/libz.so.1 (0x00007f76d9c5d000) libicui18n.so.56 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libicui18n.so.56 (0x00007f76d97c4000) libicuuc.so.56 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libicuuc.so.56 (0x00007f76d940c000) libicudata.so.56 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libicudata.so.56 (0x00007f76d7a29000) libdl.so.2 = /usr/lib/libdl.so.2 (0x00007f76d7a22000) libgthread-2.0.so.0 = /usr/lib/libgthread-2.0.so.0 (0x00007f76d7a1d000) libglib-2.0.so.0 = /usr/lib/libglib-2.0.so.0 (0x00007f76d78fa000) /usr/lib64/ld-linux-x86-64.so.2 (0x00007f76dafae000) libpcre.so.1 = /usr/lib/libpcre.so.1 (0x00007f76d7887000) [hiechoer@hiechoer-pc ~]$ [hiechoer@hiechoer-pc ~]$ ls .Qt/5.13.0/Src/qtbase/src/plugins/sqldrivers/psql main.cpp psql.json psql.pro qsql_psql.cpp qsql_psql_p.h README [hiechoer@hiechoer-pc ~]$ install postgresql Command on manjaro: pacman -S postgresql, pacman -S postgresql-libs, pacman -S postgresql-docs Command on debian: apt-get update, apt-get install postgresql postgresql-doc libpq-dev postgresql-contrib if something wrong when install postgresql on manjaro, set Chinese source firstly pacman-mirrors -i -c China -m rank pacman -Syy pacman -S archlinux-keyring edit /etc/pacman.conf, append: [archlinuxcn] SigLevel = Optional TrustedOnly Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch config postgresql create user and db on manjaro See: https://wiki.archlinux.org/index.php/PostgreSQL enter postgres user: su, su -l postgres or sudo -iu postgres initdb -D /var/lib/postgres/data, at last you will see the following: WARNING: enabling trust authentication for local connections You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb. Success. You can now start the database server using: pg_ctl -D /var/lib/postgres/data -l logfile start return to the regular user(not root user): exit start service: systemctl start postgresql.service enable service to start the service when boot os: systemctl enable postgresql.service if you want to stop the service: systemctl stop postgresql.service login with sudo -iu postgres creater new user: [hiechoer@hiechoer-pc ~]$ sudo -iu postgres [postgres@hiechoer-pc ~]$ createuser --interactive Enter name of role to add: hiechoer === the same name as linux login user Shall the new role be a superuser? (y/n) n Shall the new role be allowed to create databases? (y/n) y Shall the new role be allowed to create more new roles? (y/n) y [postgres@hiechoer-pc ~]$ return to the regular user create database: [hiechoer@hiechoer-pc ~]$ createdb mytestdb create user and db on debian enter postgres user: su, su -l postgres , then you can enter psql and \\q to quit psql, quit psql then continue to create user and database. after su -l postgres , createuser hiechoer createdb mytestdb enter psql , grant all privileges on database mytestdb to hiechoer , \\password hiechoer to change your password, \\password to change postgres's password config listen addresses on manjaro: edit /var/lib/postgresql/data/postgresql.conf , update to listen_addresses='*' , then reboot the service on debian: edit /etc/postgresql/9.6/main/postgresql.conf , update to listen_addresses='*' , then reboot the service by service postgresql restart configure PostgreSQL to be accessible from remote hosts show config_file too see location of conf on manjaro: edit /var/lib/postgresql/data/pg_hba.conf , add one line: host mytestdb hiechoer 192.168.0.0/16 trust , then reboot the service on debian: edit /etc/postgresql/9.6/main/pg_hba.conf modify: local all postgres trust local all hiechoer password append 2 lines: host mytestdb hiechoer 0.0.0.0/0 password host mytestdb hiechoer 127.0.0.1/32 password then reboot the service IMPORTANT: entry in pg_hba.conf only be matched the first one, md5 is encrypted password and password is clear text password, localhost may be translated to ipv6 address, please see log in /var/log/postgresql some useful postgresql commands login to db (mytestdb) with special user (hiechoer) and quit: [hiechoer@hiechoer-pc ~]$ psql mytestdb hiechoer (or: psql -U hiechoer -d mytestdb) psql (11.1) Type help for help. mytestdb= quit [hiechoer@hiechoer-pc ~]$ create and drop table create table TESTCASE( id INTEGER, task_class INTEGER, age TEXT, PRIMARY KEY(id, task_class) ); create table CREATETASK_CHKID_N( id SERIAL PRIMARY KEY, chk_id TEXT, n INTEGER ); drop table REL_CROSS_NODE; For example: mytestdb= create table mytesttab( mytestdb( id SERIAL PRIMARY KEY, mytestdb( name TEXT, mytestdb( age INTEGER mytestdb( ); CREATE TABLE mytestdb= check users mytestdb= \\du List of roles Role name | Attributes | Member of -----------+------------------------------------------------------------+----------- hiechoer | Create role, Create DB | {} postgres | Superuser, Create role, Create DB, Replication, Bypass RLS | {} mytestdb= list table(s) mytestdb= \\dt List of relations Schema | Name | Type | Owner --------+-----------+-------+---------- public | mytesttab | table | hiechoer (1 row) mytestdb= describe table mytestdb= \\d mytesttab Table public.mytesttab Column | Type | Collation | Nullable | Default --------+---------+-----------+----------+--------------------------------------- id | integer | | not null | nextval('mytesttab_id_seq'::regclass) name | text | | | age | integer | | | Indexes: mytesttab_pkey PRIMARY KEY, btree (id) mytestdb= mytestdb= \\d+ mytesttab Table public.mytesttab Column | Type | Collation | Nullable | Default | Storage | Stats target | Description --------+---------+-----------+----------+---------------------------------------+----------+--------------+------------- id | integer | | not null | nextval('mytesttab_id_seq'::regclass) | plain | | name | text | | | | extended | | age | integer | | | | plain | | Indexes: mytesttab_pkey PRIMARY KEY, btree (id) mytestdb= information of connection(s) mytestdb= select * from pg_stat_activity insert: mytestdb= insert into mytesttab (name, age) values ('zhangsan', 28); INSERT 0 1 mytestdb= select * from mytesttab; id | name | age ----+----------+----- 1 | zhangsan | 28 (1 row) mytestdb= delete: delete from mytesttab where name='zhangsan' update: update mytesttab set name='lisi' where name='zhangsan' select: select * from mytesttab Include #include QtSql Widgets 1 QTextEdit 1 QLineEdit 2 QSpinBox (1 for insert age, 1 for delete id) 4 QPushButton (1 insert, 1 delete, 1 select, 1 quit) Header #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow #include QtSql namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private slots: void on_pushButtonShow_clicked(); void on_pushButtonInsert_clicked(); void on_pushButtonDelete_clicked(); private: Ui::MainWindow *ui; QSqlDatabase db; }; #endif // MAINWINDOW_H Cpp #include mainwindow.h #include ui_mainwindow.h #include QMessageBox #include QSqlDatabase #include QDebug MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); db = QSqlDatabase::addDatabase( QPSQL ); db.setHostName( localhost ); db.setDatabaseName( mytestdb ); db.setUserName( hiechoer ); db.setPassword( breizh ); bool ok = db.open(); if (!ok) { QMessageBox::information(this, tr( open fail ), tr( open fail )); return; } } MainWindow::~MainWindow() { db.close(); delete ui; } void MainWindow::on_pushButtonShow_clicked() { ui- textEditShow- clear(); QSqlQuery query; query.prepare( select * from mytesttab ); query.exec(); while (query.next()) { int mid = query.value(0).toInt(); QString mname = query.value(1).toString(); int mage = query.value(2).toInt(); ui- textEditShow- append(QString( id: %1, name: %2, age: %3 ).arg(mid).arg(mname).arg(mage)); } } void MainWindow::on_pushButtonInsert_clicked() { if (ui- lineEditName- text().isEmpty()) { QMessageBox::information(this, tr( name empty ), tr( name cann't be empty )); return; } QSqlQuery query; query.prepare( insert into mytesttab (name, age) values (:name, :age) ); query.bindValue( :name , ui- lineEditName- text()); query.bindValue( :age , ui- spinBoxAge- value()); query.exec(); ui- lineEditName- clear(); ui- spinBoxAge- setValue(18); ui- textEditShow- clear(); } void MainWindow::on_pushButtonDelete_clicked() { QSqlQuery query; query.prepare( delete from mytesttab where id=:id ); query.bindValue( :id , ui- spinBoxId- value()); query.exec(); ui- spinBoxId- setValue(0); ui- textEditShow- clear(); }","title":"database"},{"location":"qt/24-db/#database","text":"","title":"database"},{"location":"qt/24-db/#qt-sql-in-qmake","text":"","title":"QT += sql in qmake"},{"location":"qt/24-db/#description","text":"Search QSql","title":"Description"},{"location":"qt/24-db/#fix-problems-about-qpsql-driver-not-loaded-but-it-is-available","text":"","title":"Fix problems about QPSQL driver not loaded but it is available"},{"location":"qt/24-db/#error-log","text":"QSqlDatabase: QPSQL driver not loaded QSqlDatabase: available drivers: QSQLITE QMYSQL QMYSQL3 QODBC QODBC3 QPSQL QPSQL7","title":"error log"},{"location":"qt/24-db/#check-with-ldd","text":"We can see that libpq.so.5 was not found. [hiechoer@hiechoer-pc ~]$ ls -al .Qt/5.13.0/gcc_64/plugins/sqldrivers/libqsqlpsql.so -rwxrwxr-x 1 hiechoer hiechoer 115056 3\u6708 12 07:16 .Qt/5.13.0/gcc_64/plugins/sqldrivers/libqsqlpsql.so [hiechoer@hiechoer-pc ~]$ ls -al .Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/libqsqlpsql.so -rwxrwxr-x 1 hiechoer hiechoer 112440 2\u6708 28 23:40 .Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/libqsqlpsql.so [hiechoer@hiechoer-pc ~]$ ldd .Qt/5.13.0/gcc_64/plugins/sqldrivers/libqsqlpsql.so linux-vdso.so.1 (0x00007ffe07752000) libQt5Sql.so.5 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libQt5Sql.so.5 (0x00007ff831d41000) libQt5Core.so.5 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libQt5Core.so.5 (0x00007ff831599000) libpthread.so.0 = /usr/lib/libpthread.so.0 (0x00007ff831545000) libpq.so.5 = not found libstdc++.so.6 = /usr/lib/libstdc++.so.6 (0x00007ff8313b6000) libm.so.6 = /usr/lib/libm.so.6 (0x00007ff831231000) libgcc_s.so.1 = /usr/lib/libgcc_s.so.1 (0x00007ff831215000) libc.so.6 = /usr/lib/libc.so.6 (0x00007ff831051000) libz.so.1 = /usr/lib/libz.so.1 (0x00007ff830e3a000) libicui18n.so.56 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libicui18n.so.56 (0x00007ff8309a1000) libicuuc.so.56 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libicuuc.so.56 (0x00007ff8305e9000) libicudata.so.56 = /home/hiechoer/.Qt/5.13.0/gcc_64/plugins/sqldrivers/../../lib/libicudata.so.56 (0x00007ff82ec06000) libdl.so.2 = /usr/lib/libdl.so.2 (0x00007ff82ebff000) libgthread-2.0.so.0 = /usr/lib/libgthread-2.0.so.0 (0x00007ff82ebfa000) libglib-2.0.so.0 = /usr/lib/libglib-2.0.so.0 (0x00007ff82ead7000) /usr/lib64/ld-linux-x86-64.so.2 (0x00007ff8321a0000) libpcre.so.1 = /usr/lib/libpcre.so.1 (0x00007ff82ea64000) [hiechoer@hiechoer-pc ~]$ ldd .Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/libqsqlpsql.so linux-vdso.so.1 (0x00007ffdc97d6000) libQt5Sql.so.5 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libQt5Sql.so.5 (0x00007f76dab4f000) libQt5Core.so.5 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libQt5Core.so.5 (0x00007f76da3bc000) libpthread.so.0 = /usr/lib/libpthread.so.0 (0x00007f76da368000) libpq.so.5 = not found libstdc++.so.6 = /usr/lib/libstdc++.so.6 (0x00007f76da1d9000) libm.so.6 = /usr/lib/libm.so.6 (0x00007f76da054000) libgcc_s.so.1 = /usr/lib/libgcc_s.so.1 (0x00007f76da038000) libc.so.6 = /usr/lib/libc.so.6 (0x00007f76d9e74000) libz.so.1 = /usr/lib/libz.so.1 (0x00007f76d9c5d000) libicui18n.so.56 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libicui18n.so.56 (0x00007f76d97c4000) libicuuc.so.56 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libicuuc.so.56 (0x00007f76d940c000) libicudata.so.56 = /home/hiechoer/.Qt/Tools/QtCreator/lib/Qt/plugins/sqldrivers/../../lib/libicudata.so.56 (0x00007f76d7a29000) libdl.so.2 = /usr/lib/libdl.so.2 (0x00007f76d7a22000) libgthread-2.0.so.0 = /usr/lib/libgthread-2.0.so.0 (0x00007f76d7a1d000) libglib-2.0.so.0 = /usr/lib/libglib-2.0.so.0 (0x00007f76d78fa000) /usr/lib64/ld-linux-x86-64.so.2 (0x00007f76dafae000) libpcre.so.1 = /usr/lib/libpcre.so.1 (0x00007f76d7887000) [hiechoer@hiechoer-pc ~]$ [hiechoer@hiechoer-pc ~]$ ls .Qt/5.13.0/Src/qtbase/src/plugins/sqldrivers/psql main.cpp psql.json psql.pro qsql_psql.cpp qsql_psql_p.h README [hiechoer@hiechoer-pc ~]$","title":"check with ldd"},{"location":"qt/24-db/#install-postgresql","text":"Command on manjaro: pacman -S postgresql, pacman -S postgresql-libs, pacman -S postgresql-docs Command on debian: apt-get update, apt-get install postgresql postgresql-doc libpq-dev postgresql-contrib","title":"install postgresql"},{"location":"qt/24-db/#if-something-wrong-when-install-postgresql-on-manjaro-set-chinese-source-firstly","text":"pacman-mirrors -i -c China -m rank pacman -Syy pacman -S archlinux-keyring edit /etc/pacman.conf, append: [archlinuxcn] SigLevel = Optional TrustedOnly Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch","title":"if something wrong when install postgresql on manjaro, set Chinese source firstly"},{"location":"qt/24-db/#config-postgresql","text":"","title":"config postgresql"},{"location":"qt/24-db/#create-user-and-db-on-manjaro","text":"See: https://wiki.archlinux.org/index.php/PostgreSQL enter postgres user: su, su -l postgres or sudo -iu postgres initdb -D /var/lib/postgres/data, at last you will see the following: WARNING: enabling trust authentication for local connections You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb. Success. You can now start the database server using: pg_ctl -D /var/lib/postgres/data -l logfile start return to the regular user(not root user): exit start service: systemctl start postgresql.service enable service to start the service when boot os: systemctl enable postgresql.service if you want to stop the service: systemctl stop postgresql.service login with sudo -iu postgres creater new user: [hiechoer@hiechoer-pc ~]$ sudo -iu postgres [postgres@hiechoer-pc ~]$ createuser --interactive Enter name of role to add: hiechoer === the same name as linux login user Shall the new role be a superuser? (y/n) n Shall the new role be allowed to create databases? (y/n) y Shall the new role be allowed to create more new roles? (y/n) y [postgres@hiechoer-pc ~]$ return to the regular user create database: [hiechoer@hiechoer-pc ~]$ createdb mytestdb","title":"create user and db on manjaro"},{"location":"qt/24-db/#create-user-and-db-on-debian","text":"enter postgres user: su, su -l postgres , then you can enter psql and \\q to quit psql, quit psql then continue to create user and database. after su -l postgres , createuser hiechoer createdb mytestdb enter psql , grant all privileges on database mytestdb to hiechoer , \\password hiechoer to change your password, \\password to change postgres's password","title":"create user and db on debian"},{"location":"qt/24-db/#config-listen-addresses","text":"on manjaro: edit /var/lib/postgresql/data/postgresql.conf , update to listen_addresses='*' , then reboot the service on debian: edit /etc/postgresql/9.6/main/postgresql.conf , update to listen_addresses='*' , then reboot the service by service postgresql restart","title":"config listen addresses"},{"location":"qt/24-db/#configure-postgresql-to-be-accessible-from-remote-hosts","text":"show config_file too see location of conf on manjaro: edit /var/lib/postgresql/data/pg_hba.conf , add one line: host mytestdb hiechoer 192.168.0.0/16 trust , then reboot the service on debian: edit /etc/postgresql/9.6/main/pg_hba.conf modify: local all postgres trust local all hiechoer password append 2 lines: host mytestdb hiechoer 0.0.0.0/0 password host mytestdb hiechoer 127.0.0.1/32 password then reboot the service IMPORTANT: entry in pg_hba.conf only be matched the first one, md5 is encrypted password and password is clear text password, localhost may be translated to ipv6 address, please see log in /var/log/postgresql","title":"configure PostgreSQL to be accessible from remote hosts"},{"location":"qt/24-db/#some-useful-postgresql-commands","text":"login to db (mytestdb) with special user (hiechoer) and quit: [hiechoer@hiechoer-pc ~]$ psql mytestdb hiechoer (or: psql -U hiechoer -d mytestdb) psql (11.1) Type help for help. mytestdb= quit [hiechoer@hiechoer-pc ~]$ create and drop table create table TESTCASE( id INTEGER, task_class INTEGER, age TEXT, PRIMARY KEY(id, task_class) ); create table CREATETASK_CHKID_N( id SERIAL PRIMARY KEY, chk_id TEXT, n INTEGER ); drop table REL_CROSS_NODE; For example: mytestdb= create table mytesttab( mytestdb( id SERIAL PRIMARY KEY, mytestdb( name TEXT, mytestdb( age INTEGER mytestdb( ); CREATE TABLE mytestdb= check users mytestdb= \\du List of roles Role name | Attributes | Member of -----------+------------------------------------------------------------+----------- hiechoer | Create role, Create DB | {} postgres | Superuser, Create role, Create DB, Replication, Bypass RLS | {} mytestdb= list table(s) mytestdb= \\dt List of relations Schema | Name | Type | Owner --------+-----------+-------+---------- public | mytesttab | table | hiechoer (1 row) mytestdb= describe table mytestdb= \\d mytesttab Table public.mytesttab Column | Type | Collation | Nullable | Default --------+---------+-----------+----------+--------------------------------------- id | integer | | not null | nextval('mytesttab_id_seq'::regclass) name | text | | | age | integer | | | Indexes: mytesttab_pkey PRIMARY KEY, btree (id) mytestdb= mytestdb= \\d+ mytesttab Table public.mytesttab Column | Type | Collation | Nullable | Default | Storage | Stats target | Description --------+---------+-----------+----------+---------------------------------------+----------+--------------+------------- id | integer | | not null | nextval('mytesttab_id_seq'::regclass) | plain | | name | text | | | | extended | | age | integer | | | | plain | | Indexes: mytesttab_pkey PRIMARY KEY, btree (id) mytestdb= information of connection(s) mytestdb= select * from pg_stat_activity insert: mytestdb= insert into mytesttab (name, age) values ('zhangsan', 28); INSERT 0 1 mytestdb= select * from mytesttab; id | name | age ----+----------+----- 1 | zhangsan | 28 (1 row) mytestdb= delete: delete from mytesttab where name='zhangsan' update: update mytesttab set name='lisi' where name='zhangsan' select: select * from mytesttab","title":"some useful postgresql commands"},{"location":"qt/24-db/#include","text":"#include QtSql","title":"Include"},{"location":"qt/24-db/#widgets","text":"1 QTextEdit 1 QLineEdit 2 QSpinBox (1 for insert age, 1 for delete id) 4 QPushButton (1 insert, 1 delete, 1 select, 1 quit)","title":"Widgets"},{"location":"qt/24-db/#header","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow #include QtSql namespace Ui { class MainWindow; } class MainWindow : public QMainWindow { Q_OBJECT public: explicit MainWindow(QWidget *parent = nullptr); ~MainWindow(); private slots: void on_pushButtonShow_clicked(); void on_pushButtonInsert_clicked(); void on_pushButtonDelete_clicked(); private: Ui::MainWindow *ui; QSqlDatabase db; }; #endif // MAINWINDOW_H","title":"Header"},{"location":"qt/24-db/#cpp","text":"#include mainwindow.h #include ui_mainwindow.h #include QMessageBox #include QSqlDatabase #include QDebug MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) { ui- setupUi(this); db = QSqlDatabase::addDatabase( QPSQL ); db.setHostName( localhost ); db.setDatabaseName( mytestdb ); db.setUserName( hiechoer ); db.setPassword( breizh ); bool ok = db.open(); if (!ok) { QMessageBox::information(this, tr( open fail ), tr( open fail )); return; } } MainWindow::~MainWindow() { db.close(); delete ui; } void MainWindow::on_pushButtonShow_clicked() { ui- textEditShow- clear(); QSqlQuery query; query.prepare( select * from mytesttab ); query.exec(); while (query.next()) { int mid = query.value(0).toInt(); QString mname = query.value(1).toString(); int mage = query.value(2).toInt(); ui- textEditShow- append(QString( id: %1, name: %2, age: %3 ).arg(mid).arg(mname).arg(mage)); } } void MainWindow::on_pushButtonInsert_clicked() { if (ui- lineEditName- text().isEmpty()) { QMessageBox::information(this, tr( name empty ), tr( name cann't be empty )); return; } QSqlQuery query; query.prepare( insert into mytesttab (name, age) values (:name, :age) ); query.bindValue( :name , ui- lineEditName- text()); query.bindValue( :age , ui- spinBoxAge- value()); query.exec(); ui- lineEditName- clear(); ui- spinBoxAge- setValue(18); ui- textEditShow- clear(); } void MainWindow::on_pushButtonDelete_clicked() { QSqlQuery query; query.prepare( delete from mytesttab where id=:id ); query.bindValue( :id , ui- spinBoxId- value()); query.exec(); ui- spinBoxId- setValue(0); ui- textEditShow- clear(); }","title":"Cpp"},{"location":"qt/25-android/","text":"Android install tools https://doc.qt.io/qt-5/android-getting-started.html (follow the steps in this link please) https://developer.android.google.cn/ install JDK or OpenJDK firstly (OpenJDK for example in this document) Android SDK doesn't support openjdk8+, so please install OpenJDK-8 from https://jdk.java.net/java-se-ri/8 remove default openjdk firstly to avoid the following problem when install android sdk Problem: Warning: javax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty Fix: sudo apt-get remove --pruge openjdk* java-common default-jdk sudo apt-get autoremove --purge check whether you successfully removed all related packages by: sudo update-alternatives --config java sudo apt-get install openjdk-8-jdk The following steps are unnecessary: In https://openjdk.java.net/, download `openjdk-8u40-b25-linux-x64-10_feb_2015.tar.gz` unzip to ~/.Qt/jdk/openjdk/java-se-8u40-ri in `/etc/environment` PATH= /home/hiechoer/.Qt/jdk/openjdk/java-se-8u40-ri/bin :... JAVA_HOME= /home/hiechoer/.Qt/jdk/openjdk/java-se-8u40-ri CLASSPATH= /home/hiechoer/.Qt/jdk/openjdk/java-se-8u40-ri/lib/ reboot, check `echo $JAVA_HOME` and `java -version` The Android SDK Tools touch ~/.android/repositories.cfg Search Command line tools only in https://developer.android.google.cn/studio, download sdk-tools-linux-xxxxxxx.zip unzip to /home/hiechoer/.Qt/sdk/tools ./bin/sdkmanager --update ./bin/sdkmanager --list check version number for your android device for example: ./bin/sdkmanager \"platforms;android-26\", sdk-26 is for android-8.0 configuring your development host on linux for example: sudo apt-get install libstdc++6:i386 libgcc1:i386 zlib1g:i386 libncurses5:i386 install dependencies to run the emulator: sudo apt-get install libsdl1.2debian:i386 ./bin/sdkmanager \"tools\" ./bin/sdkmanager \"emulator\" ./bin/sdkmanager \"build-tools;26.0.3\" ./bin/sdkmanager \"build-tools;29.0.0-rc1\" ./bin/sdkmanager \"patcher;v4\" ./bin/sdkmanager \"platform-tools\" The Android NDK In https://developer.android.google.cn/ndk/downloads, download android-ndk-xxxx-linux-x86_64.zip upzip to /home/hiechoer/.Qt/ndk/android-ndk-r19c Config Qt Creator (Community) In Tools - Options - Devices - Android : Add Android NDK path to: /home/hiechoer/.Qt/ndk/android-ndk-r19c Add Android SDK path to: /home/hiechoer/.Qt/sdk Qt Creator can update configuration automatelly, check if everything is ok to ndk and sdk The Android SDK path is: /home/hiechoer/.Qt/sdk but not /home/hiechoer/.Qt/sdk/tools , then Qt Creator will install some tools automatelly, please click Accept to licenses. Build for Android Check cpu version in your device Click Projects - Build Run - Android for xxx , for example: Android for arm64-v8a (Clang Qt 5.12.3 f or Android ARM64-v8a) Build (Qt Creator will download some packages automatelly in this step) Get apk file in working directory (path: .../android-build/build/outputs/apk/debug/android-build-debug.apk) Set name icon for app build mkdir android-sources in src code folder copy ../build-xxx/android-build/AndroidManifest.xml to new android-sources folder in qt creator, right-click your project, select Add Existing Files... , and select AndroidManifest.xml from the android-sources folder to add it to your project double click AndroidManifest.xml add source/prefix/files to the project for icons (for example some png) you can change: 3 size icons (36x36, 72x72, 96x96), Application name, Version name add ANDROID_PACKAGE_SOURCE_DIR = $$PWD/android-sources in your project.pro re-build Problems build the wrong android sdk version Remove the following folders and files about confs of Qt Creator, then restart Qt Creator: ~/.config/QtProject.conf ~/.config/Qt ~/.config/QtProject","title":"Android"},{"location":"qt/25-android/#android","text":"","title":"Android"},{"location":"qt/25-android/#install-tools","text":"https://doc.qt.io/qt-5/android-getting-started.html (follow the steps in this link please) https://developer.android.google.cn/","title":"install tools"},{"location":"qt/25-android/#install-jdk-or-openjdk-firstly-openjdk-for-example-in-this-document","text":"Android SDK doesn't support openjdk8+, so please install OpenJDK-8 from https://jdk.java.net/java-se-ri/8 remove default openjdk firstly to avoid the following problem when install android sdk Problem: Warning: javax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty Fix: sudo apt-get remove --pruge openjdk* java-common default-jdk sudo apt-get autoremove --purge check whether you successfully removed all related packages by: sudo update-alternatives --config java sudo apt-get install openjdk-8-jdk The following steps are unnecessary: In https://openjdk.java.net/, download `openjdk-8u40-b25-linux-x64-10_feb_2015.tar.gz` unzip to ~/.Qt/jdk/openjdk/java-se-8u40-ri in `/etc/environment` PATH= /home/hiechoer/.Qt/jdk/openjdk/java-se-8u40-ri/bin :... JAVA_HOME= /home/hiechoer/.Qt/jdk/openjdk/java-se-8u40-ri CLASSPATH= /home/hiechoer/.Qt/jdk/openjdk/java-se-8u40-ri/lib/ reboot, check `echo $JAVA_HOME` and `java -version`","title":"install JDK or OpenJDK firstly (OpenJDK for example in this document)"},{"location":"qt/25-android/#the-android-sdk-tools","text":"touch ~/.android/repositories.cfg Search Command line tools only in https://developer.android.google.cn/studio, download sdk-tools-linux-xxxxxxx.zip unzip to /home/hiechoer/.Qt/sdk/tools ./bin/sdkmanager --update ./bin/sdkmanager --list check version number for your android device for example: ./bin/sdkmanager \"platforms;android-26\", sdk-26 is for android-8.0 configuring your development host on linux for example: sudo apt-get install libstdc++6:i386 libgcc1:i386 zlib1g:i386 libncurses5:i386 install dependencies to run the emulator: sudo apt-get install libsdl1.2debian:i386 ./bin/sdkmanager \"tools\" ./bin/sdkmanager \"emulator\" ./bin/sdkmanager \"build-tools;26.0.3\" ./bin/sdkmanager \"build-tools;29.0.0-rc1\" ./bin/sdkmanager \"patcher;v4\" ./bin/sdkmanager \"platform-tools\"","title":"The Android SDK Tools"},{"location":"qt/25-android/#the-android-ndk","text":"In https://developer.android.google.cn/ndk/downloads, download android-ndk-xxxx-linux-x86_64.zip upzip to /home/hiechoer/.Qt/ndk/android-ndk-r19c","title":"The Android NDK"},{"location":"qt/25-android/#config-qt-creator-community","text":"In Tools - Options - Devices - Android : Add Android NDK path to: /home/hiechoer/.Qt/ndk/android-ndk-r19c Add Android SDK path to: /home/hiechoer/.Qt/sdk Qt Creator can update configuration automatelly, check if everything is ok to ndk and sdk The Android SDK path is: /home/hiechoer/.Qt/sdk but not /home/hiechoer/.Qt/sdk/tools , then Qt Creator will install some tools automatelly, please click Accept to licenses.","title":"Config Qt Creator (Community)"},{"location":"qt/25-android/#build-for-android","text":"Check cpu version in your device Click Projects - Build Run - Android for xxx , for example: Android for arm64-v8a (Clang Qt 5.12.3 f or Android ARM64-v8a) Build (Qt Creator will download some packages automatelly in this step) Get apk file in working directory (path: .../android-build/build/outputs/apk/debug/android-build-debug.apk)","title":"Build for Android"},{"location":"qt/25-android/#set-name-icon-for-app","text":"build mkdir android-sources in src code folder copy ../build-xxx/android-build/AndroidManifest.xml to new android-sources folder in qt creator, right-click your project, select Add Existing Files... , and select AndroidManifest.xml from the android-sources folder to add it to your project double click AndroidManifest.xml add source/prefix/files to the project for icons (for example some png) you can change: 3 size icons (36x36, 72x72, 96x96), Application name, Version name add ANDROID_PACKAGE_SOURCE_DIR = $$PWD/android-sources in your project.pro re-build","title":"Set name &amp; icon for app"},{"location":"qt/25-android/#problems","text":"build the wrong android sdk version Remove the following folders and files about confs of Qt Creator, then restart Qt Creator: ~/.config/QtProject.conf ~/.config/Qt ~/.config/QtProject","title":"Problems"},{"location":"qt/26-qml/","text":"qml qmlscene a.qml to show results quickly signal-slot to update property, Behaver on property to show animation XxxAnimation on an item aotumatelly signal-slot to update state, states to update to special state, transitions to update animation static view in mvc, for example: Column-Repeater, Column is view, Repeater is model and delegate, you can access index and modelData in delegate if you define model by [] , or access property name if you define model by ListModel {ListElement {}} dynamic view in mvc, for example: ListView and GirdView, there are model and delegate in view, you can set delegate to a new Component , you can also use index and modelData if number or [] model, or property name if ListModel {ListElement {}} model. Both ListView and GirdView use ListModel append and remove element on delegate object, onAdd onRemove in delegate to animate","title":"qml"},{"location":"qt/26-qml/#qml","text":"qmlscene a.qml to show results quickly signal-slot to update property, Behaver on property to show animation XxxAnimation on an item aotumatelly signal-slot to update state, states to update to special state, transitions to update animation static view in mvc, for example: Column-Repeater, Column is view, Repeater is model and delegate, you can access index and modelData in delegate if you define model by [] , or access property name if you define model by ListModel {ListElement {}} dynamic view in mvc, for example: ListView and GirdView, there are model and delegate in view, you can set delegate to a new Component , you can also use index and modelData if number or [] model, or property name if ListModel {ListElement {}} model. Both ListView and GirdView use ListModel append and remove element on delegate object, onAdd onRemove in delegate to animate","title":"qml"},{"location":"qt/27-plugin/","text":"plugin plugin as shared library how to create project for plugin click File - New File and Project - Library - Qt Quick 2 Extension Plugin project name is pdbm Object class-name: Pdbm URI: com.sevenrain.qmlcomponents build make install in outout folder IMPORTANT: number characters cann't be in URI how to use plugin in your app project create your project, for example: dbtest import com.sevenrain.qmlcomponents 1.0 use component Pdbm (class name in plguin project) in your app project register self-defined type to engine in your qml project, create c++ class (header and source files), class name is Pdbm for example. in main.cpp, #include \"pdbm.h\" , qmlRegisterType Pdbm (\"com.sevenrain.qmlcomponents\", 1, 0, \"Pdbm\"); before engine.load(url); , qmlRegisterType is called must be after QQmlApplicationEngine engine; in qml file, import com.sevenrain.qmlcomponents 1.0 and use Pdbm {} register self-defined type through context attribute No finished ...","title":"plugin"},{"location":"qt/27-plugin/#plugin","text":"","title":"plugin"},{"location":"qt/27-plugin/#plugin-as-shared-library","text":"","title":"plugin as shared library"},{"location":"qt/27-plugin/#how-to-create-project-for-plugin","text":"click File - New File and Project - Library - Qt Quick 2 Extension Plugin project name is pdbm Object class-name: Pdbm URI: com.sevenrain.qmlcomponents build make install in outout folder IMPORTANT: number characters cann't be in URI","title":"how to create project for plugin"},{"location":"qt/27-plugin/#how-to-use-plugin-in-your-app-project","text":"create your project, for example: dbtest import com.sevenrain.qmlcomponents 1.0 use component Pdbm (class name in plguin project) in your app project","title":"how to use plugin in your app project"},{"location":"qt/27-plugin/#register-self-defined-type-to-engine","text":"in your qml project, create c++ class (header and source files), class name is Pdbm for example. in main.cpp, #include \"pdbm.h\" , qmlRegisterType Pdbm (\"com.sevenrain.qmlcomponents\", 1, 0, \"Pdbm\"); before engine.load(url); , qmlRegisterType is called must be after QQmlApplicationEngine engine; in qml file, import com.sevenrain.qmlcomponents 1.0 and use Pdbm {}","title":"register self-defined type to engine"},{"location":"qt/27-plugin/#register-self-defined-type-through-context-attribute","text":"No finished ...","title":"register self-defined type through context attribute"},{"location":"qt/28-qml-psql/","text":"sample on debian for qml and postgresql config database install postgresql config listen_address to * accessible from remote hosts create user hiechoer and config password to it create database myitemdb grant privileges on myitemdb to hiecheor create tables as following myitemdb= create table myitem( myitemdb( id SERIAL PRIMARY KEY, myitemdb( name char(32), myitemdb( status int, myitemdb( content TEXT); CREATE TABLE myitemdb= create table myuser( myitemdb( name char(32), myitemdb( nick char(32), myitemdb( created timestamp without time zone, myitemdb( status int); CREATE TABLE myitemdb= alter table myuser add column avatar bytea; ALTER TABLE myitemdb= alter table myuser add column password TEXT; ALTER TABLE myitemdb= myitemdb= \\d List of relations Schema | Name | Type | Owner --------+---------------+----------+---------- public | myitem | table | hiechoer public | myitem_id_seq | sequence | hiechoer public | myuser | table | hiechoer (3 rows) myitemdb= \\d myitem Table public.myitem Column | Type | Modifiers ---------+---------------+----------------------------------------------------- id | integer | not null default nextval('myitem_id_seq'::regclass) name | character(32) | status | integer | content | text | Indexes: myitem_pkey PRIMARY KEY, btree (id) myitemdb= \\d myuser Table public.myuser Column | Type | Modifiers ----------+-----------------------------+----------- name | character(32) | nick | character(32) | created | timestamp without time zone | status | integer | avatar | bytea | password | text | myitemdb= coding in qt creator create your Qt Quick Application - Swipe project, project name is xmem create Mdbm module from Files and Classes - C++ - C++ Class , base class is QObject and Class name is Mdbm enable sql module in xmem.pro : QT += quick sql change Mdbm's parent class from QObject to QSqlQueryModel add more pages from Files and Classes - Qt - QtQuick UI File , and remove useless qml files from project add 2 lines value in database insert into myuser (name, nick, created, status, avatar, password) values ('zhangsan', 'shabi', current_timestamp, 1, cast('abcdefg' as bytea), '123456'); insert into myitem (name, status, content) values ('it is name', 1, 'it is content'); codes for mdbm.h #ifndef MDBM_H #define MDBM_H #include QObject #include QByteArray #include QString #include QSqlQueryModel //#include QSql #include QSqlDatabase #include QSqlQuery #include QSqlRecord #include QSqlField #include QSqlIndex #include QSqlResult class Mdbm : public QSqlQueryModel { Q_OBJECT /* * * properties and interfaces * the status and releated interfaces are just to show how to use it * status: 0: logout, 1, login * */ Q_PROPERTY(int status READ status WRITE setStatus NOTIFY statusChanged) public: explicit Mdbm(QObject *parent = nullptr); QHash int, QByteArray roleNames() const; void setQuery(const QString query, const QSqlDatabase tdb = QSqlDatabase()); void setQuery(const QSqlQuery query); QVariant data(const QModelIndex index, int role) const; int status(); void setStatus(int status); Q_INVOKABLE void user_register(); Q_INVOKABLE void user_login(); Q_INVOKABLE void user_logout(); Q_INVOKABLE void user_unregister(); Q_INVOKABLE void item_operate(); signals: void statusChanged(const int status); public slots: void onStatusChanged(int status); }; codes for mdbm.cpp #include mdbm.h #include QtDebug Mdbm::Mdbm(QObject *parent) : QSqlQueryModel(parent) { } int Mdbm::status() { return 0; } void Mdbm::setStatus(int status) { } void Mdbm::onStatusChanged(const int status) { } void Mdbm::user_register() { } void Mdbm::user_unregister() { } void Mdbm::user_login() { } void Mdbm::user_logout() { } void Mdbm::item_operate() { } QHash int, QByteArray Mdbm::roleNames() const { QHash int, QByteArray roleNames; for (int i = 0; i record().count(); i ++) { roleNames[Qt::UserRole + i +1] = record().fieldName(i).toUtf8(); } return roleNames; } void Mdbm::setQuery(const QString query, const QSqlDatabase tdb) { QSqlQueryModel::setQuery(query, tdb); } void Mdbm::setQuery(const QSqlQuery query) { QSqlQueryModel::setQuery(query); } QVariant Mdbm::data(const QModelIndex index, int role) const { QVariant value; if (role Qt::UserRole) { value = QSqlQueryModel::data(index, role); } else { int columnIdx = role - Qt::UserRole - 1; QModelIndex modelIndex = this- index(index.row(), columnIdx); value = QSqlQueryModel::data(modelIndex, Qt::DisplayRole); } return value; } codes for main.cpp #include QGuiApplication #include QQmlApplicationEngine #include mdbm.h #include QQmlContext #include QCryptographicHash #include QByteArray #include QtDebug int main(int argc, char *argv[]) { QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling); QGuiApplication app(argc, argv); QQmlApplicationEngine engine; /*load self-defined type*/ //qmlRegisterType Mdbm ( com.hiechoer.qmlcomponents , 1, 0, Mdbm ); /*connect to database*/ QSqlDatabase db; int port = 0; db = QSqlDatabase::addDatabase( QPSQL ); db.setHostName( 127.0.0.1 ); db.setDatabaseName( myitemdb ); db.setUserName( hiechoer ); db.setPassword( breizh ); if (port) { db.setPort(port); } bool ok = db.open(); if (!ok) { qDebug( connect to database fail ); return -1; } else { qDebug( connect to database successfully ); } /*build model display in each page*/ Mdbm *itemCurrent = new Mdbm(); Mdbm *itemFinished = new Mdbm(); Mdbm *itemBacklog = new Mdbm(); itemCurrent- setQuery(QString( select name,content from myitem where status=%1 ).arg(1), db); itemFinished- setQuery(QString( select name,content from myitem where status=%1 ).arg(0), db); itemBacklog- setQuery(QString( select name,content from myitem where status=%1 ).arg(2), db); engine.rootContext()- setContextProperty( modelCurrent , itemCurrent); engine.rootContext()- setContextProperty( modelFinished , itemFinished); engine.rootContext()- setContextProperty( modelBacklog , itemBacklog); const QUrl url(QStringLiteral( qrc:/main.qml )); QObject::connect( engine, QQmlApplicationEngine::objectCreated, app, [url](QObject *obj, const QUrl objUrl) { if (!obj url == objUrl) QCoreApplication::exit(-1); }, Qt::QueuedConnection); engine.load(url); return app.exec(); } codes for main.qml import QtQuick 2.12 import QtQuick.Controls 2.5 ApplicationWindow { visible: true /*it must set to be max value when depoly to device*/ width: 480 height: 640 title: qsTr( Tabs ) SwipeView { id: swipeView anchors.fill: parent currentIndex: tabBar.currentIndex width: parent.width height: parent.height Page1Form { } Page2Form { } Page3Form { } Page4Form { } } footer: TabBar { id: tabBar currentIndex: swipeView.currentIndex TabButton { text: qsTr( Current ) } TabButton { text: qsTr( Finished ) } TabButton { text: qsTr( Backlog ) } TabButton { text: qsTr( Me ) } } } codes for Page1Form.ui.qml import QtQuick 2.12 import QtQuick.Controls 2.5 //import com.hiechoer.qmlcomponents 1.0 Page { id: page /* width: maximumWidth height: maximumHeight */ width: 480 height: 640 header: Label { id: header text: qsTr( Current ) font.pixelSize: Qt.application.font.pixelSize * 2 padding: 10 } ListView { id: listView x: 0 y: header.height width: parent.width height: parent.height - header.height currentIndex: 1 model: modelCurrent delegate: Item { id: delegateCurrent width: listView.width height: 30 Rectangle { width: parent.width height: parent.height anchors.fill: parent Row { width: parent.width height: parent.height padding: 5 Text { id: textName anchors.verticalCenter: parent.verticalCenter width: parent.width / 3 height: parent.height elide: Text.ElideRight padding: 5 text: name font.pixelSize: 12 } Text { id: textContent anchors.verticalCenter: parent.verticalCenter width: parent.width / 3 * 2 elide: Text.ElideRight height: parent.height padding: 5 text: content font.pixelSize: 12 } } } MouseArea { anchors.fill: parent onClicked: listView.currentIndex = index; } } } } how to sqlite sqlite on debian apt-get install lib32z1 lib32ncurses5 download sqlite3 and unzip it create db: ./sqlite3 myitemdb sqlite CREATE TABLE myuser( ... name char(32), ... nick char(32), ... status int, ... password text, ... created text); sqlite sqlite CREATE TABLE myitem( ... name char(32), ... status int, ... user char(32), ... content text); sqlite INSERT INTO myuser(name, nick, created, password, status) VALUES ('zhangsan', 'bighead', '2019-05-08 11:03:00', '123456', 0); sqlite SELECT * from myuser; zhangsan|bighead|0|123456|2019-05-08 11:03:00 sqlite sqlite INSERT INTO myitem(name, status, user, content) VALUES ('temp msg', 0, 'zhangsan', 'this is test message here'); sqlite select * from myitem; temp msg|0|zhangsan|this is test message here sqlite how to app with sqlite It is the same as postgresql, but sqlite you should't set user name and password to sqlite, for example: #include mdbm.h #include QQmlContext #include QtDebug QSqlDatabase db; db = QSqlDatabase::addDatabase( QSQLITE ); db.setHostName( 127.0.0.1 ); db.setDatabaseName( /usr/share/sqlite/myitemdb ); bool ok = db.open(); if (!ok) { qDebug( connect to database fail ); return -1; } else { qDebug( connect to database successfully ); } Mdbm *itemModel = new Mdbm(); itemModel- setQuery(QString( select name,content from myitem where status=%1 ).arg(1), db); engine.rootContext()- setContextProperty( itemModel , itemModel); Mdbm *userModel = new Mdbm(); userModel- setQuery(QString( select name,nick,created from myuser where name=%1 ).arg(1), db); how to qml-bootstrap download qml-bootstrap link: https://github.com/brexis/qml-bootstrap other project: https://github.com/papyros/qml-material design ui create new qtquick swipe project src folder from qml-bootstrap to qmini Add Existing Directory about src to qmini on qml.qrc , in select file matching append all file types which in src folder remove duplicate file main.qml from qml.qrc test if everything ok, for example: in Page1Form.ui.qml: include src/buttons codes fragement: ButtonDefault { design: xxxxx width: 100 height: 50 }","title":"sample on debian for qml and postgresql"},{"location":"qt/28-qml-psql/#sample-on-debian-for-qml-and-postgresql","text":"","title":"sample on debian for qml and postgresql"},{"location":"qt/28-qml-psql/#config-database","text":"install postgresql config listen_address to * accessible from remote hosts create user hiechoer and config password to it create database myitemdb grant privileges on myitemdb to hiecheor create tables as following myitemdb= create table myitem( myitemdb( id SERIAL PRIMARY KEY, myitemdb( name char(32), myitemdb( status int, myitemdb( content TEXT); CREATE TABLE myitemdb= create table myuser( myitemdb( name char(32), myitemdb( nick char(32), myitemdb( created timestamp without time zone, myitemdb( status int); CREATE TABLE myitemdb= alter table myuser add column avatar bytea; ALTER TABLE myitemdb= alter table myuser add column password TEXT; ALTER TABLE myitemdb= myitemdb= \\d List of relations Schema | Name | Type | Owner --------+---------------+----------+---------- public | myitem | table | hiechoer public | myitem_id_seq | sequence | hiechoer public | myuser | table | hiechoer (3 rows) myitemdb= \\d myitem Table public.myitem Column | Type | Modifiers ---------+---------------+----------------------------------------------------- id | integer | not null default nextval('myitem_id_seq'::regclass) name | character(32) | status | integer | content | text | Indexes: myitem_pkey PRIMARY KEY, btree (id) myitemdb= \\d myuser Table public.myuser Column | Type | Modifiers ----------+-----------------------------+----------- name | character(32) | nick | character(32) | created | timestamp without time zone | status | integer | avatar | bytea | password | text | myitemdb=","title":"config database"},{"location":"qt/28-qml-psql/#coding-in-qt-creator","text":"create your Qt Quick Application - Swipe project, project name is xmem create Mdbm module from Files and Classes - C++ - C++ Class , base class is QObject and Class name is Mdbm enable sql module in xmem.pro : QT += quick sql change Mdbm's parent class from QObject to QSqlQueryModel add more pages from Files and Classes - Qt - QtQuick UI File , and remove useless qml files from project add 2 lines value in database insert into myuser (name, nick, created, status, avatar, password) values ('zhangsan', 'shabi', current_timestamp, 1, cast('abcdefg' as bytea), '123456'); insert into myitem (name, status, content) values ('it is name', 1, 'it is content'); codes for mdbm.h #ifndef MDBM_H #define MDBM_H #include QObject #include QByteArray #include QString #include QSqlQueryModel //#include QSql #include QSqlDatabase #include QSqlQuery #include QSqlRecord #include QSqlField #include QSqlIndex #include QSqlResult class Mdbm : public QSqlQueryModel { Q_OBJECT /* * * properties and interfaces * the status and releated interfaces are just to show how to use it * status: 0: logout, 1, login * */ Q_PROPERTY(int status READ status WRITE setStatus NOTIFY statusChanged) public: explicit Mdbm(QObject *parent = nullptr); QHash int, QByteArray roleNames() const; void setQuery(const QString query, const QSqlDatabase tdb = QSqlDatabase()); void setQuery(const QSqlQuery query); QVariant data(const QModelIndex index, int role) const; int status(); void setStatus(int status); Q_INVOKABLE void user_register(); Q_INVOKABLE void user_login(); Q_INVOKABLE void user_logout(); Q_INVOKABLE void user_unregister(); Q_INVOKABLE void item_operate(); signals: void statusChanged(const int status); public slots: void onStatusChanged(int status); }; codes for mdbm.cpp #include mdbm.h #include QtDebug Mdbm::Mdbm(QObject *parent) : QSqlQueryModel(parent) { } int Mdbm::status() { return 0; } void Mdbm::setStatus(int status) { } void Mdbm::onStatusChanged(const int status) { } void Mdbm::user_register() { } void Mdbm::user_unregister() { } void Mdbm::user_login() { } void Mdbm::user_logout() { } void Mdbm::item_operate() { } QHash int, QByteArray Mdbm::roleNames() const { QHash int, QByteArray roleNames; for (int i = 0; i record().count(); i ++) { roleNames[Qt::UserRole + i +1] = record().fieldName(i).toUtf8(); } return roleNames; } void Mdbm::setQuery(const QString query, const QSqlDatabase tdb) { QSqlQueryModel::setQuery(query, tdb); } void Mdbm::setQuery(const QSqlQuery query) { QSqlQueryModel::setQuery(query); } QVariant Mdbm::data(const QModelIndex index, int role) const { QVariant value; if (role Qt::UserRole) { value = QSqlQueryModel::data(index, role); } else { int columnIdx = role - Qt::UserRole - 1; QModelIndex modelIndex = this- index(index.row(), columnIdx); value = QSqlQueryModel::data(modelIndex, Qt::DisplayRole); } return value; } codes for main.cpp #include QGuiApplication #include QQmlApplicationEngine #include mdbm.h #include QQmlContext #include QCryptographicHash #include QByteArray #include QtDebug int main(int argc, char *argv[]) { QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling); QGuiApplication app(argc, argv); QQmlApplicationEngine engine; /*load self-defined type*/ //qmlRegisterType Mdbm ( com.hiechoer.qmlcomponents , 1, 0, Mdbm ); /*connect to database*/ QSqlDatabase db; int port = 0; db = QSqlDatabase::addDatabase( QPSQL ); db.setHostName( 127.0.0.1 ); db.setDatabaseName( myitemdb ); db.setUserName( hiechoer ); db.setPassword( breizh ); if (port) { db.setPort(port); } bool ok = db.open(); if (!ok) { qDebug( connect to database fail ); return -1; } else { qDebug( connect to database successfully ); } /*build model display in each page*/ Mdbm *itemCurrent = new Mdbm(); Mdbm *itemFinished = new Mdbm(); Mdbm *itemBacklog = new Mdbm(); itemCurrent- setQuery(QString( select name,content from myitem where status=%1 ).arg(1), db); itemFinished- setQuery(QString( select name,content from myitem where status=%1 ).arg(0), db); itemBacklog- setQuery(QString( select name,content from myitem where status=%1 ).arg(2), db); engine.rootContext()- setContextProperty( modelCurrent , itemCurrent); engine.rootContext()- setContextProperty( modelFinished , itemFinished); engine.rootContext()- setContextProperty( modelBacklog , itemBacklog); const QUrl url(QStringLiteral( qrc:/main.qml )); QObject::connect( engine, QQmlApplicationEngine::objectCreated, app, [url](QObject *obj, const QUrl objUrl) { if (!obj url == objUrl) QCoreApplication::exit(-1); }, Qt::QueuedConnection); engine.load(url); return app.exec(); } codes for main.qml import QtQuick 2.12 import QtQuick.Controls 2.5 ApplicationWindow { visible: true /*it must set to be max value when depoly to device*/ width: 480 height: 640 title: qsTr( Tabs ) SwipeView { id: swipeView anchors.fill: parent currentIndex: tabBar.currentIndex width: parent.width height: parent.height Page1Form { } Page2Form { } Page3Form { } Page4Form { } } footer: TabBar { id: tabBar currentIndex: swipeView.currentIndex TabButton { text: qsTr( Current ) } TabButton { text: qsTr( Finished ) } TabButton { text: qsTr( Backlog ) } TabButton { text: qsTr( Me ) } } } codes for Page1Form.ui.qml import QtQuick 2.12 import QtQuick.Controls 2.5 //import com.hiechoer.qmlcomponents 1.0 Page { id: page /* width: maximumWidth height: maximumHeight */ width: 480 height: 640 header: Label { id: header text: qsTr( Current ) font.pixelSize: Qt.application.font.pixelSize * 2 padding: 10 } ListView { id: listView x: 0 y: header.height width: parent.width height: parent.height - header.height currentIndex: 1 model: modelCurrent delegate: Item { id: delegateCurrent width: listView.width height: 30 Rectangle { width: parent.width height: parent.height anchors.fill: parent Row { width: parent.width height: parent.height padding: 5 Text { id: textName anchors.verticalCenter: parent.verticalCenter width: parent.width / 3 height: parent.height elide: Text.ElideRight padding: 5 text: name font.pixelSize: 12 } Text { id: textContent anchors.verticalCenter: parent.verticalCenter width: parent.width / 3 * 2 elide: Text.ElideRight height: parent.height padding: 5 text: content font.pixelSize: 12 } } } MouseArea { anchors.fill: parent onClicked: listView.currentIndex = index; } } } }","title":"coding in qt creator"},{"location":"qt/28-qml-psql/#how-to-sqlite","text":"","title":"how to sqlite"},{"location":"qt/28-qml-psql/#sqlite-on-debian","text":"apt-get install lib32z1 lib32ncurses5 download sqlite3 and unzip it create db: ./sqlite3 myitemdb sqlite CREATE TABLE myuser( ... name char(32), ... nick char(32), ... status int, ... password text, ... created text); sqlite sqlite CREATE TABLE myitem( ... name char(32), ... status int, ... user char(32), ... content text); sqlite INSERT INTO myuser(name, nick, created, password, status) VALUES ('zhangsan', 'bighead', '2019-05-08 11:03:00', '123456', 0); sqlite SELECT * from myuser; zhangsan|bighead|0|123456|2019-05-08 11:03:00 sqlite sqlite INSERT INTO myitem(name, status, user, content) VALUES ('temp msg', 0, 'zhangsan', 'this is test message here'); sqlite select * from myitem; temp msg|0|zhangsan|this is test message here sqlite","title":"sqlite on debian"},{"location":"qt/28-qml-psql/#how-to-app-with-sqlite","text":"It is the same as postgresql, but sqlite you should't set user name and password to sqlite, for example: #include mdbm.h #include QQmlContext #include QtDebug QSqlDatabase db; db = QSqlDatabase::addDatabase( QSQLITE ); db.setHostName( 127.0.0.1 ); db.setDatabaseName( /usr/share/sqlite/myitemdb ); bool ok = db.open(); if (!ok) { qDebug( connect to database fail ); return -1; } else { qDebug( connect to database successfully ); } Mdbm *itemModel = new Mdbm(); itemModel- setQuery(QString( select name,content from myitem where status=%1 ).arg(1), db); engine.rootContext()- setContextProperty( itemModel , itemModel); Mdbm *userModel = new Mdbm(); userModel- setQuery(QString( select name,nick,created from myuser where name=%1 ).arg(1), db);","title":"how to app with sqlite"},{"location":"qt/28-qml-psql/#how-to-qml-bootstrap","text":"","title":"how to qml-bootstrap"},{"location":"qt/28-qml-psql/#download-qml-bootstrap","text":"link: https://github.com/brexis/qml-bootstrap other project: https://github.com/papyros/qml-material","title":"download qml-bootstrap"},{"location":"qt/28-qml-psql/#design-ui","text":"create new qtquick swipe project src folder from qml-bootstrap to qmini Add Existing Directory about src to qmini on qml.qrc , in select file matching append all file types which in src folder remove duplicate file main.qml from qml.qrc test if everything ok, for example: in Page1Form.ui.qml: include src/buttons codes fragement: ButtonDefault { design: xxxxx width: 100 height: 50 }","title":"design ui"},{"location":"qt/3-widgets/","text":"Classes Layout QHBoxLayout/QVBoxLayout/QGridLayout Widgets QWidget/QMainWindow/QDialog: \u9876\u7ea7\u7ec4\u4ef6 QLabel: \u9759\u6001\u6807\u7b7e, \u53ef\u4ee5\u653e\u7f6e\u666e\u901a\u6587\u672c/\u5bcc\u6587\u672c/\u56fe\u7247 QPushButton: \u6309\u94ae QSpinBox: signal: valueChanged, slot: setValue QSlider: signal: valueChanged, slot: setValue QMenu/QToolBar/QAction ...","title":"Classes"},{"location":"qt/3-widgets/#classes","text":"","title":"Classes"},{"location":"qt/3-widgets/#layout","text":"QHBoxLayout/QVBoxLayout/QGridLayout","title":"Layout"},{"location":"qt/3-widgets/#widgets","text":"QWidget/QMainWindow/QDialog: \u9876\u7ea7\u7ec4\u4ef6 QLabel: \u9759\u6001\u6807\u7b7e, \u53ef\u4ee5\u653e\u7f6e\u666e\u901a\u6587\u672c/\u5bcc\u6587\u672c/\u56fe\u7247 QPushButton: \u6309\u94ae QSpinBox: signal: valueChanged, slot: setValue QSlider: signal: valueChanged, slot: setValue QMenu/QToolBar/QAction ...","title":"Widgets"},{"location":"qt/4-menu-toolbar/","text":"Menu Toolbar add resource file mkdir resource in project folder right click on project: Add New... - Qt - Qt Resource File , Name: actions, Path: path/to/resource/folder click Resources- resource/actions.qrc , click Add - Add Prefix , Prefix: / add 3 files in the folder: close.png/open.png/rule.png Optional: Resources- resources/actions.qrc - Open in Editor Resources- resources/actions.qrc - Add - Add Files , select all pngs codes mainwindow.h #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); private slots: void openFile(); }; #endif // MAINWINDOW_H mainwindow.cpp #include mainwindow.h #include QMenuBar #include QMenu #include QToolBar #include QAction #include QIcon #include QStatusBar #include QLabel #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { QAction * pActionOpen = new QAction(tr( Open ), this); pActionOpen- setShortcut(QKeySequence::Open); pActionOpen- setIcon(QIcon( :/open.png )); pActionOpen- setStatusTip(tr( Open a file )); QAction * pActionClose = new QAction(tr( Close ), this); pActionClose- setShortcut(QKeySequence::Close); pActionClose- setIcon(QIcon( :/close.png )); pActionClose- setStatusTip(tr( Close window )); QMenu * pMenuFile = menuBar()- addMenu(tr( File )); pMenuFile- addAction(pActionOpen); pMenuFile- addAction(pActionClose); QToolBar * pTooBarFile = addToolBar(tr( File )); pTooBarFile- addAction(pActionOpen); pTooBarFile- addAction(pActionClose); QStatusBar * pStatusBar = statusBar(); /* temporary*/ pStatusBar- showMessage(tr( Starting... ), 3000); /* permanent */ QLabel * pp = new QLabel(tr( Welcome! )); pp- setMinimumSize(pp- sizeHint()); pp- setAlignment(Qt::AlignCenter); pStatusBar- addPermanentWidget(pp); #if 0 /* general*/ QLabel * pg1 = new QLabel(tr( Welcome1 )); pg1- setMinimumSize(pg1- sizeHint()); pg1- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg1); QLabel * pg2 = new QLabel(tr( Welcome2 )); pg2- setMinimumSize(pg2- sizeHint()); pg2- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg2); #endif /* signal-slot */ connect(pActionOpen, SIGNAL(triggered()), this, SLOT(openFile())); connect(pActionClose, SIGNAL(triggered()), this, SLOT(close())); /* Other */ QLabel *pLabel = new QLabel(tr( temp )); setCentralWidget(pLabel); setFixedSize(400, 200); setWindowTitle(tr( Test Menu and ToolBar )); } MainWindow::~MainWindow() { } void MainWindow::openFile() { QMessageBox::information(NULL, tr( Open ), tr( Open a file )); }","title":"Menu & Toolbar"},{"location":"qt/4-menu-toolbar/#menu-toolbar","text":"","title":"Menu &amp; Toolbar"},{"location":"qt/4-menu-toolbar/#add-resource-file","text":"mkdir resource in project folder right click on project: Add New... - Qt - Qt Resource File , Name: actions, Path: path/to/resource/folder click Resources- resource/actions.qrc , click Add - Add Prefix , Prefix: / add 3 files in the folder: close.png/open.png/rule.png Optional: Resources- resources/actions.qrc - Open in Editor Resources- resources/actions.qrc - Add - Add Files , select all pngs","title":"add resource file"},{"location":"qt/4-menu-toolbar/#codes","text":"","title":"codes"},{"location":"qt/4-menu-toolbar/#mainwindowh","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); private slots: void openFile(); }; #endif // MAINWINDOW_H","title":"mainwindow.h"},{"location":"qt/4-menu-toolbar/#mainwindowcpp","text":"#include mainwindow.h #include QMenuBar #include QMenu #include QToolBar #include QAction #include QIcon #include QStatusBar #include QLabel #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { QAction * pActionOpen = new QAction(tr( Open ), this); pActionOpen- setShortcut(QKeySequence::Open); pActionOpen- setIcon(QIcon( :/open.png )); pActionOpen- setStatusTip(tr( Open a file )); QAction * pActionClose = new QAction(tr( Close ), this); pActionClose- setShortcut(QKeySequence::Close); pActionClose- setIcon(QIcon( :/close.png )); pActionClose- setStatusTip(tr( Close window )); QMenu * pMenuFile = menuBar()- addMenu(tr( File )); pMenuFile- addAction(pActionOpen); pMenuFile- addAction(pActionClose); QToolBar * pTooBarFile = addToolBar(tr( File )); pTooBarFile- addAction(pActionOpen); pTooBarFile- addAction(pActionClose); QStatusBar * pStatusBar = statusBar(); /* temporary*/ pStatusBar- showMessage(tr( Starting... ), 3000); /* permanent */ QLabel * pp = new QLabel(tr( Welcome! )); pp- setMinimumSize(pp- sizeHint()); pp- setAlignment(Qt::AlignCenter); pStatusBar- addPermanentWidget(pp); #if 0 /* general*/ QLabel * pg1 = new QLabel(tr( Welcome1 )); pg1- setMinimumSize(pg1- sizeHint()); pg1- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg1); QLabel * pg2 = new QLabel(tr( Welcome2 )); pg2- setMinimumSize(pg2- sizeHint()); pg2- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg2); #endif /* signal-slot */ connect(pActionOpen, SIGNAL(triggered()), this, SLOT(openFile())); connect(pActionClose, SIGNAL(triggered()), this, SLOT(close())); /* Other */ QLabel *pLabel = new QLabel(tr( temp )); setCentralWidget(pLabel); setFixedSize(400, 200); setWindowTitle(tr( Test Menu and ToolBar )); } MainWindow::~MainWindow() { } void MainWindow::openFile() { QMessageBox::information(NULL, tr( Open ), tr( Open a file )); }","title":"mainwindow.cpp"},{"location":"qt/5-dialog/","text":"Dialog QMessageBox 5 static interfaces: critical warning question information about if (QMessageBox::Ok == QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel)) { // } else { // } constructor QMessageBox msg(QMessageBox::NoIcon, tr( title ), tr( content )); msg.setIconPixmap(QPixmap( :/open.png )); if (QMessageBox::Ok == msg.exec()) {} QFileDialog static interface getOpenFileName getSaveFileName getOpenFileNames QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png(*.png);; jpg(*.jpg) )); //QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png jpg(*.png *.jpg) )); if (path.length()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + path); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); } constructor QFileDialog *dlg = new QFileDialog(this); dlg- setWindowTitle(tr( Open )); dlg- setDirectory( . ); dlg- setNameFilter(tr( Images (*.png *jpg) )); if (QFileDialog::Accepted == dlg- exec()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + dlg- selectedFiles()[0]); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); } QInputDialog static interface getText getInteger getDouble getItem bool ok; QString text = QInputDialog::getText(this, tr( title ), tr( Input ), QLineEdit::Normal, tr( default string ), ok); if (ok) { QMessageBox::information(NULL, tr( path ), tr( input text: ) + text); } else { QMessageBox::information(NULL, tr( path ), tr( no input )); } QFontDialog static interface getFont #include QFont #include QFontDialog void MainWindow::editFont() { bool ok; QFont font = QFontDialog::getFont( ok, this); if (ok) { ui- textEdit- setFont(font); } else { } } QColorDialog static interface getColor #include QColor #include QColorDialog void MainWindow::editColor() { QColor color = QColorDialog::getColor(Qt::red, this, tr( get color )); if (color.isValid()) { ui- textEdit- setTextColor(color); } }","title":"Dialog"},{"location":"qt/5-dialog/#dialog","text":"","title":"Dialog"},{"location":"qt/5-dialog/#qmessagebox","text":"","title":"QMessageBox"},{"location":"qt/5-dialog/#5-static-interfaces","text":"critical warning question information about if (QMessageBox::Ok == QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel)) { // } else { // }","title":"5 static interfaces:"},{"location":"qt/5-dialog/#constructor","text":"QMessageBox msg(QMessageBox::NoIcon, tr( title ), tr( content )); msg.setIconPixmap(QPixmap( :/open.png )); if (QMessageBox::Ok == msg.exec()) {}","title":"constructor"},{"location":"qt/5-dialog/#qfiledialog","text":"","title":"QFileDialog"},{"location":"qt/5-dialog/#static-interface","text":"getOpenFileName getSaveFileName getOpenFileNames QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png(*.png);; jpg(*.jpg) )); //QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png jpg(*.png *.jpg) )); if (path.length()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + path); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); }","title":"static interface"},{"location":"qt/5-dialog/#constructor_1","text":"QFileDialog *dlg = new QFileDialog(this); dlg- setWindowTitle(tr( Open )); dlg- setDirectory( . ); dlg- setNameFilter(tr( Images (*.png *jpg) )); if (QFileDialog::Accepted == dlg- exec()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + dlg- selectedFiles()[0]); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); }","title":"constructor"},{"location":"qt/5-dialog/#qinputdialog","text":"","title":"QInputDialog"},{"location":"qt/5-dialog/#static-interface_1","text":"getText getInteger getDouble getItem bool ok; QString text = QInputDialog::getText(this, tr( title ), tr( Input ), QLineEdit::Normal, tr( default string ), ok); if (ok) { QMessageBox::information(NULL, tr( path ), tr( input text: ) + text); } else { QMessageBox::information(NULL, tr( path ), tr( no input )); }","title":"static interface"},{"location":"qt/5-dialog/#qfontdialog","text":"","title":"QFontDialog"},{"location":"qt/5-dialog/#static-interface_2","text":"getFont #include QFont #include QFontDialog void MainWindow::editFont() { bool ok; QFont font = QFontDialog::getFont( ok, this); if (ok) { ui- textEdit- setFont(font); } else { } }","title":"static interface"},{"location":"qt/5-dialog/#qcolordialog","text":"","title":"QColorDialog"},{"location":"qt/5-dialog/#static-interface_3","text":"getColor #include QColor #include QColorDialog void MainWindow::editColor() { QColor color = QColorDialog::getColor(Qt::red, this, tr( get color )); if (color.isValid()) { ui- textEdit- setTextColor(color); } }","title":"static interface"},{"location":"qt/6-internationalization/","text":"Internationalization \u56fd\u9645\u5316\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u754c\u9762\u8bed\u8a00\u7684\u7ffb\u8bd1, \u4e66\u5199\u65b9\u5f0f, \u8d27\u5e01\u683c\u5f0f, \u65f6\u95f4\u65e5\u671f\u663e\u793a\u7b49\u7b49, \u4e0b\u9762\u4ee5\u754c\u9762\u7ffb\u8bd1\u4e3a\u4f8b. See help: Hello tr() Example modify conf for qtchooser check qt path when install it In QtCreator: Tools - Options... - Kits - Qt Versions - Qt 5.12.0 GCC 64bit, Get: /home/myusername/.Qtinstall/5.12.0/gcc_64/bin/qmake so path should be /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 modify conf myusername@mypcname:~/a/codes/qtproj/mymainwind$ qmake qmake: could not exec '/usr/lib/x86_64-linux-gnu/qt5/bin/qmake': No such file or directory === Cann't find qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ which qmake /usr/bin/qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ ls -l /usr/bin/qmake lrwxrwxrwx 1 root root 9 Nov 10 2016 /usr/bin/qmake - qtchooser === qmake link to qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ qtchooser --print-env === print env for qtchooser QT_SELECT= default QTTOOLDIR= /usr/lib/x86_64-linux-gnu/qt5/bin QTLIBDIR= /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ find /usr/ | grep qtchooser === find conf for qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === /usr/lib/x86_64-linux-gnu/qtchooser /usr/lib/x86_64-linux-gnu/qtchooser/qt4.conf /usr/lib/x86_64-linux-gnu/qtchooser/4.conf /usr/lib/x86_64-linux-gnu/qtchooser/qt5.conf /usr/lib/x86_64-linux-gnu/qtchooser/5.conf /usr/share/lintian/overrides/qtchooser /usr/share/man/man1/qtchooser.1.gz /usr/share/doc/qtchooser /usr/share/doc/qtchooser/copyright /usr/share/doc/qtchooser/README.Debian /usr/share/doc/qtchooser/changelog.Debian.gz /usr/share/qtchooser /usr/share/qtchooser/qt5-x86_64-linux-gnu.conf /usr/share/qtchooser/qt4-x86_64-linux-gnu.conf /usr/bin/qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf /usr/lib/x86_64-linux-gnu/qt5/bin /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ su Password: root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# vim /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# exit myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === modify /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 myusername@mypcname:~/a/codes/qtproj/mymainwind$ install tools apt-get install qttools5-dev-tools how to edit pro file to your project, add line: TRANSLATIONS += mymainwind.ts edit codes to translate int main(int argc, char *argv[]) { QApplication a(argc, argv); QTranslator qtTranslator; qtTranslator.load( qt_ + QLocale::system().name(), QLibraryInfo::location(QLibraryInfo::TranslationsPath)); a.installTranslator( qtTranslator); QTranslator myappTranslator; myappTranslator.load( mymainwind ); a.installTranslator( myappTranslator); MainWindow w; w.show(); return a.exec(); } Important: If you want to translate string out of function, you will use QT_TR_NOOP to translate one string, and QT_TRANSLATE_NOOP to more strings. You can install some builtin translations, for example: 5.12.0/gcc_64/translations/qt_zh_CN.qm enter your project folder, exec lupdate mymainwind.pro to generate mymainwind.ts myusername@mypcname:~/a/codes/qtproj/mymainwind$ lupdate -verbose mymainwind.pro Updating 'mymainwind.ts'... Found 20 source text(s) (0 new and 20 already existing) myusername@mypcname:~/a/codes/qtproj/mymainwind$ exec linguist mymainwind.ts to translate in linguist tool edit your translation, for example: Open - \u6253\u5f00( O) Click File - Release then Save in linguist tool to generate mymainwind.qm copy mymainwind.qm to application folder run your application, you will see the results \u5982\u679c\u4ee3\u7801\u4e2d\u786c\u5199\u4e2d\u6587, \u53ef\u4ee5\u7528\u4e0b\u9762\u65b9\u6cd5\u64cd\u4f5c\u7f16\u7801\u65b9\u5f0f in main function: QTextCodec::setCodecForLocale(QTextCodec::codecForName( UTF-8 ));","title":"Internationalization"},{"location":"qt/6-internationalization/#internationalization","text":"\u56fd\u9645\u5316\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u754c\u9762\u8bed\u8a00\u7684\u7ffb\u8bd1, \u4e66\u5199\u65b9\u5f0f, \u8d27\u5e01\u683c\u5f0f, \u65f6\u95f4\u65e5\u671f\u663e\u793a\u7b49\u7b49, \u4e0b\u9762\u4ee5\u754c\u9762\u7ffb\u8bd1\u4e3a\u4f8b. See help: Hello tr() Example","title":"Internationalization"},{"location":"qt/6-internationalization/#modify-conf-for-qtchooser","text":"check qt path when install it In QtCreator: Tools - Options... - Kits - Qt Versions - Qt 5.12.0 GCC 64bit, Get: /home/myusername/.Qtinstall/5.12.0/gcc_64/bin/qmake so path should be /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 modify conf myusername@mypcname:~/a/codes/qtproj/mymainwind$ qmake qmake: could not exec '/usr/lib/x86_64-linux-gnu/qt5/bin/qmake': No such file or directory === Cann't find qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ which qmake /usr/bin/qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ ls -l /usr/bin/qmake lrwxrwxrwx 1 root root 9 Nov 10 2016 /usr/bin/qmake - qtchooser === qmake link to qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ qtchooser --print-env === print env for qtchooser QT_SELECT= default QTTOOLDIR= /usr/lib/x86_64-linux-gnu/qt5/bin QTLIBDIR= /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ find /usr/ | grep qtchooser === find conf for qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === /usr/lib/x86_64-linux-gnu/qtchooser /usr/lib/x86_64-linux-gnu/qtchooser/qt4.conf /usr/lib/x86_64-linux-gnu/qtchooser/4.conf /usr/lib/x86_64-linux-gnu/qtchooser/qt5.conf /usr/lib/x86_64-linux-gnu/qtchooser/5.conf /usr/share/lintian/overrides/qtchooser /usr/share/man/man1/qtchooser.1.gz /usr/share/doc/qtchooser /usr/share/doc/qtchooser/copyright /usr/share/doc/qtchooser/README.Debian /usr/share/doc/qtchooser/changelog.Debian.gz /usr/share/qtchooser /usr/share/qtchooser/qt5-x86_64-linux-gnu.conf /usr/share/qtchooser/qt4-x86_64-linux-gnu.conf /usr/bin/qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf /usr/lib/x86_64-linux-gnu/qt5/bin /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ su Password: root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# vim /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# exit myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === modify /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 myusername@mypcname:~/a/codes/qtproj/mymainwind$","title":"modify conf for qtchooser"},{"location":"qt/6-internationalization/#install-tools","text":"apt-get install qttools5-dev-tools","title":"install tools"},{"location":"qt/6-internationalization/#how-to","text":"","title":"how to"},{"location":"qt/6-internationalization/#edit-pro-file-to-your-project-add-line-translations-mymainwindts","text":"","title":"edit pro file to your project, add line: TRANSLATIONS += mymainwind.ts"},{"location":"qt/6-internationalization/#edit-codes-to-translate","text":"int main(int argc, char *argv[]) { QApplication a(argc, argv); QTranslator qtTranslator; qtTranslator.load( qt_ + QLocale::system().name(), QLibraryInfo::location(QLibraryInfo::TranslationsPath)); a.installTranslator( qtTranslator); QTranslator myappTranslator; myappTranslator.load( mymainwind ); a.installTranslator( myappTranslator); MainWindow w; w.show(); return a.exec(); } Important: If you want to translate string out of function, you will use QT_TR_NOOP to translate one string, and QT_TRANSLATE_NOOP to more strings. You can install some builtin translations, for example: 5.12.0/gcc_64/translations/qt_zh_CN.qm","title":"edit codes to translate"},{"location":"qt/6-internationalization/#enter-your-project-folder-exec-lupdate-mymainwindpro-to-generate-mymainwindts","text":"myusername@mypcname:~/a/codes/qtproj/mymainwind$ lupdate -verbose mymainwind.pro Updating 'mymainwind.ts'... Found 20 source text(s) (0 new and 20 already existing) myusername@mypcname:~/a/codes/qtproj/mymainwind$","title":"enter your project folder, exec lupdate mymainwind.pro to generate mymainwind.ts"},{"location":"qt/6-internationalization/#exec-linguist-mymainwindts-to-translate-in-linguist-tool","text":"","title":"exec linguist mymainwind.ts to translate in linguist tool"},{"location":"qt/6-internationalization/#edit-your-translation-for-example-ampopen-ampo","text":"","title":"edit your translation, for example: &amp;Open -&gt; \u6253\u5f00(&amp;O)"},{"location":"qt/6-internationalization/#click-file-release-then-save-in-linguist-tool-to-generate-mymainwindqm","text":"","title":"Click File-&gt;Release then Save in linguist tool to generate mymainwind.qm"},{"location":"qt/6-internationalization/#copy-mymainwindqm-to-application-folder","text":"","title":"copy mymainwind.qm to application folder"},{"location":"qt/6-internationalization/#run-your-application-you-will-see-the-results","text":"","title":"run your application, you will see the results"},{"location":"qt/6-internationalization/#_1","text":"in main function: QTextCodec::setCodecForLocale(QTextCodec::codecForName( UTF-8 ));","title":"\u5982\u679c\u4ee3\u7801\u4e2d\u786c\u5199\u4e2d\u6587, \u53ef\u4ee5\u7528\u4e0b\u9762\u65b9\u6cd5\u64cd\u4f5c\u7f16\u7801\u65b9\u5f0f"},{"location":"qt/7-container/","text":"Container \u5e38\u7528\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668 \u8bf4\u660e QVector QLinkedList \\ / +----QList----+ | +----------+---------+ | | | QStringList QStack QQueue QVector: \u5411\u91cf, \u7c7b\u4f3c\u6570\u7ec4, \u5b58\u50a8\u7a7a\u95f4\u8fde\u7eed, \u9002\u5408\u83b7\u53d6\u968f\u673a\u4f4d\u7f6e\u6570\u636e\u6216\u8005\u672b\u5c3e\u5904\u6dfb\u52a0\u6570\u636e, \u4e0d\u9002\u5408\u4e2d\u95f4\u4f4d\u7f6e\u63d2\u5165\u5220\u9664\u6570\u636e. \u53ef\u4ee5\u4f7f\u7528[], append(), , \u904d\u5386\u5668 QLinkedList: \u94fe\u8868, \u9002\u5408\u6570\u636e\u63d2\u5165\u5220\u9664, \u4f46\u662f\u968f\u673a\u4f4d\u7f6e\u8bbf\u95ee\u6bd4\u8f83\u6162. \u53ef\u4ee5\u4f7f\u7528appen(), , \u904d\u5386\u5668 QList: \u540c\u65f6\u62e5\u6709QVector\u548cQLinkedList\u5927\u591a\u6570\u6709\u70b9, \u5c3d\u91cf\u4f7f\u7528QList\u5bb9\u5668\u66ff\u4ee3QVector\u548cQLinkedList QStringList QStack QQueue\u662fQList\u7684\u7279\u4f8b. QStack: push(), pop(), top(). QQueue: enqueue(), dequeue(), head(). \u904d\u5386 \u4f7f\u7528\u904d\u5386\u5668\u548c\u4f7f\u7528foreach \u904d\u5386\u5668\u6709\u4e24\u79cd\u98ce\u683c: Java style(\u98ce\u683c\u7b80\u5355, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20) and STL style(\u529f\u80fd\u5f3a\u5927, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488) \u6bcf\u79cd\u5bb9\u5668\u7c7b\u90fd\u6709\u5bf9\u5e94\u7684\u4e24\u79cd\u904d\u5386\u5668: \u53ea\u8bfb\u904d\u5386\u5668\u548c\u8bfb\u5199\u904d\u5386\u5668 Java style: \u53ea\u8bfb\u904d\u5386\u5668: QVectorIterator, QLinkedListIterator, QListIterator... \u8bfb\u5199\u904d\u5386\u5668: QMutableVectorIterator, QMutableLinkedListIterator, QMutableListIterator... STL style: \u5bf9\u4e8e\u67d0\u4e9b\u8fd4\u56de\u5bb9\u5668\u7684\u51fd\u6570, \u5982\u679c\u4f7f\u7528STL\u98ce\u683c\u904d\u5386\u5668, \u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u62f7\u8d1d, \u7136\u540e\u518d\u904d\u5386, \u6765\u907f\u514d\u8c03\u7528\u4e34\u65f6\u5bf9\u8c61\u7684\u51fd\u6570 \u4f7f\u7528Java\u98ce\u683c\u904d\u5386\u5668\u65f6\u4e0d\u4f1a\u6709\u8fd9\u79cd\u95ee\u9898, \u56e0\u4e3a\u7cfb\u7edf\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u8fd9\u4e2a\u62f7\u8d1d(\u9690\u5f0f\u6570\u636e\u5171\u4eab, \u4f8b\u5982QByteArray, QBrush, QFont, QImage, QPixmap, Qstring) T::iterator T::const_iterator \u6ce8\u610f \u4f8b\u5982QList\u6709\u591a\u79cd\u7528\u6cd5\u8d4b\u503c, \u521d\u59cb\u5316\u65f6\u5019\u8d4b\u503c, [], append(), , \u5c3d\u91cf\u4f7f\u7528\u5bb9\u5668\u65f6\u4e0d\u8981\u4f7f\u7528[]\u800c\u4f7f\u7528at\u51fd\u6570, \u56e0\u4e3aQMap/QHash\u7b49\u5bb9\u5668\u4e2d\u53ef\u80fd\u4f1a\u63d2\u5165\u4e00\u4e2a\u503c\u4f46\u7ed3\u679c\u5e76\u4e0d\u662f\u81ea\u5df1\u9700\u8981\u7684. \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668\u6700\u597d\u4e00\u76f4\u4f7f\u7528\u8fed\u4ee3\u5668\u6216foreach, \u8fed\u4ee3\u5668\u4e5f\u6700\u597d\u4f7f\u7528STL\u98ce\u683c\u7684, \u56e0\u4e3aQT\u4e2d\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u673a\u5236(\u7c7b\u4f3ckernel\u4e2d\u7684cow - copy on write), \u8fd9\u79cd\u673a\u5236\u5728\u8d4b\u503c\u65f6\u4f1a\u8ba9\u4eba\u8ff7\u60d1 \u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u524d\u8fb9\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u8981\u518d\u4f7f\u7528\u8fed\u4ee3\u5668\u65f6\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u8fed\u4ee3\u5668 \u5bf9\u4e8e\u975econst\u5bb9\u5668, begin()/end()\u7b49\u5728\u6570\u636e\u6539\u53d8\u65f6\u4f1a\u8fdb\u884c\u6df1\u590d\u5236, \u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528const_iterator, constBegin()\u548cconstEnd QList int v = {1, 3, 5, 7, 9}; v[2] = 8; === v.append(11); v 13 \u4ee3\u7801(QList\u4e3a\u4f8b) Headers: #include QList #include QMutableListIterator #include QListIterator Java style QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QMutableListIterator int mutIter(list); // \u524d\u8fb9\u5bf9list\u7684\u64cd\u4f5c\u4f1a\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u9700\u8981\u4e34\u65f6\u5b9a\u4e49\u4e00\u4e2a while (mutIter.hasNext()) { // \u7531\u6b64\u53ef\u89c1, Java\u98ce\u683c\u7684\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20 mutIter.setValue(mutIter.next() + 3); // to remove item with mutIter.remove() } QListIterator int iter(list); while (iter.hasNext()) { str += + QString::number(iter.next()); } STL style QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QList int ::iterator iter = list.begin(); while (iter != list.end()) { *iter = *iter + 3; // \u7531\u6b64\u53ef\u89c1, STL\u98ce\u683c\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488 iter.isEmpty() to check if empty iter ++; } QList int ::const_iterator citer = list.constBegin(); while (citer != list.constEnd()) { str += + QString::number(*citer); citer ++; } foreach(\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b8f) QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } int v; foreach (v, list) { str += + QString::number(v); } \u5e38\u7528\u5173\u8054\u5b58\u50a8\u5bb9\u5668 \u8bf4\u660e QMap: \u5347\u5e8f\u5b58\u50a8. [], insert(), value(). \u5bf9\u4e8e\u975econstQMap, \u7528[]\u53d6\u4e0d\u5b58\u5728Key\u7684\u503c\u4f1a\u521b\u5efa\u8fd9\u4e2aKey\u5e76\u4e14Value\u8d4b\u4e86\u7a7a\u503c, \u6240\u4ee5\u8bf7\u4f7f\u7528value()\u51fd\u6570 QMultiMap: QMap\u662f\u5355\u503c\u7c7b\u578b, QMultiMap\u5141\u8bb8\u4e00\u4e2akey\u5bf9\u5e94\u591a\u4e2avalue QHash: \u5185\u90e8\u5b58\u50a8\u4e0d\u6392\u5e8f, \u67e5\u627e\u901f\u5ea6\u6bd4QMap\u5feb. reserve()\u6269\u5927\u7a7a\u95f4, squeeze()\u538b\u7f29\u7a7a\u95f4 QMultiHash: QHash\u4e5f\u662f\u5355\u503c\u7c7b\u578b, QMultiHash\u5141\u8bb8\u591a\u503c QCache: \u7f13\u5b58 QSet: \u4ec5\u5b58key \u904d\u5386(\u904d\u5386\u5173\u8054\u5b58\u50a8\u5bb9\u5668\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662fJava\u98ce\u683c\u904d\u5386\u5668, \u56e0\u4e3aJava\u98ce\u683c\u904d\u5386\u5668\u7684next previous\u8fd4\u56de\u7684\u662f\u952e\u503c\u5bf9) Java style QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMutableMapIterator int, QString mmapIter(map); while(mmapIter.hasNext()) { mmapIter.next(); // \u5982\u679c\u4e0d\u4f7f\u7528next\u8fd4\u56de\u503c mmapIter.setValue(mmapIter.value() + new ); } QMapIterator int, QString mapIter(map); while (mapIter.hasNext()) { str += \\n + mapIter.next().value(); // \u4f7f\u7528next\u8fd4\u56de\u503c } STL style QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMap int, QString ::iterator iter = map.begin(); while(iter != map.end()) { iter.value() += new ; iter ++; } QMap int, QString ::const_iterator citer = map.constBegin(); while(citer != map.constEnd()) { str += \\n + QString::number(citer.key()) + citer.value(); citer ++; } foreach \u5bf9\u4e8eQMap\u8fd9\u6837\u7684\u5bb9\u5668\u5982\u679c\u8981\u4f7f\u7528foreach\u5904\u7406\u6240\u6709key\u548cvalue\u7684\u60c5\u51b5, \u53ea\u80fdkey\u548cvalue\u5206\u522b\u5faa\u73af, \u4f46\u662f\u6709\u65f6\u5019\u6ca1\u6709\u610f\u4e49, \u4f8b\u5982: foreach(int k, map.keys()) { foreach(QString v, map.values()) { str += \\n + QString::number(k) + v; } } \u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528: QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); foreach(int k, map.keys()) { QString v = map.value(k); if (!v.isEmpty()) { str += \\n + QString::number(k) + : + v; } } Others QPair T1, T2 qCopyBackward QEqual","title":"Container"},{"location":"qt/7-container/#container","text":"","title":"Container"},{"location":"qt/7-container/#_1","text":"","title":"\u5e38\u7528\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668"},{"location":"qt/7-container/#_2","text":"QVector QLinkedList \\ / +----QList----+ | +----------+---------+ | | | QStringList QStack QQueue QVector: \u5411\u91cf, \u7c7b\u4f3c\u6570\u7ec4, \u5b58\u50a8\u7a7a\u95f4\u8fde\u7eed, \u9002\u5408\u83b7\u53d6\u968f\u673a\u4f4d\u7f6e\u6570\u636e\u6216\u8005\u672b\u5c3e\u5904\u6dfb\u52a0\u6570\u636e, \u4e0d\u9002\u5408\u4e2d\u95f4\u4f4d\u7f6e\u63d2\u5165\u5220\u9664\u6570\u636e. \u53ef\u4ee5\u4f7f\u7528[], append(), , \u904d\u5386\u5668 QLinkedList: \u94fe\u8868, \u9002\u5408\u6570\u636e\u63d2\u5165\u5220\u9664, \u4f46\u662f\u968f\u673a\u4f4d\u7f6e\u8bbf\u95ee\u6bd4\u8f83\u6162. \u53ef\u4ee5\u4f7f\u7528appen(), , \u904d\u5386\u5668 QList: \u540c\u65f6\u62e5\u6709QVector\u548cQLinkedList\u5927\u591a\u6570\u6709\u70b9, \u5c3d\u91cf\u4f7f\u7528QList\u5bb9\u5668\u66ff\u4ee3QVector\u548cQLinkedList QStringList QStack QQueue\u662fQList\u7684\u7279\u4f8b. QStack: push(), pop(), top(). QQueue: enqueue(), dequeue(), head().","title":"\u8bf4\u660e"},{"location":"qt/7-container/#_3","text":"\u4f7f\u7528\u904d\u5386\u5668\u548c\u4f7f\u7528foreach \u904d\u5386\u5668\u6709\u4e24\u79cd\u98ce\u683c: Java style(\u98ce\u683c\u7b80\u5355, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20) and STL style(\u529f\u80fd\u5f3a\u5927, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488) \u6bcf\u79cd\u5bb9\u5668\u7c7b\u90fd\u6709\u5bf9\u5e94\u7684\u4e24\u79cd\u904d\u5386\u5668: \u53ea\u8bfb\u904d\u5386\u5668\u548c\u8bfb\u5199\u904d\u5386\u5668 Java style: \u53ea\u8bfb\u904d\u5386\u5668: QVectorIterator, QLinkedListIterator, QListIterator... \u8bfb\u5199\u904d\u5386\u5668: QMutableVectorIterator, QMutableLinkedListIterator, QMutableListIterator... STL style: \u5bf9\u4e8e\u67d0\u4e9b\u8fd4\u56de\u5bb9\u5668\u7684\u51fd\u6570, \u5982\u679c\u4f7f\u7528STL\u98ce\u683c\u904d\u5386\u5668, \u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u62f7\u8d1d, \u7136\u540e\u518d\u904d\u5386, \u6765\u907f\u514d\u8c03\u7528\u4e34\u65f6\u5bf9\u8c61\u7684\u51fd\u6570 \u4f7f\u7528Java\u98ce\u683c\u904d\u5386\u5668\u65f6\u4e0d\u4f1a\u6709\u8fd9\u79cd\u95ee\u9898, \u56e0\u4e3a\u7cfb\u7edf\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u8fd9\u4e2a\u62f7\u8d1d(\u9690\u5f0f\u6570\u636e\u5171\u4eab, \u4f8b\u5982QByteArray, QBrush, QFont, QImage, QPixmap, Qstring) T::iterator T::const_iterator \u6ce8\u610f \u4f8b\u5982QList\u6709\u591a\u79cd\u7528\u6cd5\u8d4b\u503c, \u521d\u59cb\u5316\u65f6\u5019\u8d4b\u503c, [], append(), , \u5c3d\u91cf\u4f7f\u7528\u5bb9\u5668\u65f6\u4e0d\u8981\u4f7f\u7528[]\u800c\u4f7f\u7528at\u51fd\u6570, \u56e0\u4e3aQMap/QHash\u7b49\u5bb9\u5668\u4e2d\u53ef\u80fd\u4f1a\u63d2\u5165\u4e00\u4e2a\u503c\u4f46\u7ed3\u679c\u5e76\u4e0d\u662f\u81ea\u5df1\u9700\u8981\u7684. \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668\u6700\u597d\u4e00\u76f4\u4f7f\u7528\u8fed\u4ee3\u5668\u6216foreach, \u8fed\u4ee3\u5668\u4e5f\u6700\u597d\u4f7f\u7528STL\u98ce\u683c\u7684, \u56e0\u4e3aQT\u4e2d\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u673a\u5236(\u7c7b\u4f3ckernel\u4e2d\u7684cow - copy on write), \u8fd9\u79cd\u673a\u5236\u5728\u8d4b\u503c\u65f6\u4f1a\u8ba9\u4eba\u8ff7\u60d1 \u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u524d\u8fb9\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u8981\u518d\u4f7f\u7528\u8fed\u4ee3\u5668\u65f6\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u8fed\u4ee3\u5668 \u5bf9\u4e8e\u975econst\u5bb9\u5668, begin()/end()\u7b49\u5728\u6570\u636e\u6539\u53d8\u65f6\u4f1a\u8fdb\u884c\u6df1\u590d\u5236, \u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528const_iterator, constBegin()\u548cconstEnd QList int v = {1, 3, 5, 7, 9}; v[2] = 8; === v.append(11); v 13","title":"\u904d\u5386"},{"location":"qt/7-container/#qlist","text":"Headers: #include QList #include QMutableListIterator #include QListIterator","title":"\u4ee3\u7801(QList\u4e3a\u4f8b)"},{"location":"qt/7-container/#java-style","text":"QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QMutableListIterator int mutIter(list); // \u524d\u8fb9\u5bf9list\u7684\u64cd\u4f5c\u4f1a\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u9700\u8981\u4e34\u65f6\u5b9a\u4e49\u4e00\u4e2a while (mutIter.hasNext()) { // \u7531\u6b64\u53ef\u89c1, Java\u98ce\u683c\u7684\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20 mutIter.setValue(mutIter.next() + 3); // to remove item with mutIter.remove() } QListIterator int iter(list); while (iter.hasNext()) { str += + QString::number(iter.next()); }","title":"Java style"},{"location":"qt/7-container/#stl-style","text":"QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QList int ::iterator iter = list.begin(); while (iter != list.end()) { *iter = *iter + 3; // \u7531\u6b64\u53ef\u89c1, STL\u98ce\u683c\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488 iter.isEmpty() to check if empty iter ++; } QList int ::const_iterator citer = list.constBegin(); while (citer != list.constEnd()) { str += + QString::number(*citer); citer ++; }","title":"STL style"},{"location":"qt/7-container/#foreach","text":"QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } int v; foreach (v, list) { str += + QString::number(v); }","title":"foreach(\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b8f)"},{"location":"qt/7-container/#_4","text":"","title":"\u5e38\u7528\u5173\u8054\u5b58\u50a8\u5bb9\u5668"},{"location":"qt/7-container/#_5","text":"QMap: \u5347\u5e8f\u5b58\u50a8. [], insert(), value(). \u5bf9\u4e8e\u975econstQMap, \u7528[]\u53d6\u4e0d\u5b58\u5728Key\u7684\u503c\u4f1a\u521b\u5efa\u8fd9\u4e2aKey\u5e76\u4e14Value\u8d4b\u4e86\u7a7a\u503c, \u6240\u4ee5\u8bf7\u4f7f\u7528value()\u51fd\u6570 QMultiMap: QMap\u662f\u5355\u503c\u7c7b\u578b, QMultiMap\u5141\u8bb8\u4e00\u4e2akey\u5bf9\u5e94\u591a\u4e2avalue QHash: \u5185\u90e8\u5b58\u50a8\u4e0d\u6392\u5e8f, \u67e5\u627e\u901f\u5ea6\u6bd4QMap\u5feb. reserve()\u6269\u5927\u7a7a\u95f4, squeeze()\u538b\u7f29\u7a7a\u95f4 QMultiHash: QHash\u4e5f\u662f\u5355\u503c\u7c7b\u578b, QMultiHash\u5141\u8bb8\u591a\u503c QCache: \u7f13\u5b58 QSet: \u4ec5\u5b58key","title":"\u8bf4\u660e"},{"location":"qt/7-container/#java-javanextprevious","text":"","title":"\u904d\u5386(\u904d\u5386\u5173\u8054\u5b58\u50a8\u5bb9\u5668\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662fJava\u98ce\u683c\u904d\u5386\u5668, \u56e0\u4e3aJava\u98ce\u683c\u904d\u5386\u5668\u7684next&amp;previous\u8fd4\u56de\u7684\u662f\u952e\u503c\u5bf9)"},{"location":"qt/7-container/#java-style_1","text":"QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMutableMapIterator int, QString mmapIter(map); while(mmapIter.hasNext()) { mmapIter.next(); // \u5982\u679c\u4e0d\u4f7f\u7528next\u8fd4\u56de\u503c mmapIter.setValue(mmapIter.value() + new ); } QMapIterator int, QString mapIter(map); while (mapIter.hasNext()) { str += \\n + mapIter.next().value(); // \u4f7f\u7528next\u8fd4\u56de\u503c }","title":"Java style"},{"location":"qt/7-container/#stl-style_1","text":"QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMap int, QString ::iterator iter = map.begin(); while(iter != map.end()) { iter.value() += new ; iter ++; } QMap int, QString ::const_iterator citer = map.constBegin(); while(citer != map.constEnd()) { str += \\n + QString::number(citer.key()) + citer.value(); citer ++; }","title":"STL style"},{"location":"qt/7-container/#foreach_1","text":"\u5bf9\u4e8eQMap\u8fd9\u6837\u7684\u5bb9\u5668\u5982\u679c\u8981\u4f7f\u7528foreach\u5904\u7406\u6240\u6709key\u548cvalue\u7684\u60c5\u51b5, \u53ea\u80fdkey\u548cvalue\u5206\u522b\u5faa\u73af, \u4f46\u662f\u6709\u65f6\u5019\u6ca1\u6709\u610f\u4e49, \u4f8b\u5982: foreach(int k, map.keys()) { foreach(QString v, map.values()) { str += \\n + QString::number(k) + v; } } \u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528: QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); foreach(int k, map.keys()) { QString v = map.value(k); if (!v.isEmpty()) { str += \\n + QString::number(k) + : + v; } }","title":"foreach"},{"location":"qt/7-container/#others","text":"QPair T1, T2 qCopyBackward QEqual","title":"Others"},{"location":"qt/9-algo-data-type/","text":"Algo and Data type \u901a\u7528\u7b97\u6cd5(STL\u98ce\u683c\u7684\u904d\u5386\u5668) qFind qFill qCopy qSort qSwap qAbs qMin qMax \u6570\u636e\u7c7b\u578b QString QString str = aaa ; str = QString( bbb ); =, +, += str = str + bbb ; str += userName + \\n ; append str.append( ccc ); sprintf str.sprintf( %s ddd %d , aaaa , 555); arg str = QString( %1 %2 ).arg( aaa ).arg(111); number and setNum (translate number into string) str = QString::number(222); str.setNum(333); toXXX bool ok; int d = str.toInt( ok); if (ok) { } else { } mid, left, right QString a = 123456 ; QString b = a.mid(3, 2); indexOf QString a = abcdefg ; QString b = de ; int i = a.indexOf(b); startsWith, sendsWith if (url.startsWith( https:// ) url.endsWith( .png )) {} translate (c style string = QString) str += aaaa ; // str to be a QString QString( bbbb ); // \u5f3a\u5236\u8f6c\u6362 QString str = QString::fromUtf8( abcdefg ); char* a = str.toUtf8(); const char* a = qPrintable(QString( xxxxx )); replace, trimmed, toLowwer, toUpper, remove, insert, simplified QVariant \u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u503c, \u4e5f\u88ab\u7528\u4e8e\u6784\u5efameta-object, \u56e0\u6b64\u662fQtCore\u7684\u4e00\u90e8\u5206 value() QIcon icon = var.value QIcon (); // \u975eGUI\u6a21\u5757\u4e2d\u548cGUI\u6a21\u5757\u4e2d\u90fd\u9002\u7528 int a = var.toInt(); // \u975eGUI\u6a21\u5757\u4e2d, toString, to... QDateTime #include QDateTime void MainWindow::editDateTimeSlot() { QDateTime tm = QDateTime::currentDateTime(); QString current = tm.toString( hh:mm:ss (M-d-yyyy) ); ui- textEdit- append(current); }","title":"Algo and Data type"},{"location":"qt/9-algo-data-type/#algo-and-data-type","text":"","title":"Algo and Data type"},{"location":"qt/9-algo-data-type/#stl","text":"qFind qFill qCopy qSort qSwap qAbs qMin qMax","title":"\u901a\u7528\u7b97\u6cd5(STL\u98ce\u683c\u7684\u904d\u5386\u5668)"},{"location":"qt/9-algo-data-type/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"qt/9-algo-data-type/#qstring","text":"QString str = aaa ; str = QString( bbb );","title":"QString"},{"location":"qt/9-algo-data-type/#_2","text":"str = str + bbb ; str += userName + \\n ;","title":"=, +, +="},{"location":"qt/9-algo-data-type/#append","text":"str.append( ccc );","title":"append"},{"location":"qt/9-algo-data-type/#sprintf","text":"str.sprintf( %s ddd %d , aaaa , 555);","title":"sprintf"},{"location":"qt/9-algo-data-type/#arg","text":"str = QString( %1 %2 ).arg( aaa ).arg(111);","title":"arg"},{"location":"qt/9-algo-data-type/#number-and-setnum-translate-number-into-string","text":"str = QString::number(222); str.setNum(333);","title":"number and setNum (translate number into string)"},{"location":"qt/9-algo-data-type/#toxxx","text":"bool ok; int d = str.toInt( ok); if (ok) { } else { }","title":"toXXX"},{"location":"qt/9-algo-data-type/#mid-left-right","text":"QString a = 123456 ; QString b = a.mid(3, 2);","title":"mid, left, right"},{"location":"qt/9-algo-data-type/#indexof","text":"QString a = abcdefg ; QString b = de ; int i = a.indexOf(b);","title":"indexOf"},{"location":"qt/9-algo-data-type/#startswith-sendswith","text":"if (url.startsWith( https:// ) url.endsWith( .png )) {}","title":"startsWith, sendsWith"},{"location":"qt/9-algo-data-type/#translate-c-style-string-qstring","text":"str += aaaa ; // str to be a QString QString( bbbb ); // \u5f3a\u5236\u8f6c\u6362 QString str = QString::fromUtf8( abcdefg ); char* a = str.toUtf8(); const char* a = qPrintable(QString( xxxxx ));","title":"translate (c style string &lt;=&gt; QString)"},{"location":"qt/9-algo-data-type/#replace-trimmed-tolowwer-toupper-remove-insert-simplified","text":"","title":"replace, trimmed, toLowwer, toUpper, remove, insert, simplified"},{"location":"qt/9-algo-data-type/#qvariant","text":"\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u503c, \u4e5f\u88ab\u7528\u4e8e\u6784\u5efameta-object, \u56e0\u6b64\u662fQtCore\u7684\u4e00\u90e8\u5206","title":"QVariant"},{"location":"qt/9-algo-data-type/#value","text":"QIcon icon = var.value QIcon (); // \u975eGUI\u6a21\u5757\u4e2d\u548cGUI\u6a21\u5757\u4e2d\u90fd\u9002\u7528 int a = var.toInt(); // \u975eGUI\u6a21\u5757\u4e2d, toString, to...","title":"value()"},{"location":"qt/9-algo-data-type/#qdatetime","text":"#include QDateTime void MainWindow::editDateTimeSlot() { QDateTime tm = QDateTime::currentDateTime(); QString current = tm.toString( hh:mm:ss (M-d-yyyy) ); ui- textEdit- append(current); }","title":"QDateTime"},{"location":"qt/14-dnd/","text":"Qt: Drag and Drop (DnD) 1. drag text file to widget 2. clipboard 3. misc","title":"Qt: Drag and Drop (DnD)"},{"location":"qt/14-dnd/#qt-drag-and-drop-dnd","text":"","title":"Qt: Drag and Drop (DnD)"},{"location":"qt/14-dnd/#1-drag-text-file-to-widget","text":"","title":"1. drag text file to widget"},{"location":"qt/14-dnd/#2-clipboard","text":"","title":"2. clipboard"},{"location":"qt/14-dnd/#3-misc","text":"","title":"3. misc"},{"location":"qt/14-dnd/1-text-widget/","text":"drag text file to widget Codes Data member and member function in class MainWindow protected: void dragEnterEvent(QDragEnterEvent *event); void dropEvent(QDropEvent *event); private: QTextEdit *textEdit; Headers #include QTextEdit #include QDragEnterEvent #include QDropEvent #include QMimeData #include QList #include QUrl #include QFile #include QTextStream in constructure of MainWindow textEdit = new QTextEdit(tr( Drop text file ), this); textEdit- setAcceptDrops(false); setAcceptDrops(true); mainLayout- addWidget(textEdit); events void MainWindow::dragEnterEvent(QDragEnterEvent *event) { if (event- mimeData()- hasFormat( text/uri-list )) { event- acceptProposedAction(); } } void MainWindow::dropEvent(QDropEvent *event) { QList QUrl list = event- mimeData()- urls(); if (list.isEmpty()) { QMessageBox::information(NULL, tr( no file selected ), tr( no file selected )); } if (list.size() 1) { QMessageBox::information(NULL, tr( files ), tr( only 1 file can be accepted )); } QString fname = list.first().toLocalFile(); QFile file(fname); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( open file ), tr( open file fail )); } QTextStream in( file); QString content; content = in.readAll(); textEdit- setText(content); file.close(); }","title":"drag text file to widget"},{"location":"qt/14-dnd/1-text-widget/#drag-text-file-to-widget","text":"","title":"drag text file to widget"},{"location":"qt/14-dnd/1-text-widget/#codes","text":"","title":"Codes"},{"location":"qt/14-dnd/1-text-widget/#data-member-and-member-function-in-class-mainwindow","text":"protected: void dragEnterEvent(QDragEnterEvent *event); void dropEvent(QDropEvent *event); private: QTextEdit *textEdit;","title":"Data member and member function in class MainWindow"},{"location":"qt/14-dnd/1-text-widget/#headers","text":"#include QTextEdit #include QDragEnterEvent #include QDropEvent #include QMimeData #include QList #include QUrl #include QFile #include QTextStream","title":"Headers"},{"location":"qt/14-dnd/1-text-widget/#in-constructure-of-mainwindow","text":"textEdit = new QTextEdit(tr( Drop text file ), this); textEdit- setAcceptDrops(false); setAcceptDrops(true); mainLayout- addWidget(textEdit);","title":"in constructure of MainWindow"},{"location":"qt/14-dnd/1-text-widget/#events","text":"void MainWindow::dragEnterEvent(QDragEnterEvent *event) { if (event- mimeData()- hasFormat( text/uri-list )) { event- acceptProposedAction(); } } void MainWindow::dropEvent(QDropEvent *event) { QList QUrl list = event- mimeData()- urls(); if (list.isEmpty()) { QMessageBox::information(NULL, tr( no file selected ), tr( no file selected )); } if (list.size() 1) { QMessageBox::information(NULL, tr( files ), tr( only 1 file can be accepted )); } QString fname = list.first().toLocalFile(); QFile file(fname); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( open file ), tr( open file fail )); } QTextStream in( file); QString content; content = in.readAll(); textEdit- setText(content); file.close(); }","title":"events"},{"location":"qt/14-dnd/2-clipboard/","text":"clipboard Headers #include QApplication #include QVBoxLayout #include QHBoxLayout #include QLabel #include QTextEdit #include QPushButton #include QClipboard Class class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); private slots: void execAction(); void setClipboard(); void getClipboard(); private: QWidget *widget; QVBoxLayout *mainLayout; QLabel *label; QTextEdit *textEdit; QPushButton *copyBtn; QPushButton *pasteBtn; QHBoxLayout *topLayout; QHBoxLayout *bottomLayout; }; Slots void MainWindow::setClipboard() { QClipboard *clipBoard = QApplication::clipboard(); clipBoard- setText(textEdit- toPlainText()); } void MainWindow::getClipboard() { QClipboard *clipBoard = QApplication::clipboard(); textEdit- setText(clipBoard- text()); } Codes in constructor MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { widget = new QWidget; mainLayout = new QVBoxLayout; label = new QLabel(tr( Input )); textEdit = new QTextEdit; copyBtn = new QPushButton(tr( Set to clipboard )); pasteBtn = new QPushButton(tr( Get from clipboard )); label- setBuddy(textEdit); topLayout = new QHBoxLayout; bottomLayout = new QHBoxLayout; topLayout- addWidget(label); topLayout- addWidget(textEdit); bottomLayout- addWidget(copyBtn); bottomLayout- addWidget(pasteBtn); mainLayout- addLayout(topLayout); mainLayout- addLayout(bottomLayout); connect(copyBtn, SIGNAL(clicked()), this, SLOT(setClipboard())); connect(pasteBtn, SIGNAL(clicked()), this, SLOT(getClipboard())); widget- setLayout(mainLayout); setCentralWidget(widget); setFixedSize(800, 400); } dataChanged QClipboard\u7c7b\u63d0\u4f9b\u4e86dataChanged()\u4fe1\u53f7, \u7528\u6765\u76d1\u542c\u526a\u5207\u677f\u6570\u636e\u53d8\u5316","title":"clipboard"},{"location":"qt/14-dnd/2-clipboard/#clipboard","text":"","title":"clipboard"},{"location":"qt/14-dnd/2-clipboard/#headers","text":"#include QApplication #include QVBoxLayout #include QHBoxLayout #include QLabel #include QTextEdit #include QPushButton #include QClipboard","title":"Headers"},{"location":"qt/14-dnd/2-clipboard/#class","text":"class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); private slots: void execAction(); void setClipboard(); void getClipboard(); private: QWidget *widget; QVBoxLayout *mainLayout; QLabel *label; QTextEdit *textEdit; QPushButton *copyBtn; QPushButton *pasteBtn; QHBoxLayout *topLayout; QHBoxLayout *bottomLayout; };","title":"Class"},{"location":"qt/14-dnd/2-clipboard/#slots","text":"void MainWindow::setClipboard() { QClipboard *clipBoard = QApplication::clipboard(); clipBoard- setText(textEdit- toPlainText()); } void MainWindow::getClipboard() { QClipboard *clipBoard = QApplication::clipboard(); textEdit- setText(clipBoard- text()); }","title":"Slots"},{"location":"qt/14-dnd/2-clipboard/#codes-in-constructor","text":"MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { widget = new QWidget; mainLayout = new QVBoxLayout; label = new QLabel(tr( Input )); textEdit = new QTextEdit; copyBtn = new QPushButton(tr( Set to clipboard )); pasteBtn = new QPushButton(tr( Get from clipboard )); label- setBuddy(textEdit); topLayout = new QHBoxLayout; bottomLayout = new QHBoxLayout; topLayout- addWidget(label); topLayout- addWidget(textEdit); bottomLayout- addWidget(copyBtn); bottomLayout- addWidget(pasteBtn); mainLayout- addLayout(topLayout); mainLayout- addLayout(bottomLayout); connect(copyBtn, SIGNAL(clicked()), this, SLOT(setClipboard())); connect(pasteBtn, SIGNAL(clicked()), this, SLOT(getClipboard())); widget- setLayout(mainLayout); setCentralWidget(widget); setFixedSize(800, 400); }","title":"Codes in constructor"},{"location":"qt/14-dnd/2-clipboard/#datachanged","text":"QClipboard\u7c7b\u63d0\u4f9b\u4e86dataChanged()\u4fe1\u53f7, \u7528\u6765\u76d1\u542c\u526a\u5207\u677f\u6570\u636e\u53d8\u5316","title":"dataChanged"},{"location":"qt/14-dnd/3-misc/","text":"misc (\u7a0d\u5fae\u590d\u6742, \u6682\u65f6\u6ca1\u5b9e\u73b0\u5b9e\u4f8b, \u5177\u4f53\u5185\u5bb9\u5b66\u4e60w3cschool) drag list item to another list self-defined DnD","title":"misc (\u7a0d\u5fae\u590d\u6742, \u6682\u65f6\u6ca1\u5b9e\u73b0\u5b9e\u4f8b, \u5177\u4f53\u5185\u5bb9\u5b66\u4e60w3cschool)"},{"location":"qt/14-dnd/3-misc/#misc-w3cschool","text":"drag list item to another list self-defined DnD","title":"misc (\u7a0d\u5fae\u590d\u6742, \u6682\u65f6\u6ca1\u5b9e\u73b0\u5b9e\u4f8b, \u5177\u4f53\u5185\u5bb9\u5b66\u4e60w3cschool)"},{"location":"qt/8-model-view/","text":"Qt: model-view 1. description 2. item-view 3. model-view","title":"Qt: model-view"},{"location":"qt/8-model-view/#qt-model-view","text":"","title":"Qt: model-view"},{"location":"qt/8-model-view/#1-description","text":"","title":"1. description"},{"location":"qt/8-model-view/#2-item-view","text":"","title":"2. item-view"},{"location":"qt/8-model-view/#3-model-view","text":"","title":"3. model-view"},{"location":"qt/8-model-view/1-description/","text":"model-view framework \u6b64\u90e8\u5206\u4e3a\u4e2a\u4eba\u5bf9\u7f51\u7edc\u4e0a\u6587\u6863\u7684\u7406\u89e3, \u672a\u5fc5\u51c6\u786e, \u968f\u65f6\u4fee\u6539 description MVC (model-view-controller) in Smalltalk model: \u8d1f\u8d23\u83b7\u53d6\u9700\u8981\u663e\u793a\u7684\u6570\u636e, \u5e76\u4e14\u80fd\u591f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u4fee\u6539 view: \u8d1f\u8d23\u628a\u6a21\u578b\u6570\u636e\u663e\u793a\u7ed9\u7528\u6237(\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\u53ef\u80fd\u53ea\u663e\u793a\u4e00\u5c0f\u90e8\u5206) controller: \u8d1f\u8d23\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u5a92\u4ecb, \u5c06\u7528\u6237\u7684\u52a8\u4f5c\u89e3\u6790\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8f6c\u53d1\u7ed9\u6a21\u578b\u6267\u884c, \u5e76\u5c06\u6a21\u578b\u4e2d\u9700\u8981\u88ab\u663e\u793a\u7684\u6570\u636e\u76f4\u63a5\u8f6c\u53d1\u7ed9\u89c6\u56fe\u8fdb\u884c\u663e\u793a model-view in QT Qt\u4e2d\u7684MVC\u5e76\u4e0d\u662f\u4e09\u5c42\u67b6\u6784, \u800c\u662f\u4e00\u4e2amodel/view\u8bbe\u8ba1. view\u5c06\u7528\u6237\u8f93\u5165\u59d4\u6258\u7ed9delegate\u5904\u7406. model: \u76f8\u5f53\u4e8eMVC\u4e2d\u7684model, \u53d6\u56deview\u6240\u8981\u5c55\u793a\u7684\u6570\u636e, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u7ed9\u591a\u4e2aview, \u8ba9\u8fd9\u4e9bview\u80fd\u591f\u663e\u793a\u540c\u6837\u7684\u6570\u636e, \u4e5f\u5c31\u662f\u4e3a\u540c\u4e00\u4e2a\u6570\u636e\u63d0\u4f9b\u4e0d\u540c\u663e\u793a\u65b9\u5f0f, QT\u81ea\u52a8\u5bf9\u8fd9\u4e9bview\u4fdd\u6301\u540c\u6b65, \u81ea\u52a8\u5237\u65b0\u6240\u6709\u7684view\u4ee5\u663e\u793a\u6700\u65b0\u7684\u6570\u636e. \u8fd9\u6837\u6211\u4eec\u53ea\u5bf9model\u8fdb\u884c\u4fee\u6539, view\u4f1a\u81ea\u52a8\u66f4\u65b0 view: \u591a\u4e2aview\u53ef\u4ee5\u6ce8\u518c\u5230\u4e00\u4e2amodel\u4e0a delegate: \u5bf9\u5e94MVC\u4e2d\u7684controller, \u63d0\u4f9b\u5bf9item\u6e32\u67d3\u548c\u7f16\u8f91\u63a7\u5236, \u6bcf\u79cd\u89c6\u56feQT\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u4ee3\u7406 +--Delegate--+ | | \\|/ \\|/ DataSource --- Model ----- View difference in MVC(Smalltalk) and model-view(QT) QT\u7684model-view\u4e2d, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2aview model\u4e2d\u6570\u636e\u548cview\u4e2d\u663e\u793a\u7684\u6570\u636e\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3000 \u4e09\u5c42\u67b6\u6784\u548c\u4e24\u5c42\u67b6\u6784 item view model\u548cview\u662f\u6bd4\u8f83\u5927\u7684\u7ec4\u4ef6, \u529f\u80fd\u6bd4\u8f83\u5f3a\u5927, \u5982\u679c\u53ea\u662f\u5c11\u91cf\u6570\u636e\u548c\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\u7684\u5730\u65b9, \u53ef\u4ee5\u4f7f\u7528\u8f7b\u91cf\u7ea7item-view\u7c7b: QListWidget, QTableWidget, QTreeWidget, \u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5bf9item\u64cd\u4f5c. \u8fd9\u4e9b\u8f7b\u91cf\u7ea7\u7ec4\u4ef6\u4e2d\u5305\u542b\u4e86\u5bf9\u5e94\u7684item, \u4f8b\u5982QTableWidget\u4e2d\u5305\u542b\u4e86QTableWidgetItem \u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u548c\u529f\u80fd\u5927\u7684\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528model\u548cview\u7c7b, model\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49model\u4e5f\u53ef\u4ee5\u662fQT\u9884\u7f6emodel, view\u7c7b\u5982QListView, QTableView, QTreeView(\u4f8b\u5982\u6570\u636e\u5e93\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528QTableView\u548cQSqlTableModel\u4e24\u4e2a\u7c7b)","title":"model-view framework"},{"location":"qt/8-model-view/1-description/#model-view-framework","text":"\u6b64\u90e8\u5206\u4e3a\u4e2a\u4eba\u5bf9\u7f51\u7edc\u4e0a\u6587\u6863\u7684\u7406\u89e3, \u672a\u5fc5\u51c6\u786e, \u968f\u65f6\u4fee\u6539","title":"model-view framework"},{"location":"qt/8-model-view/1-description/#description","text":"","title":"description"},{"location":"qt/8-model-view/1-description/#mvc-model-view-controller-in-smalltalk","text":"model: \u8d1f\u8d23\u83b7\u53d6\u9700\u8981\u663e\u793a\u7684\u6570\u636e, \u5e76\u4e14\u80fd\u591f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u4fee\u6539 view: \u8d1f\u8d23\u628a\u6a21\u578b\u6570\u636e\u663e\u793a\u7ed9\u7528\u6237(\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\u53ef\u80fd\u53ea\u663e\u793a\u4e00\u5c0f\u90e8\u5206) controller: \u8d1f\u8d23\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u5a92\u4ecb, \u5c06\u7528\u6237\u7684\u52a8\u4f5c\u89e3\u6790\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8f6c\u53d1\u7ed9\u6a21\u578b\u6267\u884c, \u5e76\u5c06\u6a21\u578b\u4e2d\u9700\u8981\u88ab\u663e\u793a\u7684\u6570\u636e\u76f4\u63a5\u8f6c\u53d1\u7ed9\u89c6\u56fe\u8fdb\u884c\u663e\u793a","title":"MVC (model-view-controller) in Smalltalk"},{"location":"qt/8-model-view/1-description/#model-view-in-qt","text":"Qt\u4e2d\u7684MVC\u5e76\u4e0d\u662f\u4e09\u5c42\u67b6\u6784, \u800c\u662f\u4e00\u4e2amodel/view\u8bbe\u8ba1. view\u5c06\u7528\u6237\u8f93\u5165\u59d4\u6258\u7ed9delegate\u5904\u7406. model: \u76f8\u5f53\u4e8eMVC\u4e2d\u7684model, \u53d6\u56deview\u6240\u8981\u5c55\u793a\u7684\u6570\u636e, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u7ed9\u591a\u4e2aview, \u8ba9\u8fd9\u4e9bview\u80fd\u591f\u663e\u793a\u540c\u6837\u7684\u6570\u636e, \u4e5f\u5c31\u662f\u4e3a\u540c\u4e00\u4e2a\u6570\u636e\u63d0\u4f9b\u4e0d\u540c\u663e\u793a\u65b9\u5f0f, QT\u81ea\u52a8\u5bf9\u8fd9\u4e9bview\u4fdd\u6301\u540c\u6b65, \u81ea\u52a8\u5237\u65b0\u6240\u6709\u7684view\u4ee5\u663e\u793a\u6700\u65b0\u7684\u6570\u636e. \u8fd9\u6837\u6211\u4eec\u53ea\u5bf9model\u8fdb\u884c\u4fee\u6539, view\u4f1a\u81ea\u52a8\u66f4\u65b0 view: \u591a\u4e2aview\u53ef\u4ee5\u6ce8\u518c\u5230\u4e00\u4e2amodel\u4e0a delegate: \u5bf9\u5e94MVC\u4e2d\u7684controller, \u63d0\u4f9b\u5bf9item\u6e32\u67d3\u548c\u7f16\u8f91\u63a7\u5236, \u6bcf\u79cd\u89c6\u56feQT\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u4ee3\u7406 +--Delegate--+ | | \\|/ \\|/ DataSource --- Model ----- View","title":"model-view in QT"},{"location":"qt/8-model-view/1-description/#difference-in-mvcsmalltalk-and-model-viewqt","text":"QT\u7684model-view\u4e2d, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2aview model\u4e2d\u6570\u636e\u548cview\u4e2d\u663e\u793a\u7684\u6570\u636e\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3000 \u4e09\u5c42\u67b6\u6784\u548c\u4e24\u5c42\u67b6\u6784","title":"difference in MVC(Smalltalk) and model-view(QT)"},{"location":"qt/8-model-view/1-description/#item-view","text":"model\u548cview\u662f\u6bd4\u8f83\u5927\u7684\u7ec4\u4ef6, \u529f\u80fd\u6bd4\u8f83\u5f3a\u5927, \u5982\u679c\u53ea\u662f\u5c11\u91cf\u6570\u636e\u548c\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\u7684\u5730\u65b9, \u53ef\u4ee5\u4f7f\u7528\u8f7b\u91cf\u7ea7item-view\u7c7b: QListWidget, QTableWidget, QTreeWidget, \u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5bf9item\u64cd\u4f5c. \u8fd9\u4e9b\u8f7b\u91cf\u7ea7\u7ec4\u4ef6\u4e2d\u5305\u542b\u4e86\u5bf9\u5e94\u7684item, \u4f8b\u5982QTableWidget\u4e2d\u5305\u542b\u4e86QTableWidgetItem \u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u548c\u529f\u80fd\u5927\u7684\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528model\u548cview\u7c7b, model\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49model\u4e5f\u53ef\u4ee5\u662fQT\u9884\u7f6emodel, view\u7c7b\u5982QListView, QTableView, QTreeView(\u4f8b\u5982\u6570\u636e\u5e93\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528QTableView\u548cQSqlTableModel\u4e24\u4e2a\u7c7b)","title":"item view"},{"location":"qt/8-model-view/2-item-view/","text":"item-view QListWidget Header #include QListWidget Data member QWidget *widget; QVBoxLayout *layout; QLabel *info; QListWidget *list Slot void MainWindow::curRowChanged(int curRow) { info- setText(tr( current row( ) + QString::number(curRow) + tr( ): ) + list- item(curRow)- text()); } Codes widget = new QWidget; layout = new QVBoxLayout; info = new QLabel; list = new QListWidget; list- addItem(new QListWidgetItem(QIcon( :/smiling.png ), tr( smiling ))); list- addItem(new QListWidgetItem(QIcon( :/sleeping.png ), tr( sleeping ))); list- addItem(new QListWidgetItem(QIcon( :/crying.png ), tr( crying ))); layout- addWidget(info); layout- addWidget(list); connect(list, SIGNAL(currentRowChanged(int)), this, SLOT(curRowChanged(int))); widget- setLayout(layout); setCentralWidget(widget); QTableWidget Header #include QTableWidget Data member QWidget *widget; QVBoxLayout *layout; QLabel *info; QTableWidget *table Slot void MainWindow::getTableItem(QTableWidgetItem *item) { info- setText(tr( current item( ) + QString::number(item- row()) + , + QString::number(item- column()) + ): + item- text()); } Codes layout = new QVBoxLayout; info = new QLabel; table = new QTableWidget; table- setRowCount(10); table- setColumnCount(3); QStringList headers; headers.append(tr( name )); headers.append(tr( age )); headers.append(tr( address )); table- setHorizontalHeaderLabels(headers); table- setItem(0, 0, new QTableWidgetItem(tr( aaa ))); table- setItem(1, 1, new QTableWidgetItem(tr( bbb ))); connect(table, SIGNAL(itemChanged(QTableWidgetItem*)), this, SLOT(getTableItem(QTableWidgetItem*))); layout- addWidget(info); layout- addWidget(table); widget- setLayout(layout); QTreeWidget setColumnCount\u53ef\u4ee5\u8bbe\u5b9a\u680f\u6570, \u5927\u4e8e1\u65f6\u4f1a\u663e\u793a\u4e3a\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50 QTreeWidget\u53ef\u4ee5\u6709\u591a\u4e2a\u6811\u6839, \u6240\u4ee5\u6811\u6839\u662f\u4e00\u4e2alist \u56e0\u4e3a\u53ef\u4ee5\u4e3a\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50, \u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684\u63cf\u8ff0\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868, \u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u8c03\u7528setHeaderLabels setColumnCount, \u4f1a\u5f62\u6210\u591a\u4e2a\u5217(\u8d44\u6e90\u7ba1\u7406\u5668\u6837\u5b50\u7684\u6811\u5f62\u7ed3\u6784) Header #include QTreeWidget Data member QWidget *widget; QVBoxLayout *layout; QLabel *info; QTreeWidget *tree; Slot void MainWindow::checkClicked(QTreeWidgetItem *item, int column) { info- setText(tr( item: ) + item- text(column) + , column: + QString::number(column)); } Codes layout = new QVBoxLayout; info = new QLabel; tree = new QTreeWidget; tree- setColumnCount(1); // === QTreeWidgetItem *root = new QTreeWidgetItem(tree, QStringList(QString( root ))); // === QTreeWidgetItem *node1 = new QTreeWidgetItem(root, QStringList(QString( node1 ))); root- addChild(node1); QTreeWidgetItem *node2 = new QTreeWidgetItem(node1, QStringList(QString( node2 ))); node2- setCheckState(0, Qt::Checked); node1- addChild(node2); QList QTreeWidgetItem * rootList; rootList.append(root); tree- insertTopLevelItems(0, rootList); tree- setHeaderHidden(true); tree- expandAll(); connect(tree, SIGNAL(itemClicked(QTreeWidgetItem *, int)), this, SLOT(checkClicked(QTreeWidgetItem *, int))); layout- addWidget(info); layout- addWidget(tree); widget- setLayout(layout);","title":"item-view"},{"location":"qt/8-model-view/2-item-view/#item-view","text":"","title":"item-view"},{"location":"qt/8-model-view/2-item-view/#qlistwidget","text":"","title":"QListWidget"},{"location":"qt/8-model-view/2-item-view/#header","text":"#include QListWidget","title":"Header"},{"location":"qt/8-model-view/2-item-view/#data-member","text":"QWidget *widget; QVBoxLayout *layout; QLabel *info; QListWidget *list","title":"Data member"},{"location":"qt/8-model-view/2-item-view/#slot","text":"void MainWindow::curRowChanged(int curRow) { info- setText(tr( current row( ) + QString::number(curRow) + tr( ): ) + list- item(curRow)- text()); }","title":"Slot"},{"location":"qt/8-model-view/2-item-view/#codes","text":"widget = new QWidget; layout = new QVBoxLayout; info = new QLabel; list = new QListWidget; list- addItem(new QListWidgetItem(QIcon( :/smiling.png ), tr( smiling ))); list- addItem(new QListWidgetItem(QIcon( :/sleeping.png ), tr( sleeping ))); list- addItem(new QListWidgetItem(QIcon( :/crying.png ), tr( crying ))); layout- addWidget(info); layout- addWidget(list); connect(list, SIGNAL(currentRowChanged(int)), this, SLOT(curRowChanged(int))); widget- setLayout(layout); setCentralWidget(widget);","title":"Codes"},{"location":"qt/8-model-view/2-item-view/#qtablewidget","text":"","title":"QTableWidget"},{"location":"qt/8-model-view/2-item-view/#header_1","text":"#include QTableWidget","title":"Header"},{"location":"qt/8-model-view/2-item-view/#data-member_1","text":"QWidget *widget; QVBoxLayout *layout; QLabel *info; QTableWidget *table","title":"Data member"},{"location":"qt/8-model-view/2-item-view/#slot_1","text":"void MainWindow::getTableItem(QTableWidgetItem *item) { info- setText(tr( current item( ) + QString::number(item- row()) + , + QString::number(item- column()) + ): + item- text()); }","title":"Slot"},{"location":"qt/8-model-view/2-item-view/#codes_1","text":"layout = new QVBoxLayout; info = new QLabel; table = new QTableWidget; table- setRowCount(10); table- setColumnCount(3); QStringList headers; headers.append(tr( name )); headers.append(tr( age )); headers.append(tr( address )); table- setHorizontalHeaderLabels(headers); table- setItem(0, 0, new QTableWidgetItem(tr( aaa ))); table- setItem(1, 1, new QTableWidgetItem(tr( bbb ))); connect(table, SIGNAL(itemChanged(QTableWidgetItem*)), this, SLOT(getTableItem(QTableWidgetItem*))); layout- addWidget(info); layout- addWidget(table); widget- setLayout(layout);","title":"Codes"},{"location":"qt/8-model-view/2-item-view/#qtreewidget","text":"setColumnCount\u53ef\u4ee5\u8bbe\u5b9a\u680f\u6570, \u5927\u4e8e1\u65f6\u4f1a\u663e\u793a\u4e3a\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50 QTreeWidget\u53ef\u4ee5\u6709\u591a\u4e2a\u6811\u6839, \u6240\u4ee5\u6811\u6839\u662f\u4e00\u4e2alist \u56e0\u4e3a\u53ef\u4ee5\u4e3a\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50, \u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684\u63cf\u8ff0\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868, \u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u8c03\u7528setHeaderLabels setColumnCount, \u4f1a\u5f62\u6210\u591a\u4e2a\u5217(\u8d44\u6e90\u7ba1\u7406\u5668\u6837\u5b50\u7684\u6811\u5f62\u7ed3\u6784)","title":"QTreeWidget"},{"location":"qt/8-model-view/2-item-view/#header_2","text":"#include QTreeWidget","title":"Header"},{"location":"qt/8-model-view/2-item-view/#data-member_2","text":"QWidget *widget; QVBoxLayout *layout; QLabel *info; QTreeWidget *tree;","title":"Data member"},{"location":"qt/8-model-view/2-item-view/#slot_2","text":"void MainWindow::checkClicked(QTreeWidgetItem *item, int column) { info- setText(tr( item: ) + item- text(column) + , column: + QString::number(column)); }","title":"Slot"},{"location":"qt/8-model-view/2-item-view/#codes_2","text":"layout = new QVBoxLayout; info = new QLabel; tree = new QTreeWidget; tree- setColumnCount(1); // === QTreeWidgetItem *root = new QTreeWidgetItem(tree, QStringList(QString( root ))); // === QTreeWidgetItem *node1 = new QTreeWidgetItem(root, QStringList(QString( node1 ))); root- addChild(node1); QTreeWidgetItem *node2 = new QTreeWidgetItem(node1, QStringList(QString( node2 ))); node2- setCheckState(0, Qt::Checked); node1- addChild(node2); QList QTreeWidgetItem * rootList; rootList.append(root); tree- insertTopLevelItems(0, rootList); tree- setHeaderHidden(true); tree- expandAll(); connect(tree, SIGNAL(itemClicked(QTreeWidgetItem *, int)), this, SLOT(checkClicked(QTreeWidgetItem *, int))); layout- addWidget(info); layout- addWidget(tree); widget- setLayout(layout);","title":"Codes"},{"location":"qt/8-model-view/3-model-view/","text":"Qt: model-view \u5728model-view\u4e2d, view\u5206\u4e3a\u4e09\u7c7b: list, table, tree, \u4f46\u662fmodel\u5343\u5947\u767e\u602a, \u4e0d\u540c\u7684\u5efa\u6a21\u4f1a\u6709\u4e0d\u540c\u7684model. \u5206\u4e3a\u9884\u5b9a\u4e49\u7684model(\u5982QStringListModel)\u548c\u81ea\u5b9a\u4e49\u7684model. 1. QStringListModel and QListView 2. QFileSystemModel and QTreeView 3. QSortFilterProxyModel and QListView 4. Self-defined Model 5. Self-defined Delegate","title":"Qt: model-view"},{"location":"qt/8-model-view/3-model-view/#qt-model-view","text":"\u5728model-view\u4e2d, view\u5206\u4e3a\u4e09\u7c7b: list, table, tree, \u4f46\u662fmodel\u5343\u5947\u767e\u602a, \u4e0d\u540c\u7684\u5efa\u6a21\u4f1a\u6709\u4e0d\u540c\u7684model. \u5206\u4e3a\u9884\u5b9a\u4e49\u7684model(\u5982QStringListModel)\u548c\u81ea\u5b9a\u4e49\u7684model.","title":"Qt: model-view"},{"location":"qt/8-model-view/3-model-view/#1-qstringlistmodel-and-qlistview","text":"","title":"1. QStringListModel and QListView"},{"location":"qt/8-model-view/3-model-view/#2-qfilesystemmodel-and-qtreeview","text":"","title":"2. QFileSystemModel and QTreeView"},{"location":"qt/8-model-view/3-model-view/#3-qsortfilterproxymodel-and-qlistview","text":"","title":"3. QSortFilterProxyModel and QListView"},{"location":"qt/8-model-view/3-model-view/#4-self-defined-model","text":"","title":"4. Self-defined Model"},{"location":"qt/8-model-view/3-model-view/#5-self-defined-delegate","text":"","title":"5. Self-defined Delegate"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/","text":"QStringListModel - QListView \u9884\u5b9a\u4e49model\u4e2dQStringListModel\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd. Header #include QStringListModel Data member QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *insertBtn, *deleteBtn, *showBtn; QStringListModel *model; QListView *listView Slots void MainWindow::insertData() { bool ok = false; QString str = QInputDialog::getText(NULL, tr( input ), tr( Input ), QLineEdit::Normal, tr( Default string ), ok); if (ok) { int curViewIdx = listView- currentIndex().row(); if (-1 == curViewIdx) { // No data or no select in view currently curViewIdx = 0; } model- insertRows(curViewIdx, 1); QModelIndex curModelIdx = model- index(curViewIdx); // TODO: \u6ca1\u6709\u5b9e\u9645\u610f\u4e49, \u56e0\u4e3alistView- currentIndex\u5df2\u7ecf\u53ef\u4ee5\u8fd4\u56deQModelIndex\u7c7b\u578b model- setData(curModelIdx, str); listView- setCurrentIndex(curModelIdx); listView- edit(curModelIdx); // edit status in view to this row } } void MainWindow::deleteData() { int curViewIdx = listView- currentIndex().row(); if (-1 != curViewIdx) { // remove selected row model- removeRows(curViewIdx, 1); } } void MainWindow::showData() { QString info; QStringList data = model- stringList(); QStringList::const_iterator iter = data.constBegin(); while (iter != data.constEnd()) { info += \\n + *iter; iter ++; } QMessageBox::information(NULL, tr( info: ), info); } Codes widget = new QWidget; mainLayout = new QVBoxLayout; insertBtn = new QPushButton(tr( insert ), this); deleteBtn = new QPushButton(tr( delete ), this); showBtn = new QPushButton(tr( show ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(insertBtn); btnLayout- addWidget(deleteBtn); btnLayout- addWidget(showBtn); model = new QStringListModel(this); QStringList data; data.append( 11111 ); data.append( 22222 ); data.append( 33333 ); model- setStringList(data); listView = new QListView(this); listView- setModel(model); mainLayout- addLayout(btnLayout); mainLayout- addWidget(listView); connect(insertBtn, SIGNAL(clicked()), this, SLOT(insertData())); connect(deleteBtn, SIGNAL(clicked()), this, SLOT(deleteData())); connect(showBtn, SIGNAL(clicked()), this, SLOT(showData())); widget- setLayout(mainLayout); setCentralWidget(widget);","title":"QStringListModel - QListView"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#qstringlistmodel-qlistview","text":"\u9884\u5b9a\u4e49model\u4e2dQStringListModel\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd.","title":"QStringListModel - QListView"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#header","text":"#include QStringListModel","title":"Header"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#data-member","text":"QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *insertBtn, *deleteBtn, *showBtn; QStringListModel *model; QListView *listView","title":"Data member"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#slots","text":"void MainWindow::insertData() { bool ok = false; QString str = QInputDialog::getText(NULL, tr( input ), tr( Input ), QLineEdit::Normal, tr( Default string ), ok); if (ok) { int curViewIdx = listView- currentIndex().row(); if (-1 == curViewIdx) { // No data or no select in view currently curViewIdx = 0; } model- insertRows(curViewIdx, 1); QModelIndex curModelIdx = model- index(curViewIdx); // TODO: \u6ca1\u6709\u5b9e\u9645\u610f\u4e49, \u56e0\u4e3alistView- currentIndex\u5df2\u7ecf\u53ef\u4ee5\u8fd4\u56deQModelIndex\u7c7b\u578b model- setData(curModelIdx, str); listView- setCurrentIndex(curModelIdx); listView- edit(curModelIdx); // edit status in view to this row } } void MainWindow::deleteData() { int curViewIdx = listView- currentIndex().row(); if (-1 != curViewIdx) { // remove selected row model- removeRows(curViewIdx, 1); } } void MainWindow::showData() { QString info; QStringList data = model- stringList(); QStringList::const_iterator iter = data.constBegin(); while (iter != data.constEnd()) { info += \\n + *iter; iter ++; } QMessageBox::information(NULL, tr( info: ), info); }","title":"Slots"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#codes","text":"widget = new QWidget; mainLayout = new QVBoxLayout; insertBtn = new QPushButton(tr( insert ), this); deleteBtn = new QPushButton(tr( delete ), this); showBtn = new QPushButton(tr( show ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(insertBtn); btnLayout- addWidget(deleteBtn); btnLayout- addWidget(showBtn); model = new QStringListModel(this); QStringList data; data.append( 11111 ); data.append( 22222 ); data.append( 33333 ); model- setStringList(data); listView = new QListView(this); listView- setModel(model); mainLayout- addLayout(btnLayout); mainLayout- addWidget(listView); connect(insertBtn, SIGNAL(clicked()), this, SLOT(insertData())); connect(deleteBtn, SIGNAL(clicked()), this, SLOT(deleteData())); connect(showBtn, SIGNAL(clicked()), this, SLOT(showData())); widget- setLayout(mainLayout); setCentralWidget(widget);","title":"Codes"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/","text":"QFileSystemWatcher - QTreeView QDirModel\u5728\u65b0QT\u7248\u672c\u4e2d\u5df2\u7ecf\u5e9f\u5f03\u4e86, \u73b0\u5728\u4e3b\u8981\u7528QFileSystemWatcher\u548cQFileSystemModel Header #include QHeaderView #include QFileSystemModel #include QTreeView #include QModelIndex #include QDir Data member QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *createBtn, *removeBtn; QFileSystemModel *fsModel; QTreeView *treeView Slots void MainWindow::createDir() { bool ok; QString name; QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { index = fsModel- index(QDir::currentPath()); } name = QInputDialog::getText(NULL, tr( dir name ), tr( Input name ), QLineEdit::Normal, tr( Default ), ok); if (!ok) { return; } if (!name.isEmpty()) { if (!fsModel- mkdir(index, name).isValid()) { QMessageBox::information(NULL, tr( create dir fail ), tr( create dir %1 fail ).arg(name)); } } } void MainWindow::removeDir() { QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { // report an error return; } QString name = fsModel- fileName(index); bool ok; if (fsModel- fileInfo(index).isDir()) { ok = fsModel- rmdir(index); } else { ok = fsModel- remove(index); } if (!ok) { QMessageBox::information(NULL, tr( remove fail ), tr( remove dir %1 fail ).arg(name)); } } Codes createBtn = new QPushButton(tr( create ), this); removeBtn = new QPushButton(tr( remove ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(createBtn); btnLayout- addWidget(removeBtn); fsModel = new QFileSystemModel(this); fsModel- setReadOnly(false); fsModel- setRootPath(QDir::currentPath()); // monitor by QFileSystemWatcher treeView = new QTreeView(this); treeView- setModel(fsModel); treeView- header()- setStretchLastSection(true); treeView- header()- setSortIndicator(0, Qt::AscendingOrder); treeView- header()- setSortIndicatorShown(true); QModelIndex index = fsModel- index(QDir::currentPath()); treeView- setRootIndex(index); // show from this path treeView- expand(index); treeView- scrollTo(index); treeView- setColumnWidth(0, 20); treeView- resizeColumnToContents(0); mainLayout- addLayout(btnLayout); mainLayout- addWidget(treeView); connect(createBtn, SIGNAL(clicked()), this, SLOT(createDir())); connect(removeBtn, SIGNAL(clicked()), this, SLOT(removeDir()));","title":"QFileSystemWatcher - QTreeView"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#qfilesystemwatcher-qtreeview","text":"QDirModel\u5728\u65b0QT\u7248\u672c\u4e2d\u5df2\u7ecf\u5e9f\u5f03\u4e86, \u73b0\u5728\u4e3b\u8981\u7528QFileSystemWatcher\u548cQFileSystemModel","title":"QFileSystemWatcher - QTreeView"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#header","text":"#include QHeaderView #include QFileSystemModel #include QTreeView #include QModelIndex #include QDir","title":"Header"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#data-member","text":"QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *createBtn, *removeBtn; QFileSystemModel *fsModel; QTreeView *treeView","title":"Data member"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#slots","text":"void MainWindow::createDir() { bool ok; QString name; QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { index = fsModel- index(QDir::currentPath()); } name = QInputDialog::getText(NULL, tr( dir name ), tr( Input name ), QLineEdit::Normal, tr( Default ), ok); if (!ok) { return; } if (!name.isEmpty()) { if (!fsModel- mkdir(index, name).isValid()) { QMessageBox::information(NULL, tr( create dir fail ), tr( create dir %1 fail ).arg(name)); } } } void MainWindow::removeDir() { QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { // report an error return; } QString name = fsModel- fileName(index); bool ok; if (fsModel- fileInfo(index).isDir()) { ok = fsModel- rmdir(index); } else { ok = fsModel- remove(index); } if (!ok) { QMessageBox::information(NULL, tr( remove fail ), tr( remove dir %1 fail ).arg(name)); } }","title":"Slots"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#codes","text":"createBtn = new QPushButton(tr( create ), this); removeBtn = new QPushButton(tr( remove ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(createBtn); btnLayout- addWidget(removeBtn); fsModel = new QFileSystemModel(this); fsModel- setReadOnly(false); fsModel- setRootPath(QDir::currentPath()); // monitor by QFileSystemWatcher treeView = new QTreeView(this); treeView- setModel(fsModel); treeView- header()- setStretchLastSection(true); treeView- header()- setSortIndicator(0, Qt::AscendingOrder); treeView- header()- setSortIndicatorShown(true); QModelIndex index = fsModel- index(QDir::currentPath()); treeView- setRootIndex(index); // show from this path treeView- expand(index); treeView- scrollTo(index); treeView- setColumnWidth(0, 20); treeView- resizeColumnToContents(0); mainLayout- addLayout(btnLayout); mainLayout- addWidget(treeView); connect(createBtn, SIGNAL(clicked()), this, SLOT(createDir())); connect(removeBtn, SIGNAL(clicked()), this, SLOT(removeDir()));","title":"Codes"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/","text":"QSortFilterProxyModel and QListView Header #include QWidget #include QVBoxLayout #include QHBoxLayout #include QStringListModel #include QSortFilterProxyModel #include QListView #include QComboBox #include QLabel #include QLineEdit Data member QVBoxLayout *mainLayout; QWidget *widget; QStringListModel *model; QSortFilterProxyModel *modelProxy; QListView *view; QLabel *filterLabel; QLineEdit *filterInput; QHBoxLayout *filterLayout; QLabel *syntaxLabel; QComboBox *syntaxBox; QHBoxLayout *syntaxLayout; Slots void MainWindow::showMatch(QString input) { QRegExp::PatternSyntax syntax = QRegExp::PatternSyntax(syntaxBox- itemData(syntaxBox- currentIndex()).toInt()); QRegExp regExp(input, Qt::CaseSensitive, syntax); modelProxy- setFilterRegExp(regExp); } Codes model = new QStringListModel(QColor::colorNames(), this); modelProxy = new QSortFilterProxyModel(this); modelProxy- setSourceModel(model); modelProxy- setFilterKeyColumn(0); view = new QListView(this); view- setModel(modelProxy); filterLabel = new QLabel(tr( Filter ), this); filterInput = new QLineEdit; filterLayout = new QHBoxLayout; filterLayout- addWidget(filterLabel); filterLayout- addWidget(filterInput); syntaxLabel = new QLabel(tr( Sytax ), this); syntaxBox = new QComboBox(this); syntaxBox- setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Preferred); syntaxBox- addItem(tr( Regular pattern ), QRegExp::RegExp); syntaxBox- addItem(tr( Wildcat ), QRegExp::Wildcard); syntaxBox- addItem(tr( Fixed String ), QRegExp::FixedString); syntaxLayout = new QHBoxLayout; syntaxLayout- addWidget(syntaxLabel); syntaxLayout- addWidget(syntaxBox); mainLayout = new QVBoxLayout; mainLayout- addWidget(view); mainLayout- addLayout(filterLayout); mainLayout- addLayout(syntaxLayout); widget- setLayout(mainLayout); connect(filterInput, SIGNAL(textChanged(QString)), this, SLOT(showMatch(QString)));","title":"QSortFilterProxyModel and QListView"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#qsortfilterproxymodel-and-qlistview","text":"","title":"QSortFilterProxyModel and QListView"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#header","text":"#include QWidget #include QVBoxLayout #include QHBoxLayout #include QStringListModel #include QSortFilterProxyModel #include QListView #include QComboBox #include QLabel #include QLineEdit","title":"Header"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#data-member","text":"QVBoxLayout *mainLayout; QWidget *widget; QStringListModel *model; QSortFilterProxyModel *modelProxy; QListView *view; QLabel *filterLabel; QLineEdit *filterInput; QHBoxLayout *filterLayout; QLabel *syntaxLabel; QComboBox *syntaxBox; QHBoxLayout *syntaxLayout;","title":"Data member"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#slots","text":"void MainWindow::showMatch(QString input) { QRegExp::PatternSyntax syntax = QRegExp::PatternSyntax(syntaxBox- itemData(syntaxBox- currentIndex()).toInt()); QRegExp regExp(input, Qt::CaseSensitive, syntax); modelProxy- setFilterRegExp(regExp); }","title":"Slots"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#codes","text":"model = new QStringListModel(QColor::colorNames(), this); modelProxy = new QSortFilterProxyModel(this); modelProxy- setSourceModel(model); modelProxy- setFilterKeyColumn(0); view = new QListView(this); view- setModel(modelProxy); filterLabel = new QLabel(tr( Filter ), this); filterInput = new QLineEdit; filterLayout = new QHBoxLayout; filterLayout- addWidget(filterLabel); filterLayout- addWidget(filterInput); syntaxLabel = new QLabel(tr( Sytax ), this); syntaxBox = new QComboBox(this); syntaxBox- setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Preferred); syntaxBox- addItem(tr( Regular pattern ), QRegExp::RegExp); syntaxBox- addItem(tr( Wildcat ), QRegExp::Wildcard); syntaxBox- addItem(tr( Fixed String ), QRegExp::FixedString); syntaxLayout = new QHBoxLayout; syntaxLayout- addWidget(syntaxLabel); syntaxLayout- addWidget(syntaxBox); mainLayout = new QVBoxLayout; mainLayout- addWidget(view); mainLayout- addLayout(filterLayout); mainLayout- addLayout(syntaxLayout); widget- setLayout(mainLayout); connect(filterInput, SIGNAL(textChanged(QString)), this, SLOT(showMatch(QString)));","title":"Codes"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/","text":"Self-defined model introduction QModelIndex - data | n * roles --+-DisplayRole +-EditRole +-ToolTipRole +-StatusTipRole +-WhatsThisRole | +-FontRole +-TextAlignmentRole +-TextColorRole +-BackgroundRole QModelIndex::parent() is invalid node, 0 child List model: root row | 0 +- data 1 +- data 2 +- data | ... Table model: root row | 0 d d d ... 1 d d d ... 2 d d d ... ......... column 0 1 2 ... QModelIndex::parent() is invalid node, 0 or 1 child Tree model: root row | 0 +--d d d ... 0 | +--d d d ... 1 | +--d d d ... 1 +--d d d ... 2 +--d d d ... ... column node can be located by QModelIndex::parent(), 0 or 1 or more child(s) Abstract class QObject | +---QAbstractItemModel---+ | | QAbstractListModel QAbstractTableModel example \u663e\u793a\u5404\u8d27\u5e01\u4e4b\u95f4\u7684\u6c47\u7387, \u7528\u4e00\u7ef4\u6570\u7ec4\u505a\u6570\u636e\u6e90, \u663e\u793a\u6210table \u5404\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb, \u53ef\u663e\u793a\u53ef\u4fee\u6539, \u4fee\u6539\u65f6\u9700\u8981emit\u4e00\u4e2a\u4fe1\u53f7\u6765\u5904\u7406 \u89e3\u6790\u5e03\u5c14\u8868\u8fbe\u5f0f, \u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u51fa\u6765","title":"Self-defined model"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#self-defined-model","text":"","title":"Self-defined model"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#introduction","text":"QModelIndex - data | n * roles --+-DisplayRole +-EditRole +-ToolTipRole +-StatusTipRole +-WhatsThisRole | +-FontRole +-TextAlignmentRole +-TextColorRole +-BackgroundRole QModelIndex::parent() is invalid node, 0 child List model: root row | 0 +- data 1 +- data 2 +- data | ... Table model: root row | 0 d d d ... 1 d d d ... 2 d d d ... ......... column 0 1 2 ... QModelIndex::parent() is invalid node, 0 or 1 child Tree model: root row | 0 +--d d d ... 0 | +--d d d ... 1 | +--d d d ... 1 +--d d d ... 2 +--d d d ... ... column node can be located by QModelIndex::parent(), 0 or 1 or more child(s)","title":"introduction"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#abstract-class","text":"QObject | +---QAbstractItemModel---+ | | QAbstractListModel QAbstractTableModel","title":"Abstract class"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#example","text":"\u663e\u793a\u5404\u8d27\u5e01\u4e4b\u95f4\u7684\u6c47\u7387, \u7528\u4e00\u7ef4\u6570\u7ec4\u505a\u6570\u636e\u6e90, \u663e\u793a\u6210table \u5404\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb, \u53ef\u663e\u793a\u53ef\u4fee\u6539, \u4fee\u6539\u65f6\u9700\u8981emit\u4e00\u4e2a\u4fe1\u53f7\u6765\u5904\u7406 \u89e3\u6790\u5e03\u5c14\u8868\u8fbe\u5f0f, \u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u51fa\u6765","title":"example"},{"location":"qt/8-model-view/3-model-view/5-self-defined-delegate/","text":"self-defined delegate \u6807\u51c6\u7ec4\u4ef6\u4f7f\u7528QItemDelegate\u63d0\u4f9b\u7f16\u8f91\u529f\u80fd\u652f\u6301, \u8fd9\u79cd\u9ed8\u8ba4\u7684\u5b9e\u73b0\u7528\u5728QListView/QTableView/QTreeView\u4e2d view\u4f7f\u7528\u7684delegate\u53ef\u4ee5\u901a\u8fc7iteDelegate\u83b7\u5f97, \u4e5f\u53ef\u4ee5\u7528setItemDelegate\u8bbe\u7f6edelegate \u7236\u7c7b\u4e3aQItemDelegate\u548cQStyledItemDelegate, \u9ed8\u8ba4\u4e3aQStyledItemDelegate QStyledItemDelegate\u4f7f\u7528\u5f53\u524d\u7684\u98ce\u683c\u8fdb\u884c\u7ed8\u5236\u7ec4\u4ef6, \u6240\u4ee5\u5728\u81ea\u5b9a\u4e49delegate\u6216\u8005\u9700\u8981\u4f7f\u7528Qt style sheets\u65f6, \u6700\u597d\u4f7f\u7528QStyledItemDelegate\u4f5c\u4e3a\u7236\u7c7b. \u8fd9\u4e24\u4e2a\u7c7b\u901a\u5e38\u4e00\u6837, \u9664\u4e86\u9700\u8981\u4f7f\u7528style\u8fdb\u884c\u7ed8\u5236\u65f6\u5019(\u91cd\u8f7dpaing()\u548csizeHing()). \u81ea\u5b9a\u4e49\u7684delegate\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7f16\u8f91\u5668, \u800c\u4e0d\u4f7f\u7528\u5185\u7f6e\u7684\u7f16\u8f91\u5668\u5de5\u5382(\u9700\u8981\u5b9e\u73b0createEditor(), setEditorData(), updateEditorGeometry(), setModelData())","title":"self-defined delegate"},{"location":"qt/8-model-view/3-model-view/5-self-defined-delegate/#self-defined-delegate","text":"\u6807\u51c6\u7ec4\u4ef6\u4f7f\u7528QItemDelegate\u63d0\u4f9b\u7f16\u8f91\u529f\u80fd\u652f\u6301, \u8fd9\u79cd\u9ed8\u8ba4\u7684\u5b9e\u73b0\u7528\u5728QListView/QTableView/QTreeView\u4e2d view\u4f7f\u7528\u7684delegate\u53ef\u4ee5\u901a\u8fc7iteDelegate\u83b7\u5f97, \u4e5f\u53ef\u4ee5\u7528setItemDelegate\u8bbe\u7f6edelegate \u7236\u7c7b\u4e3aQItemDelegate\u548cQStyledItemDelegate, \u9ed8\u8ba4\u4e3aQStyledItemDelegate QStyledItemDelegate\u4f7f\u7528\u5f53\u524d\u7684\u98ce\u683c\u8fdb\u884c\u7ed8\u5236\u7ec4\u4ef6, \u6240\u4ee5\u5728\u81ea\u5b9a\u4e49delegate\u6216\u8005\u9700\u8981\u4f7f\u7528Qt style sheets\u65f6, \u6700\u597d\u4f7f\u7528QStyledItemDelegate\u4f5c\u4e3a\u7236\u7c7b. \u8fd9\u4e24\u4e2a\u7c7b\u901a\u5e38\u4e00\u6837, \u9664\u4e86\u9700\u8981\u4f7f\u7528style\u8fdb\u884c\u7ed8\u5236\u65f6\u5019(\u91cd\u8f7dpaing()\u548csizeHing()). \u81ea\u5b9a\u4e49\u7684delegate\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7f16\u8f91\u5668, \u800c\u4e0d\u4f7f\u7528\u5185\u7f6e\u7684\u7f16\u8f91\u5668\u5de5\u5382(\u9700\u8981\u5b9e\u73b0createEditor(), setEditorData(), updateEditorGeometry(), setModelData())","title":"self-defined delegate"},{"location":"qt/problems/","text":"Qt: problems 0. misc 1. setCentralWidget and layout 2. install packages 3. missing packages 4. not enough disk space to store temporary files! 5. error while running application 6. install qt creator on macos","title":"Qt: problems"},{"location":"qt/problems/#qt-problems","text":"","title":"Qt: problems"},{"location":"qt/problems/#0-misc","text":"","title":"0. misc"},{"location":"qt/problems/#1-setcentralwidget-and-layout","text":"","title":"1. setCentralWidget and layout"},{"location":"qt/problems/#2-install-packages","text":"","title":"2. install packages"},{"location":"qt/problems/#3-missing-packages","text":"","title":"3. missing packages"},{"location":"qt/problems/#4-not-enough-disk-space-to-store-temporary-files","text":"","title":"4. not enough disk space to store temporary files!"},{"location":"qt/problems/#5-error-while-running-application","text":"","title":"5. error while running application"},{"location":"qt/problems/#6-install-qt-creator-on-macos","text":"","title":"6. install qt creator on macos"},{"location":"qt/problems/0-misc/","text":"misc run a shell command #include QProcess QProcess process; process.start( shutdown -P ); set max size to window this- showMaximized() show full screen to window this- showFullScreen() set stretch factor in a layout to different componments verticalLayoutMy- setStretchFactor(componment1, 1); verticalLayoutMy- setStretchFactor(componment2, 100); ModuleNotFoundError: No module named 'pkg_resources.extern' on manjaro when mkdocs pip install mkdocs pip install --upgrade pip pip install --upgrade setuptools pip install --upgrade distribute","title":"misc"},{"location":"qt/problems/0-misc/#misc","text":"","title":"misc"},{"location":"qt/problems/0-misc/#run-a-shell-command","text":"#include QProcess QProcess process; process.start( shutdown -P );","title":"run a shell command"},{"location":"qt/problems/0-misc/#set-max-size-to-window","text":"this- showMaximized()","title":"set max size to window"},{"location":"qt/problems/0-misc/#show-full-screen-to-window","text":"this- showFullScreen()","title":"show full screen to window"},{"location":"qt/problems/0-misc/#set-stretch-factor-in-a-layout-to-different-componments","text":"verticalLayoutMy- setStretchFactor(componment1, 1); verticalLayoutMy- setStretchFactor(componment2, 100);","title":"set stretch factor in a layout to different componments"},{"location":"qt/problems/0-misc/#modulenotfounderror-no-module-named-pkg_resourcesextern-on-manjaro-when-mkdocs","text":"pip install mkdocs pip install --upgrade pip pip install --upgrade setuptools pip install --upgrade distribute","title":"ModuleNotFoundError: No module named 'pkg_resources.extern' on manjaro when mkdocs"},{"location":"qt/problems/1-centralwidget/","text":"setCentralWidget layout create a widget add layout in this widget (maybe the parent is previous widget created just now if it is shared library project) add more widgets in layout then call setCentralWidget(widget)","title":"setCentralWidget & layout"},{"location":"qt/problems/1-centralwidget/#setcentralwidget-layout","text":"create a widget add layout in this widget (maybe the parent is previous widget created just now if it is shared library project) add more widgets in layout then call setCentralWidget(widget)","title":"setCentralWidget &amp; layout"},{"location":"qt/problems/2-install-packages/","text":"install packages pacman -S qt5, select some packages to install, install all by default if no help in qtcreator Tools - Options - Help - Add... to add all qrc files from installed folder","title":"install packages"},{"location":"qt/problems/2-install-packages/#install-packages","text":"pacman -S qt5, select some packages to install, install all by default if no help in qtcreator Tools - Options - Help - Add... to add all qrc files from installed folder","title":"install packages"},{"location":"qt/problems/3-missing-packages/","text":"missing packages cannt find -lGL on linuxmint apt-get install libgl1-mesa-dev","title":"missing packages"},{"location":"qt/problems/3-missing-packages/#missing-packages","text":"cannt find -lGL on linuxmint apt-get install libgl1-mesa-dev","title":"missing packages"},{"location":"qt/problems/4-disk-space-when-install/","text":"Not enough disk space to store temporary files! when install QtCreator mount -t tmpfs -o size=4096m tmpfs /tmp install QtCreator reboot (space of /tmp will be restored)","title":"`Not enough disk space to store temporary files!` when install QtCreator"},{"location":"qt/problems/4-disk-space-when-install/#not-enough-disk-space-to-store-temporary-files-when-install-qtcreator","text":"mount -t tmpfs -o size=4096m tmpfs /tmp install QtCreator reboot (space of /tmp will be restored)","title":"Not enough disk space to store temporary files! when install QtCreator"},{"location":"qt/problems/5-running-error/","text":"errors while running application QMetaObject::connectSlotsByName: No matching signal for ... QtCreator call Qt::connectSlotsbyName automatelly in on_componment-name_signal-name formation, if you call connect with this signal/slot, there will be this warning while running application. So, you'd better don't use this formation to slot-name. QObject::connect: No such signal ... Please remove parameter name in SIGNAL and SLOT when you call connect to signal/slot, for example: connect(ui- listWidgetCities, SIGNAL(itemDoubleClicked(QListWidgetItem *)), this, SLOT(listWidgetCitiesDoubleClickedSlot(QListWidgetItem *)));","title":"errors while running application"},{"location":"qt/problems/5-running-error/#errors-while-running-application","text":"QMetaObject::connectSlotsByName: No matching signal for ... QtCreator call Qt::connectSlotsbyName automatelly in on_componment-name_signal-name formation, if you call connect with this signal/slot, there will be this warning while running application. So, you'd better don't use this formation to slot-name. QObject::connect: No such signal ... Please remove parameter name in SIGNAL and SLOT when you call connect to signal/slot, for example: connect(ui- listWidgetCities, SIGNAL(itemDoubleClicked(QListWidgetItem *)), this, SLOT(listWidgetCitiesDoubleClickedSlot(QListWidgetItem *)));","title":"errors while running application"},{"location":"qt/problems/6-install-on-macos/","text":"how to install qt creator on macos download java-sdk-8 and install it install xcode in App Store sudo xcode-select -s /Applications/Xcode.app/Contents/Developer cd to /Users/hiechoer/.Qt5.9.8/Qt Creator.app/Contents/MacOS , exec ./Qt Creator install offline package for qt creator download android sdk ndk and config the pathes in qt creator","title":"how to install qt creator on macos"},{"location":"qt/problems/6-install-on-macos/#how-to-install-qt-creator-on-macos","text":"download java-sdk-8 and install it install xcode in App Store sudo xcode-select -s /Applications/Xcode.app/Contents/Developer cd to /Users/hiechoer/.Qt5.9.8/Qt Creator.app/Contents/MacOS , exec ./Qt Creator install offline package for qt creator download android sdk ndk and config the pathes in qt creator","title":"how to install qt creator on macos"}]}