{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to my mini-blog, I will share some interesting documents, photoes, stories here with you. Summary C/CPP - Learning C/CPP/QT, etc. Python - Learning Python about website/automation/game/mobile. English - Learning English. Other - Other articles.","title":"Home"},{"location":"#welcome","text":"Welcome to my mini-blog, I will share some interesting documents, photoes, stories here with you.","title":"Welcome"},{"location":"#summary","text":"C/CPP - Learning C/CPP/QT, etc. Python - Learning Python about website/automation/game/mobile. English - Learning English. Other - Other articles.","title":"Summary"},{"location":"about/","text":"Find Us Web: http://hiechoer.github.io Github: https://github.com/hiechoer Mail: hiechoer@yeah.net","title":"Find Us"},{"location":"about/#find-us","text":"Web: http://hiechoer.github.io Github: https://github.com/hiechoer Mail: hiechoer@yeah.net","title":"Find Us"},{"location":"cpp/","text":"C++","title":"C++"},{"location":"cpp/#c","text":"","title":"C++"},{"location":"misc/","text":"Misc Useful online git code management Some useful online git code management systems in the link. How to write file in markdown formation The syntax about markdown file. Free bug tools Some free bug tools.","title":"Misc"},{"location":"misc/#misc","text":"","title":"Misc"},{"location":"misc/#useful-online-git-code-management","text":"Some useful online git code management systems in the link.","title":"Useful online git code management"},{"location":"misc/#how-to-write-file-in-markdown-formation","text":"The syntax about markdown file.","title":"How to write file in markdown formation"},{"location":"misc/#free-bug-tools","text":"Some free bug tools.","title":"Free bug tools"},{"location":"misc/bug-tool/","text":"Free bug tools Name Link bugout https://bugout2.testin.cn/ bugtags https://bugtags.com/ delbug https://delbug.cn/","title":"Free bug tools"},{"location":"misc/bug-tool/#free-bug-tools","text":"Name Link bugout https://bugout2.testin.cn/ bugtags https://bugtags.com/ delbug https://delbug.cn/","title":"Free bug tools"},{"location":"misc/git-server/","text":"Useful links of git Name Link github https://github.com/ bitbucket https://bitbucket.org/ coding https://coding.net/ gogs https://gogs.io/ gitee https://gitee.com/ gitea https://gitea.io/ codegit https://codegit.net/","title":"Useful links of git"},{"location":"misc/git-server/#useful-links-of-git","text":"Name Link github https://github.com/ bitbucket https://bitbucket.org/ coding https://coding.net/ gogs https://gogs.io/ gitee https://gitee.com/ gitea https://gitea.io/ codegit https://codegit.net/","title":"Useful links of git"},{"location":"misc/howto-markdown/","text":"How to markdown http://www.markdown.cn/","title":"How to markdown"},{"location":"misc/howto-markdown/#how-to-markdown","text":"http://www.markdown.cn/","title":"How to markdown"},{"location":"other/","text":"Other Hello mini-blog! It is my first mini-blog, ^_^","title":"Other"},{"location":"other/#other","text":"","title":"Other"},{"location":"other/#hello-mini-blog","text":"It is my first mini-blog, ^_^","title":"Hello mini-blog!"},{"location":"other/hello/","text":"Hello Hello mini-blog!","title":"Hello"},{"location":"other/hello/#hello","text":"Hello mini-blog!","title":"Hello"},{"location":"python/","text":"Python","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"qt/","text":"Qt 0. event and signal-slot 1. introduction 2. Hello World 3. widgets 4. menu toolbar 5. dialog 6. internationalization 7. container 8. model-view 9. algo and data type 10. file 11. process 12. multi platform 13. library problems","title":"Qt"},{"location":"qt/#qt","text":"","title":"Qt"},{"location":"qt/#0-event-and-signal-slot","text":"","title":"0. event and signal-slot"},{"location":"qt/#1-introduction","text":"","title":"1. introduction"},{"location":"qt/#2-hello-world","text":"","title":"2. Hello World"},{"location":"qt/#3-widgets","text":"","title":"3. widgets"},{"location":"qt/#4-menu-toolbar","text":"","title":"4. menu &amp; toolbar"},{"location":"qt/#5-dialog","text":"","title":"5. dialog"},{"location":"qt/#6-internationalization","text":"","title":"6. internationalization"},{"location":"qt/#7-container","text":"","title":"7. container"},{"location":"qt/#8-model-view","text":"","title":"8. model-view"},{"location":"qt/#9-algo-and-data-type","text":"","title":"9. algo and data type"},{"location":"qt/#10-file","text":"","title":"10. file"},{"location":"qt/#11-process","text":"","title":"11. process"},{"location":"qt/#12-multi-platform","text":"","title":"12. multi platform"},{"location":"qt/#13-library","text":"","title":"13. library"},{"location":"qt/#problems","text":"","title":"problems"},{"location":"qt/0-event-signal-slot/","text":"event and signal-slot framework \u4ee5\u4e0b\u662f\u4e2a\u4eba\u5bf9QT\u4e2d\u7684\u4e8b\u4ef6event\u548c\u4fe1\u53f7\u69fd(signal/slog)\u7684\u7406\u89e3, \u672a\u5fc5\u6b63\u786e, \u4ec5\u4f9b\u4e2a\u4eba\u53c2\u8003. ---------------------------------------------------------- \u5bf9\u7528\u6237\u64cd\u4f5c\u505a\u51fa\u7684\u54cd\u5e94\u4e8b\u4ef6 or \u7cfb\u7edf\u81ea\u52a8\u53d1\u51fa\u7684\u4e8b\u4ef6 (\u5982\u70b9\u51fb\u64cd\u4f5c) (\u5982\u5b9a\u65f6\u5668) ---------------------------------------------------------- || \\/ ----------------------- \u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61 ----------------------- || \\/ --------------------------------- \u88ab\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u8fc7\u6ee4 === 1 \u4f8b\u5982\u5728\u5305\u542b\u7a97\u53e3\u4e2d\u8fc7\u8f7deventFilter --------------------------------- || \\/ ---------------------------- \u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u884c\u4e3a \u901a\u8fc7\u8fc7\u8f7devent() \u6bd4\u5982\u6539\u53d8tab\u952e\u7ec4\u4ef6,\u6216\u6dfb\u52a0 === 2 \u81ea\u5b9a\u4e49\u4e8b\u4ef6 ---------------------------- || \\/ ----------------------------------------- \u5c06event\u5bf9\u8c61\u4f20\u9012\u7ed9QObject\u7684event\u51fd\u6570 event\u51fd\u6570\u6309\u7167\u4e8b\u4ef6\u7c7b\u578b\u5206\u53d1\u7ed9\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 ---------------------------------------- || or || \\/ \\/ ---------- ---------- \u4e8b\u4ef6\u961f\u5217 \u76f4\u63a5\u5904\u7406 ---------- ---------- \\ / -------------------- \u5bf9\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 === 3 -------------------- || \\/ ---------------------- \u6709\u53ef\u80fd\u53d1\u51fa\u4fe1\u53f7signal === 4 ---------------------- || \\/ ---------------------- \u7acb\u5373\u6267\u884c\u5bf9\u5e94\u7684\u69fd\u94a9\u5b50 ---------------------- \u5982\u4e0a\u56fe\u6240\u793a \u5982\u679c\u4f7f\u7528\u7ec4\u4ef6\u7684\u9ed8\u8ba4\u4e8b\u4ef6, \u76f4\u63a5\u5b9a\u4e49signal/slot - p4 \u5982\u679c\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u884c\u4e3a, \u5728\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u4e2d\u8f7d\u7236\u7c7b\u540c\u540d\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u6709\u53ef\u80fd\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u4e2d\u51fd\u6570\u9ed8\u8ba4\u884c\u4e3a. \u4f8b\u5982mouseMoveEvent/mousePressEvent/mouseReleaseEvent - p3 \u5728\u7a97\u53e3\u5173\u95ed\u65f6, \u5982\u679c\u6539\u53d8\u5173\u95ed\u65f6\u7684\u9ed8\u8ba4\u884c\u4e3a, \u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u9700\u8981\u8c03\u7528accept()\u6216\u8005ignore() - p3 \u8fc7\u8f7devent\u65f6, \u4e0d\u662f\u4fee\u6539\u9ed8\u8ba4\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u800c\u662f\u5728\u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u534f\u8c03\u4e8b\u4ef6\u6216\u8005\u6dfb\u52a0\u81ea\u5b9a\u4e49\u4e8b\u4ef6 - p2 \u5728\u7236\u7c7b\u4e2d\u91cd\u5199eventFilter, \u5728\u81ea\u8eab\u4e2d\u901a\u8fc7installEventFilte\u628a\u81ea\u8eab\u5b89\u88c5\u5230\u7236\u7c7b\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e2d, \u5904\u7406\u4e8b\u4ef6\u65f6\u5c31\u4f1a\u5148\u88ab\u8fc7\u6ee4\u5668\u8fc7\u6ee4\u4e00\u904d, \u4f8b\u5982\u67d0\u4e9b\u7ec4\u4ef6\u4e0d\u5904\u7406\u67d0\u4e9b\u6d88\u606f - p1","title":"event and signal-slot"},{"location":"qt/0-event-signal-slot/#event-and-signal-slot","text":"","title":"event and signal-slot"},{"location":"qt/0-event-signal-slot/#framework","text":"\u4ee5\u4e0b\u662f\u4e2a\u4eba\u5bf9QT\u4e2d\u7684\u4e8b\u4ef6event\u548c\u4fe1\u53f7\u69fd(signal/slog)\u7684\u7406\u89e3, \u672a\u5fc5\u6b63\u786e, \u4ec5\u4f9b\u4e2a\u4eba\u53c2\u8003. ---------------------------------------------------------- \u5bf9\u7528\u6237\u64cd\u4f5c\u505a\u51fa\u7684\u54cd\u5e94\u4e8b\u4ef6 or \u7cfb\u7edf\u81ea\u52a8\u53d1\u51fa\u7684\u4e8b\u4ef6 (\u5982\u70b9\u51fb\u64cd\u4f5c) (\u5982\u5b9a\u65f6\u5668) ---------------------------------------------------------- || \\/ ----------------------- \u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61 ----------------------- || \\/ --------------------------------- \u88ab\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u8fc7\u6ee4 === 1 \u4f8b\u5982\u5728\u5305\u542b\u7a97\u53e3\u4e2d\u8fc7\u8f7deventFilter --------------------------------- || \\/ ---------------------------- \u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u884c\u4e3a \u901a\u8fc7\u8fc7\u8f7devent() \u6bd4\u5982\u6539\u53d8tab\u952e\u7ec4\u4ef6,\u6216\u6dfb\u52a0 === 2 \u81ea\u5b9a\u4e49\u4e8b\u4ef6 ---------------------------- || \\/ ----------------------------------------- \u5c06event\u5bf9\u8c61\u4f20\u9012\u7ed9QObject\u7684event\u51fd\u6570 event\u51fd\u6570\u6309\u7167\u4e8b\u4ef6\u7c7b\u578b\u5206\u53d1\u7ed9\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 ---------------------------------------- || or || \\/ \\/ ---------- ---------- \u4e8b\u4ef6\u961f\u5217 \u76f4\u63a5\u5904\u7406 ---------- ---------- \\ / -------------------- \u5bf9\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570 === 3 -------------------- || \\/ ---------------------- \u6709\u53ef\u80fd\u53d1\u51fa\u4fe1\u53f7signal === 4 ---------------------- || \\/ ---------------------- \u7acb\u5373\u6267\u884c\u5bf9\u5e94\u7684\u69fd\u94a9\u5b50 ----------------------","title":"framework"},{"location":"qt/0-event-signal-slot/#_1","text":"\u5982\u679c\u4f7f\u7528\u7ec4\u4ef6\u7684\u9ed8\u8ba4\u4e8b\u4ef6, \u76f4\u63a5\u5b9a\u4e49signal/slot - p4 \u5982\u679c\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u884c\u4e3a, \u5728\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u4e2d\u8f7d\u7236\u7c7b\u540c\u540d\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u6709\u53ef\u80fd\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u4e2d\u51fd\u6570\u9ed8\u8ba4\u884c\u4e3a. \u4f8b\u5982mouseMoveEvent/mousePressEvent/mouseReleaseEvent - p3 \u5728\u7a97\u53e3\u5173\u95ed\u65f6, \u5982\u679c\u6539\u53d8\u5173\u95ed\u65f6\u7684\u9ed8\u8ba4\u884c\u4e3a, \u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u9700\u8981\u8c03\u7528accept()\u6216\u8005ignore() - p3 \u8fc7\u8f7devent\u65f6, \u4e0d\u662f\u4fee\u6539\u9ed8\u8ba4\u4e8b\u4ef6\u5904\u7406\u51fd\u6570, \u800c\u662f\u5728\u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u534f\u8c03\u4e8b\u4ef6\u6216\u8005\u6dfb\u52a0\u81ea\u5b9a\u4e49\u4e8b\u4ef6 - p2 \u5728\u7236\u7c7b\u4e2d\u91cd\u5199eventFilter, \u5728\u81ea\u8eab\u4e2d\u901a\u8fc7installEventFilte\u628a\u81ea\u8eab\u5b89\u88c5\u5230\u7236\u7c7b\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e2d, \u5904\u7406\u4e8b\u4ef6\u65f6\u5c31\u4f1a\u5148\u88ab\u8fc7\u6ee4\u5668\u8fc7\u6ee4\u4e00\u904d, \u4f8b\u5982\u67d0\u4e9b\u7ec4\u4ef6\u4e0d\u5904\u7406\u67d0\u4e9b\u6d88\u606f - p1","title":"\u5982\u4e0a\u56fe\u6240\u793a"},{"location":"qt/1-introduction/","text":"QTCreator how to New Project Application - Qt Widgets Application for general applications on desktop Non-Qt Project - Plain C++ Application for general C++ console applications Color in Editor: In Tools - Options - Color Scheme for Theme ... Vim mode: In Tools - Options - FakeVim some shutcuts build: Ctl+B run: Ctl+R breakpoint: F9 fullscreen: Ctl+Shift+F11 help: Ctl+6, Alt+L to \"Look for\", Esc to exit help sub-wind in foot: Alt+num other source file: Alt+arrow (left right) left sidebar: Alt+0 right sidebar: Alt+Shift+0 some skills layout: Ctl+H to H, Ctl+L to V source/header: F4 layout\u4e2d\u53ef\u4ee5\u52a0\u5165\u5f39\u7c27\u628a\u5176\u4ed6\u7ec4\u4ef6\u9876\u8d77\u6765: layout- addStretch() \u7ec4\u4ef6\u4e2d\u53ef\u4ee5\u53d1\u5c04\u81ea\u8eab\u7684\u4fe1\u53f7, \u76f8\u5f53\u4e8e\u8c03\u7528\u8fd9\u4e2a\u4fe1\u53f7\u5bf9\u5e94\u7684\u6240\u6709\u69fd\u51fd\u6570, emit findPrevious(text, cs); QWidget/QDialog/QMainWindow\u7684layout\u662f\u4e0d\u540c\u7684, QWidget/QDialog\u4e2d\u53ef\u4ee5\u7528setLayout, QMainWindow\u4e2d\u7528setCentralWidget\u6dfb\u52a0\u4e00\u4e2aWidget, \u56e0\u4e3aQMainWindow\u4e4b\u4e2d\u5df2\u7ecf\u6709\u4e86layout \u7ec4\u4ef6\u663e\u793a\u5b57\u7b26\u4e32\u4e2d' C'\u662f\u5feb\u6377\u952e","title":"QTCreator"},{"location":"qt/1-introduction/#qtcreator","text":"","title":"QTCreator"},{"location":"qt/1-introduction/#how-to","text":"New Project Application - Qt Widgets Application for general applications on desktop Non-Qt Project - Plain C++ Application for general C++ console applications Color in Editor: In Tools - Options - Color Scheme for Theme ... Vim mode: In Tools - Options - FakeVim","title":"how to"},{"location":"qt/1-introduction/#some-shutcuts","text":"build: Ctl+B run: Ctl+R breakpoint: F9 fullscreen: Ctl+Shift+F11 help: Ctl+6, Alt+L to \"Look for\", Esc to exit help sub-wind in foot: Alt+num other source file: Alt+arrow (left right) left sidebar: Alt+0 right sidebar: Alt+Shift+0","title":"some shutcuts"},{"location":"qt/1-introduction/#some-skills","text":"layout: Ctl+H to H, Ctl+L to V source/header: F4 layout\u4e2d\u53ef\u4ee5\u52a0\u5165\u5f39\u7c27\u628a\u5176\u4ed6\u7ec4\u4ef6\u9876\u8d77\u6765: layout- addStretch() \u7ec4\u4ef6\u4e2d\u53ef\u4ee5\u53d1\u5c04\u81ea\u8eab\u7684\u4fe1\u53f7, \u76f8\u5f53\u4e8e\u8c03\u7528\u8fd9\u4e2a\u4fe1\u53f7\u5bf9\u5e94\u7684\u6240\u6709\u69fd\u51fd\u6570, emit findPrevious(text, cs); QWidget/QDialog/QMainWindow\u7684layout\u662f\u4e0d\u540c\u7684, QWidget/QDialog\u4e2d\u53ef\u4ee5\u7528setLayout, QMainWindow\u4e2d\u7528setCentralWidget\u6dfb\u52a0\u4e00\u4e2aWidget, \u56e0\u4e3aQMainWindow\u4e4b\u4e2d\u5df2\u7ecf\u6709\u4e86layout \u7ec4\u4ef6\u663e\u793a\u5b57\u7b26\u4e32\u4e2d' C'\u662f\u5feb\u6377\u952e","title":"some skills"},{"location":"qt/10-io/","text":"File QIODevice \u8bbe\u5907\u7c7b\u578b \u968f\u673a\u8bbf\u95ee\u8bbe\u5907 QFile QTemporaryFile QBuffer \u987a\u5e8f\u8bbf\u95ee\u8bbe\u5907 QProcess QTcpSocket QUdpSocket QSslSocket \u8bbf\u95ee\u65b9\u5f0f QDataStream: \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 QTextStream: \u6587\u672c\u6587\u4ef6\u8bfb\u5199 example \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 Headers #include QFile #include QDataStream #include QImage #include QMap Codes QImage image( :/close.png ); QMap QString, QColor map; map.insert( red , Qt::red); map.insert( green , Qt::green); map.insert( white , Qt::white); QFile file( new.dat ); QDataStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } out.setVersion(QDataStream::Qt_5_9); out quint32(0xdeadabcd) quint32(592) image map; file.close(); QImage image2; QMap QString, QColor map2; quint32 magic, v; QDataStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Read fail ), tr( Read fail )); return; } in.setVersion(QDataStream::Qt_5_9); in magic; if (0xdeadabcd != magic) { QMessageBox::information(NULL, tr( File formation wrong ), tr( File formation wrong )); return; } in v; #if 0 if (v 592) { } else if (v 592) { } #else if (v != 592) { QMessageBox::information(NULL, tr( invalid version number ), tr( invalid version number )); return; } #endif in.setVersion(QDataStream::Qt_5_9); in image2 map2; QMessageBox::information(NULL, tr( read file ), QString( magic: %1, v: %2 ).arg(magic).arg(v)); file.close(); \u6587\u672c\u6587\u4ef6\u8bfb\u5199 Headers #include QFile #include QTextStream Codes QFile file( new.txt ); QTextStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } #if 0 out.setCodec( UTF-8 ); out.setIntegerBase(16); out.setNumberFlags(QTextStream::ShowBase); #else out showbase uppercasedigits hex; #endif out abcdefg 12345; file.close(); QTextStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } QString content = in.readAll(); // in.readline() QMessageBox::information(NULL, tr( read file ), content); file.close();","title":"File"},{"location":"qt/10-io/#file","text":"","title":"File"},{"location":"qt/10-io/#qiodevice","text":"","title":"QIODevice"},{"location":"qt/10-io/#_1","text":"","title":"\u8bbe\u5907\u7c7b\u578b"},{"location":"qt/10-io/#_2","text":"QFile QTemporaryFile QBuffer","title":"\u968f\u673a\u8bbf\u95ee\u8bbe\u5907"},{"location":"qt/10-io/#_3","text":"QProcess QTcpSocket QUdpSocket QSslSocket","title":"\u987a\u5e8f\u8bbf\u95ee\u8bbe\u5907"},{"location":"qt/10-io/#_4","text":"QDataStream: \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199 QTextStream: \u6587\u672c\u6587\u4ef6\u8bfb\u5199","title":"\u8bbf\u95ee\u65b9\u5f0f"},{"location":"qt/10-io/#example","text":"","title":"example"},{"location":"qt/10-io/#_5","text":"","title":"\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199"},{"location":"qt/10-io/#headers","text":"#include QFile #include QDataStream #include QImage #include QMap","title":"Headers"},{"location":"qt/10-io/#codes","text":"QImage image( :/close.png ); QMap QString, QColor map; map.insert( red , Qt::red); map.insert( green , Qt::green); map.insert( white , Qt::white); QFile file( new.dat ); QDataStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } out.setVersion(QDataStream::Qt_5_9); out quint32(0xdeadabcd) quint32(592) image map; file.close(); QImage image2; QMap QString, QColor map2; quint32 magic, v; QDataStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Read fail ), tr( Read fail )); return; } in.setVersion(QDataStream::Qt_5_9); in magic; if (0xdeadabcd != magic) { QMessageBox::information(NULL, tr( File formation wrong ), tr( File formation wrong )); return; } in v; #if 0 if (v 592) { } else if (v 592) { } #else if (v != 592) { QMessageBox::information(NULL, tr( invalid version number ), tr( invalid version number )); return; } #endif in.setVersion(QDataStream::Qt_5_9); in image2 map2; QMessageBox::information(NULL, tr( read file ), QString( magic: %1, v: %2 ).arg(magic).arg(v)); file.close();","title":"Codes"},{"location":"qt/10-io/#_6","text":"","title":"\u6587\u672c\u6587\u4ef6\u8bfb\u5199"},{"location":"qt/10-io/#headers_1","text":"#include QFile #include QTextStream","title":"Headers"},{"location":"qt/10-io/#codes_1","text":"QFile file( new.txt ); QTextStream out( file); if (!file.open(QIODevice::WriteOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } #if 0 out.setCodec( UTF-8 ); out.setIntegerBase(16); out.setNumberFlags(QTextStream::ShowBase); #else out showbase uppercasedigits hex; #endif out abcdefg 12345; file.close(); QTextStream in( file); if (!file.open(QIODevice::ReadOnly)) { QMessageBox::information(NULL, tr( Open fail ), tr( Open fail )); return; } QString content = in.readAll(); // in.readline() QMessageBox::information(NULL, tr( read file ), content); file.close();","title":"Codes"},{"location":"qt/11-process/","text":"process example(\u6267\u884c\u4e00\u4e2a\u5916\u90e8\u7a0b\u5e8f\u5e76\u663e\u793a\u7ed3\u679c) Header #include QProcess #include QTextCodec Data memeber and Slots private slots: void showProcess(); void showResults(int exitCode); private: QProcess *p Codes In main: connect(pActionOpen, SIGNAL(triggered()), this, SLOT(showProcess())); void MainWindow::showProcess() { //QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel); QStringList params; params.append( -a ); params.append( -l ); p = new QProcess(this); p- start( ls , params); connect(p, SIGNAL(finished(int)), this, SLOT(showResults(int))); } void MainWindow::showResults(int exitCode) { if (0 == exitCode) { #if defined(Q_OS_WIN32) QTextCodec* gbkCodec = QTextCodec::codecForName( BGK ); QString info = gbkCodec- toUnicode(p- readAll()); #elif defined(Q_OS_LINUX) QTextCodec* utfCodec = QTextCodec::codecForName( UTF-8 ); QString info = utfCodec- toUnicode(p- readAll()); #endif QMessageBox::information(NULL, tr( results ), info); } }","title":"process"},{"location":"qt/11-process/#process","text":"","title":"process"},{"location":"qt/11-process/#example","text":"","title":"example(\u6267\u884c\u4e00\u4e2a\u5916\u90e8\u7a0b\u5e8f\u5e76\u663e\u793a\u7ed3\u679c)"},{"location":"qt/11-process/#header","text":"#include QProcess #include QTextCodec","title":"Header"},{"location":"qt/11-process/#data-memeber-and-slots","text":"private slots: void showProcess(); void showResults(int exitCode); private: QProcess *p","title":"Data memeber and Slots"},{"location":"qt/11-process/#codes","text":"In main: connect(pActionOpen, SIGNAL(triggered()), this, SLOT(showProcess())); void MainWindow::showProcess() { //QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel); QStringList params; params.append( -a ); params.append( -l ); p = new QProcess(this); p- start( ls , params); connect(p, SIGNAL(finished(int)), this, SLOT(showResults(int))); } void MainWindow::showResults(int exitCode) { if (0 == exitCode) { #if defined(Q_OS_WIN32) QTextCodec* gbkCodec = QTextCodec::codecForName( BGK ); QString info = gbkCodec- toUnicode(p- readAll()); #elif defined(Q_OS_LINUX) QTextCodec* utfCodec = QTextCodec::codecForName( UTF-8 ); QString info = utfCodec- toUnicode(p- readAll()); #endif QMessageBox::information(NULL, tr( results ), info); } }","title":"Codes"},{"location":"qt/12-multi-platform/","text":"multi platform #if defined(Q_OS_WIN32) #elif defined(Q_OS_LINUX) #elif defined (Q_OS_UNIX) #endif","title":"multi platform"},{"location":"qt/12-multi-platform/#multi-platform","text":"#if defined(Q_OS_WIN32) #elif defined(Q_OS_LINUX) #elif defined (Q_OS_UNIX) #endif","title":"multi platform"},{"location":"qt/13-library/","text":"shared library Path: Projects - New Project - Library - C++ Library Name: mywin Most of times, we will only build shared library for algo but not GUI. Codes mywin_global.h #ifndef MYWIN_GLOBAL_H #define MYWIN_GLOBAL_H #include QtCore/qglobal.h #if defined(MYWIN_LIBRARY) # define MYWINSHARED_EXPORT Q_DECL_EXPORT #else # define MYWINSHARED_EXPORT Q_DECL_IMPORT #endif #endif // MYWIN_GLOBAL_H mywin.h #ifndef MYWIN_H #define MYWIN_H #include QMainWindow #include QPushButton #include QHBoxLayout #include mywin_global.h class MYWINSHARED_EXPORT Mywin: public QMainWindow { public: Mywin(QWidget *parent = 0); private: QHBoxLayout *layout; QPushButton *btn; }; #endif // MYWIN_H mywin.cpp #include mywin.h Mywin::Mywin(QWidget *parent): QMainWindow (parent) { layout = new QHBoxLayout; btn = new QPushButton(tr( temp )); layout- addWidget(btn); setLayout(layout); } how to run compile project create a new project edit newproj.pro, add two lines(maybe copy so to /usr/lib, etc): INCLUDEPATH += /path/to/mywin LIBS += -L/path/to/so -lmywi build newproj and run","title":"shared library"},{"location":"qt/13-library/#shared-library","text":"Path: Projects - New Project - Library - C++ Library Name: mywin Most of times, we will only build shared library for algo but not GUI.","title":"shared library"},{"location":"qt/13-library/#codes","text":"","title":"Codes"},{"location":"qt/13-library/#mywin_globalh","text":"#ifndef MYWIN_GLOBAL_H #define MYWIN_GLOBAL_H #include QtCore/qglobal.h #if defined(MYWIN_LIBRARY) # define MYWINSHARED_EXPORT Q_DECL_EXPORT #else # define MYWINSHARED_EXPORT Q_DECL_IMPORT #endif #endif // MYWIN_GLOBAL_H","title":"mywin_global.h"},{"location":"qt/13-library/#mywinh","text":"#ifndef MYWIN_H #define MYWIN_H #include QMainWindow #include QPushButton #include QHBoxLayout #include mywin_global.h class MYWINSHARED_EXPORT Mywin: public QMainWindow { public: Mywin(QWidget *parent = 0); private: QHBoxLayout *layout; QPushButton *btn; }; #endif // MYWIN_H","title":"mywin.h"},{"location":"qt/13-library/#mywincpp","text":"#include mywin.h Mywin::Mywin(QWidget *parent): QMainWindow (parent) { layout = new QHBoxLayout; btn = new QPushButton(tr( temp )); layout- addWidget(btn); setLayout(layout); }","title":"mywin.cpp"},{"location":"qt/13-library/#how-to-run","text":"compile project create a new project edit newproj.pro, add two lines(maybe copy so to /usr/lib, etc): INCLUDEPATH += /path/to/mywin LIBS += -L/path/to/so -lmywi build newproj and run","title":"how to run"},{"location":"qt/2-hello-world/","text":"Hello World Create Qt Widgets Application with QWidget as base class (disable Generate form ) Codes In hellowrld.h #ifndef HELLOWORLD_H #define HELLOWORLD_H #include QWidget #include QLabel #include QPushButton #include QHBoxLayout class HelloWorld : public QWidget { Q_OBJECT public: HelloWorld(QWidget *parent = 0); ~HelloWorld(); private: QLabel *pLabel; QPushButton * pBtn; QHBoxLayout *pLayout; }; #endif // HELLOWORLD_ In helloworld.cpp #include helloworld.h HelloWorld::HelloWorld(QWidget *parent) : QWidget(parent) { pLabel = new QLabel(tr( Hello World! )); pBtn = new QPushButton(tr( Exit )); pLayout = new QHBoxLayout(this); pLayout- addWidget(pLabel); pLayout- addWidget(pBtn); connect(pBtn, SIGNAL(clicked()), this, SLOT(close())); // signal-slot setLayout(pLayout); setFixedSize(200, 100); setWindowTitle(tr( My Hello World )); } HelloWorld::~HelloWorld() { } In main.cpp #include helloworld.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); HelloWorld w; w.show(); return a.exec(); }","title":"Hello World"},{"location":"qt/2-hello-world/#hello-world","text":"","title":"Hello World"},{"location":"qt/2-hello-world/#create-qt-widgets-application-with-qwidget-as-base-class-disable-generate-form","text":"","title":"Create Qt Widgets Application with QWidget as base class (disable Generate form)"},{"location":"qt/2-hello-world/#codes","text":"","title":"Codes"},{"location":"qt/2-hello-world/#in-hellowrldh","text":"#ifndef HELLOWORLD_H #define HELLOWORLD_H #include QWidget #include QLabel #include QPushButton #include QHBoxLayout class HelloWorld : public QWidget { Q_OBJECT public: HelloWorld(QWidget *parent = 0); ~HelloWorld(); private: QLabel *pLabel; QPushButton * pBtn; QHBoxLayout *pLayout; }; #endif // HELLOWORLD_","title":"In hellowrld.h"},{"location":"qt/2-hello-world/#in-helloworldcpp","text":"#include helloworld.h HelloWorld::HelloWorld(QWidget *parent) : QWidget(parent) { pLabel = new QLabel(tr( Hello World! )); pBtn = new QPushButton(tr( Exit )); pLayout = new QHBoxLayout(this); pLayout- addWidget(pLabel); pLayout- addWidget(pBtn); connect(pBtn, SIGNAL(clicked()), this, SLOT(close())); // signal-slot setLayout(pLayout); setFixedSize(200, 100); setWindowTitle(tr( My Hello World )); } HelloWorld::~HelloWorld() { }","title":"In helloworld.cpp"},{"location":"qt/2-hello-world/#in-maincpp","text":"#include helloworld.h #include QApplication int main(int argc, char *argv[]) { QApplication a(argc, argv); HelloWorld w; w.show(); return a.exec(); }","title":"In main.cpp"},{"location":"qt/3-widgets/","text":"Classes Layout QHBoxLayout/QVBoxLayout/QGridLayout Widgets QWidget/QMainWindow/QDialog: \u9876\u7ea7\u7ec4\u4ef6 QLabel: \u9759\u6001\u6807\u7b7e, \u53ef\u4ee5\u653e\u7f6e\u666e\u901a\u6587\u672c/\u5bcc\u6587\u672c/\u56fe\u7247 QPushButton: \u6309\u94ae QSpinBox: signal: valueChanged, slot: setValue QSlider: signal: valueChanged, slot: setValue QMenu/QToolBar/QAction","title":"Classes"},{"location":"qt/3-widgets/#classes","text":"","title":"Classes"},{"location":"qt/3-widgets/#layout","text":"QHBoxLayout/QVBoxLayout/QGridLayout","title":"Layout"},{"location":"qt/3-widgets/#widgets","text":"QWidget/QMainWindow/QDialog: \u9876\u7ea7\u7ec4\u4ef6 QLabel: \u9759\u6001\u6807\u7b7e, \u53ef\u4ee5\u653e\u7f6e\u666e\u901a\u6587\u672c/\u5bcc\u6587\u672c/\u56fe\u7247 QPushButton: \u6309\u94ae QSpinBox: signal: valueChanged, slot: setValue QSlider: signal: valueChanged, slot: setValue QMenu/QToolBar/QAction","title":"Widgets"},{"location":"qt/4-menu-toolbar/","text":"Menu Toolbar add resource file mkdir resource in project folder right click on project: Add New... - Qt - Qt Resource File , Name: actions, Path: path/to/resource/folder click Resources- resource/actions.qrc , click Add - Add Prefix , Prefix: / add 3 files in the folder: close.png/open.png/rule.png Optional: Resources- resources/actions.qrc - Open in Editor Resources- resources/actions.qrc - Add - Add Files , select all pngs codes mainwindow.h #ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); private slots: void openFile(); }; #endif // MAINWINDOW_H mainwindow.cpp #include mainwindow.h #include QMenuBar #include QMenu #include QToolBar #include QAction #include QIcon #include QStatusBar #include QLabel #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { QAction * pActionOpen = new QAction(tr( Open ), this); pActionOpen- setShortcut(QKeySequence::Open); pActionOpen- setIcon(QIcon( :/open.png )); pActionOpen- setStatusTip(tr( Open a file )); QAction * pActionClose = new QAction(tr( Close ), this); pActionClose- setShortcut(QKeySequence::Close); pActionClose- setIcon(QIcon( :/close.png )); pActionClose- setStatusTip(tr( Close window )); QMenu * pMenuFile = menuBar()- addMenu(tr( File )); pMenuFile- addAction(pActionOpen); pMenuFile- addAction(pActionClose); QToolBar * pTooBarFile = addToolBar(tr( File )); pTooBarFile- addAction(pActionOpen); pTooBarFile- addAction(pActionClose); QStatusBar * pStatusBar = statusBar(); /* temporary*/ pStatusBar- showMessage(tr( Starting... ), 3000); /* permanent */ QLabel * pp = new QLabel(tr( Welcome! )); pp- setMinimumSize(pp- sizeHint()); pp- setAlignment(Qt::AlignCenter); pStatusBar- addPermanentWidget(pp); #if 0 /* general*/ QLabel * pg1 = new QLabel(tr( Welcome1 )); pg1- setMinimumSize(pg1- sizeHint()); pg1- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg1); QLabel * pg2 = new QLabel(tr( Welcome2 )); pg2- setMinimumSize(pg2- sizeHint()); pg2- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg2); #endif /* signal-slot */ connect(pActionOpen, SIGNAL(triggered()), this, SLOT(openFile())); connect(pActionClose, SIGNAL(triggered()), this, SLOT(close())); /* Other */ QLabel *pLabel = new QLabel(tr( temp )); setCentralWidget(pLabel); setFixedSize(400, 200); setWindowTitle(tr( Test Menu and ToolBar )); } MainWindow::~MainWindow() { } void MainWindow::openFile() { QMessageBox::information(NULL, tr( Open ), tr( Open a file )); }","title":"Menu & Toolbar"},{"location":"qt/4-menu-toolbar/#menu-toolbar","text":"","title":"Menu &amp; Toolbar"},{"location":"qt/4-menu-toolbar/#add-resource-file","text":"mkdir resource in project folder right click on project: Add New... - Qt - Qt Resource File , Name: actions, Path: path/to/resource/folder click Resources- resource/actions.qrc , click Add - Add Prefix , Prefix: / add 3 files in the folder: close.png/open.png/rule.png Optional: Resources- resources/actions.qrc - Open in Editor Resources- resources/actions.qrc - Add - Add Files , select all pngs","title":"add resource file"},{"location":"qt/4-menu-toolbar/#codes","text":"","title":"codes"},{"location":"qt/4-menu-toolbar/#mainwindowh","text":"#ifndef MAINWINDOW_H #define MAINWINDOW_H #include QMainWindow class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = 0); ~MainWindow(); private slots: void openFile(); }; #endif // MAINWINDOW_H","title":"mainwindow.h"},{"location":"qt/4-menu-toolbar/#mainwindowcpp","text":"#include mainwindow.h #include QMenuBar #include QMenu #include QToolBar #include QAction #include QIcon #include QStatusBar #include QLabel #include QMessageBox MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) { QAction * pActionOpen = new QAction(tr( Open ), this); pActionOpen- setShortcut(QKeySequence::Open); pActionOpen- setIcon(QIcon( :/open.png )); pActionOpen- setStatusTip(tr( Open a file )); QAction * pActionClose = new QAction(tr( Close ), this); pActionClose- setShortcut(QKeySequence::Close); pActionClose- setIcon(QIcon( :/close.png )); pActionClose- setStatusTip(tr( Close window )); QMenu * pMenuFile = menuBar()- addMenu(tr( File )); pMenuFile- addAction(pActionOpen); pMenuFile- addAction(pActionClose); QToolBar * pTooBarFile = addToolBar(tr( File )); pTooBarFile- addAction(pActionOpen); pTooBarFile- addAction(pActionClose); QStatusBar * pStatusBar = statusBar(); /* temporary*/ pStatusBar- showMessage(tr( Starting... ), 3000); /* permanent */ QLabel * pp = new QLabel(tr( Welcome! )); pp- setMinimumSize(pp- sizeHint()); pp- setAlignment(Qt::AlignCenter); pStatusBar- addPermanentWidget(pp); #if 0 /* general*/ QLabel * pg1 = new QLabel(tr( Welcome1 )); pg1- setMinimumSize(pg1- sizeHint()); pg1- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg1); QLabel * pg2 = new QLabel(tr( Welcome2 )); pg2- setMinimumSize(pg2- sizeHint()); pg2- setAlignment(Qt::AlignCenter); pStatusBar- addWidget(pg2); #endif /* signal-slot */ connect(pActionOpen, SIGNAL(triggered()), this, SLOT(openFile())); connect(pActionClose, SIGNAL(triggered()), this, SLOT(close())); /* Other */ QLabel *pLabel = new QLabel(tr( temp )); setCentralWidget(pLabel); setFixedSize(400, 200); setWindowTitle(tr( Test Menu and ToolBar )); } MainWindow::~MainWindow() { } void MainWindow::openFile() { QMessageBox::information(NULL, tr( Open ), tr( Open a file )); }","title":"mainwindow.cpp"},{"location":"qt/5-dialog/","text":"Dialog QMessageBox 5 static interfaces: critical warning question information about if (QMessageBox::Ok == QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel)) { // } else { // } constructor QMessageBox msg(QMessageBox::NoIcon, tr( title ), tr( content )); msg.setIconPixmap(QPixmap( :/open.png )); if (QMessageBox::Ok == msg.exec()) {} QFileDialog static interface getOpenFileName getSaveFileName getOpenFileNames QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png(*.png);; jpg(*.jpg) )); //QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png jpg(*.png *.jpg) )); if (path.length()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + path); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); } constructor QFileDialog *dlg = new QFileDialog(this); dlg- setWindowTitle(tr( Open )); dlg- setDirectory( . ); dlg- setNameFilter(tr( Images (*.png *jpg) )); if (QFileDialog::Accepted == dlg- exec()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + dlg- selectedFiles()[0]); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); } QInputDialog static interface getText getInteger getDouble getItem bool ok; QString text = QInputDialog::getText(this, tr( title ), tr( Input ), QLineEdit::Normal, tr( default string ), ok); if (ok) { QMessageBox::information(NULL, tr( path ), tr( input text: ) + text); } else { QMessageBox::information(NULL, tr( path ), tr( no input )); }","title":"Dialog"},{"location":"qt/5-dialog/#dialog","text":"","title":"Dialog"},{"location":"qt/5-dialog/#qmessagebox","text":"","title":"QMessageBox"},{"location":"qt/5-dialog/#5-static-interfaces","text":"critical warning question information about if (QMessageBox::Ok == QMessageBox::information(NULL, tr( Open ), tr( Open a file ), QMessageBox::Ok | QMessageBox::Cancel)) { // } else { // }","title":"5 static interfaces:"},{"location":"qt/5-dialog/#constructor","text":"QMessageBox msg(QMessageBox::NoIcon, tr( title ), tr( content )); msg.setIconPixmap(QPixmap( :/open.png )); if (QMessageBox::Ok == msg.exec()) {}","title":"constructor"},{"location":"qt/5-dialog/#qfiledialog","text":"","title":"QFileDialog"},{"location":"qt/5-dialog/#static-interface","text":"getOpenFileName getSaveFileName getOpenFileNames QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png(*.png);; jpg(*.jpg) )); //QString path = QFileDialog::getOpenFileName(this, tr( title ), . , tr( png jpg(*.png *.jpg) )); if (path.length()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + path); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); }","title":"static interface"},{"location":"qt/5-dialog/#constructor_1","text":"QFileDialog *dlg = new QFileDialog(this); dlg- setWindowTitle(tr( Open )); dlg- setDirectory( . ); dlg- setNameFilter(tr( Images (*.png *jpg) )); if (QFileDialog::Accepted == dlg- exec()) { QMessageBox::information(NULL, tr( path ), tr( path: ) + dlg- selectedFiles()[0]); } else { QMessageBox::information(NULL, tr( path ), tr( no selected )); }","title":"constructor"},{"location":"qt/5-dialog/#qinputdialog","text":"","title":"QInputDialog"},{"location":"qt/5-dialog/#static-interface_1","text":"getText getInteger getDouble getItem bool ok; QString text = QInputDialog::getText(this, tr( title ), tr( Input ), QLineEdit::Normal, tr( default string ), ok); if (ok) { QMessageBox::information(NULL, tr( path ), tr( input text: ) + text); } else { QMessageBox::information(NULL, tr( path ), tr( no input )); }","title":"static interface"},{"location":"qt/6-internationalization/","text":"Internationalization \u56fd\u9645\u5316\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u754c\u9762\u8bed\u8a00\u7684\u7ffb\u8bd1, \u4e66\u5199\u65b9\u5f0f, \u8d27\u5e01\u683c\u5f0f, \u65f6\u95f4\u65e5\u671f\u663e\u793a\u7b49\u7b49, \u4e0b\u9762\u4ee5\u754c\u9762\u7ffb\u8bd1\u4e3a. See help: Hello tr() Example modify conf for qtchooser check qt path when install it In QtCreator: Tools - Options... - Kits - Qt Versions - Qt 5.12.0 GCC 64bit, Get: /home/myusername/.Qtinstall/5.12.0/gcc_64/bin/qmake so path should be /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 modify conf myusername@mypcname:~/a/codes/qtproj/mymainwind$ qmake qmake: could not exec '/usr/lib/x86_64-linux-gnu/qt5/bin/qmake': No such file or directory === Cann't find qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ which qmake /usr/bin/qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ ls -l /usr/bin/qmake lrwxrwxrwx 1 root root 9 Nov 10 2016 /usr/bin/qmake - qtchooser === qmake link to qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ qtchooser --print-env === print env for qtchooser QT_SELECT= default QTTOOLDIR= /usr/lib/x86_64-linux-gnu/qt5/bin QTLIBDIR= /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ find /usr/ | grep qtchooser === find conf for qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === /usr/lib/x86_64-linux-gnu/qtchooser /usr/lib/x86_64-linux-gnu/qtchooser/qt4.conf /usr/lib/x86_64-linux-gnu/qtchooser/4.conf /usr/lib/x86_64-linux-gnu/qtchooser/qt5.conf /usr/lib/x86_64-linux-gnu/qtchooser/5.conf /usr/share/lintian/overrides/qtchooser /usr/share/man/man1/qtchooser.1.gz /usr/share/doc/qtchooser /usr/share/doc/qtchooser/copyright /usr/share/doc/qtchooser/README.Debian /usr/share/doc/qtchooser/changelog.Debian.gz /usr/share/qtchooser /usr/share/qtchooser/qt5-x86_64-linux-gnu.conf /usr/share/qtchooser/qt4-x86_64-linux-gnu.conf /usr/bin/qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf /usr/lib/x86_64-linux-gnu/qt5/bin /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ su Password: root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# vim /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# exit myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === modify /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 myusername@mypcname:~/a/codes/qtproj/mymainwind$ install tools apt-get install qttools5-dev-tools how to edit pro file to your project, add line: TRANSLATIONS += mymainwind.ts edit codes to translate int main(int argc, char *argv[]) { QApplication a(argc, argv); QTranslator qtTranslator; qtTranslator.load( qt_ + QLocale::system().name(), QLibraryInfo::location(QLibraryInfo::TranslationsPath)); a.installTranslator( qtTranslator); QTranslator myappTranslator; myappTranslator.load( mymainwind ); a.installTranslator( myappTranslator); MainWindow w; w.show(); return a.exec(); } Important: If you want to translate string out of function, you will use QT_TR_NOOP to translate one string, and QT_TRANSLATE_NOOP to more strings. You can install some builtin translations, for example: 5.12.0/gcc_64/translations/qt_zh_CN.qm enter your project folder, exec lupdate mymainwind.pro to generate mymainwind.ts myusername@mypcname:~/a/codes/qtproj/mymainwind$ lupdate -verbose mymainwind.pro Updating 'mymainwind.ts'... Found 20 source text(s) (0 new and 20 already existing) myusername@mypcname:~/a/codes/qtproj/mymainwind$ exec linguist mymainwind.ts to translate in linguist tool edit your translation, for example: Open - \u6253\u5f00( O) Click File - Release then Save in linguist tool to generate mymainwind.qm copy mymainwind.qm to application folder run your application, you will see the results","title":"Internationalization"},{"location":"qt/6-internationalization/#internationalization","text":"\u56fd\u9645\u5316\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u754c\u9762\u8bed\u8a00\u7684\u7ffb\u8bd1, \u4e66\u5199\u65b9\u5f0f, \u8d27\u5e01\u683c\u5f0f, \u65f6\u95f4\u65e5\u671f\u663e\u793a\u7b49\u7b49, \u4e0b\u9762\u4ee5\u754c\u9762\u7ffb\u8bd1\u4e3a. See help: Hello tr() Example","title":"Internationalization"},{"location":"qt/6-internationalization/#modify-conf-for-qtchooser","text":"check qt path when install it In QtCreator: Tools - Options... - Kits - Qt Versions - Qt 5.12.0 GCC 64bit, Get: /home/myusername/.Qtinstall/5.12.0/gcc_64/bin/qmake so path should be /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 modify conf myusername@mypcname:~/a/codes/qtproj/mymainwind$ qmake qmake: could not exec '/usr/lib/x86_64-linux-gnu/qt5/bin/qmake': No such file or directory === Cann't find qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ which qmake /usr/bin/qmake myusername@mypcname:~/a/codes/qtproj/mymainwind$ ls -l /usr/bin/qmake lrwxrwxrwx 1 root root 9 Nov 10 2016 /usr/bin/qmake - qtchooser === qmake link to qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ qtchooser --print-env === print env for qtchooser QT_SELECT= default QTTOOLDIR= /usr/lib/x86_64-linux-gnu/qt5/bin QTLIBDIR= /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ find /usr/ | grep qtchooser === find conf for qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === /usr/lib/x86_64-linux-gnu/qtchooser /usr/lib/x86_64-linux-gnu/qtchooser/qt4.conf /usr/lib/x86_64-linux-gnu/qtchooser/4.conf /usr/lib/x86_64-linux-gnu/qtchooser/qt5.conf /usr/lib/x86_64-linux-gnu/qtchooser/5.conf /usr/share/lintian/overrides/qtchooser /usr/share/man/man1/qtchooser.1.gz /usr/share/doc/qtchooser /usr/share/doc/qtchooser/copyright /usr/share/doc/qtchooser/README.Debian /usr/share/doc/qtchooser/changelog.Debian.gz /usr/share/qtchooser /usr/share/qtchooser/qt5-x86_64-linux-gnu.conf /usr/share/qtchooser/qt4-x86_64-linux-gnu.conf /usr/bin/qtchooser myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf /usr/lib/x86_64-linux-gnu/qt5/bin /usr/lib/x86_64-linux-gnu myusername@mypcname:~/a/codes/qtproj/mymainwind$ myusername@mypcname:~/a/codes/qtproj/mymainwind$ su Password: root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# vim /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf root@mypcname:/home/myusername/a/codes/qtproj/mymainwind# exit myusername@mypcname:~/a/codes/qtproj/mymainwind$ cat /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf === modify /home/myusername/.Qtinstall/5.12.0/gcc_64/bin /home/myusername/.Qtinstall/5.12.0 myusername@mypcname:~/a/codes/qtproj/mymainwind$","title":"modify conf for qtchooser"},{"location":"qt/6-internationalization/#install-tools","text":"apt-get install qttools5-dev-tools","title":"install tools"},{"location":"qt/6-internationalization/#how-to","text":"","title":"how to"},{"location":"qt/6-internationalization/#edit-pro-file-to-your-project-add-line-translations-mymainwindts","text":"","title":"edit pro file to your project, add line: TRANSLATIONS += mymainwind.ts"},{"location":"qt/6-internationalization/#edit-codes-to-translate","text":"int main(int argc, char *argv[]) { QApplication a(argc, argv); QTranslator qtTranslator; qtTranslator.load( qt_ + QLocale::system().name(), QLibraryInfo::location(QLibraryInfo::TranslationsPath)); a.installTranslator( qtTranslator); QTranslator myappTranslator; myappTranslator.load( mymainwind ); a.installTranslator( myappTranslator); MainWindow w; w.show(); return a.exec(); } Important: If you want to translate string out of function, you will use QT_TR_NOOP to translate one string, and QT_TRANSLATE_NOOP to more strings. You can install some builtin translations, for example: 5.12.0/gcc_64/translations/qt_zh_CN.qm","title":"edit codes to translate"},{"location":"qt/6-internationalization/#enter-your-project-folder-exec-lupdate-mymainwindpro-to-generate-mymainwindts","text":"myusername@mypcname:~/a/codes/qtproj/mymainwind$ lupdate -verbose mymainwind.pro Updating 'mymainwind.ts'... Found 20 source text(s) (0 new and 20 already existing) myusername@mypcname:~/a/codes/qtproj/mymainwind$","title":"enter your project folder, exec lupdate mymainwind.pro to generate mymainwind.ts"},{"location":"qt/6-internationalization/#exec-linguist-mymainwindts-to-translate-in-linguist-tool","text":"","title":"exec linguist mymainwind.ts to translate in linguist tool"},{"location":"qt/6-internationalization/#edit-your-translation-for-example-ampopen-ampo","text":"","title":"edit your translation, for example: &amp;Open -&gt; \u6253\u5f00(&amp;O)"},{"location":"qt/6-internationalization/#click-file-release-then-save-in-linguist-tool-to-generate-mymainwindqm","text":"","title":"Click File-&gt;Release then Save in linguist tool to generate mymainwind.qm"},{"location":"qt/6-internationalization/#copy-mymainwindqm-to-application-folder","text":"","title":"copy mymainwind.qm to application folder"},{"location":"qt/6-internationalization/#run-your-application-you-will-see-the-results","text":"","title":"run your application, you will see the results"},{"location":"qt/7-container/","text":"Container \u5e38\u7528\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668 \u8bf4\u660e QVector QLinkedList \\ / +----QList----+ | +----------+---------+ | | | QStringList QStack QQueue QVector: \u5411\u91cf, \u7c7b\u4f3c\u6570\u7ec4, \u5b58\u50a8\u7a7a\u95f4\u8fde\u7eed, \u9002\u5408\u83b7\u53d6\u968f\u673a\u4f4d\u7f6e\u6570\u636e\u6216\u8005\u672b\u5c3e\u5904\u6dfb\u52a0\u6570\u636e, \u4e0d\u9002\u5408\u4e2d\u95f4\u4f4d\u7f6e\u63d2\u5165\u5220\u9664\u6570\u636e. \u53ef\u4ee5\u4f7f\u7528[], append(), , \u904d\u5386\u5668 QLinkedList: \u94fe\u8868, \u9002\u5408\u6570\u636e\u63d2\u5165\u5220\u9664, \u4f46\u662f\u968f\u673a\u4f4d\u7f6e\u8bbf\u95ee\u6bd4\u8f83\u6162. \u53ef\u4ee5\u4f7f\u7528appen(), , \u904d\u5386\u5668 QList: \u540c\u65f6\u62e5\u6709QVector\u548cQLinkedList\u5927\u591a\u6570\u6709\u70b9, \u5c3d\u91cf\u4f7f\u7528QList\u5bb9\u5668\u66ff\u4ee3QVector\u548cQLinkedList QStringList QStack QQueue\u662fQList\u7684\u7279\u4f8b. QStack: push(), pop(), top(). QQueue: enqueue(), dequeue(), head(). \u904d\u5386 \u4f7f\u7528\u904d\u5386\u5668\u548c\u4f7f\u7528foreach \u904d\u5386\u5668\u6709\u4e24\u79cd\u98ce\u683c: Java style(\u98ce\u683c\u7b80\u5355, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20) and STL style(\u529f\u80fd\u5f3a\u5927, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488) \u6bcf\u79cd\u5bb9\u5668\u7c7b\u90fd\u6709\u5bf9\u5e94\u7684\u4e24\u79cd\u904d\u5386\u5668: \u53ea\u8bfb\u904d\u5386\u5668\u548c\u8bfb\u5199\u904d\u5386\u5668 Java style: \u53ea\u8bfb\u904d\u5386\u5668: QVectorIterator, QLinkedListIterator, QListIterator... \u8bfb\u5199\u904d\u5386\u5668: QMutableVectorIterator, QMutableLinkedListIterator, QMutableListIterator... STL style: \u5bf9\u4e8e\u67d0\u4e9b\u8fd4\u56de\u5bb9\u5668\u7684\u51fd\u6570, \u5982\u679c\u4f7f\u7528STL\u98ce\u683c\u904d\u5386\u5668, \u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u62f7\u8d1d, \u7136\u540e\u518d\u904d\u5386, \u6765\u907f\u514d\u8c03\u7528\u4e34\u65f6\u5bf9\u8c61\u7684\u51fd\u6570 \u4f7f\u7528Java\u98ce\u683c\u904d\u5386\u5668\u65f6\u4e0d\u4f1a\u6709\u8fd9\u79cd\u95ee\u9898, \u56e0\u4e3a\u7cfb\u7edf\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u8fd9\u4e2a\u62f7\u8d1d(\u9690\u5f0f\u6570\u636e\u5171\u4eab, \u4f8b\u5982QByteArray, QBrush, QFont, QImage, QPixmap, Qstring) T::iterator T::const_iterator \u6ce8\u610f \u4f8b\u5982QList\u6709\u591a\u79cd\u7528\u6cd5\u8d4b\u503c, \u521d\u59cb\u5316\u65f6\u5019\u8d4b\u503c, [], append(), , \u5c3d\u91cf\u4f7f\u7528\u5bb9\u5668\u65f6\u4e0d\u8981\u4f7f\u7528[]\u800c\u4f7f\u7528at\u51fd\u6570, \u56e0\u4e3aQMap/QHash\u7b49\u5bb9\u5668\u4e2d\u53ef\u80fd\u4f1a\u63d2\u5165\u4e00\u4e2a\u503c\u4f46\u7ed3\u679c\u5e76\u4e0d\u662f\u81ea\u5df1\u9700\u8981\u7684. \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668\u6700\u597d\u4e00\u76f4\u4f7f\u7528\u8fed\u4ee3\u5668\u6216foreach, \u8fed\u4ee3\u5668\u4e5f\u6700\u597d\u4f7f\u7528STL\u98ce\u683c\u7684, \u56e0\u4e3aQT\u4e2d\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u673a\u5236(\u7c7b\u4f3ckernel\u4e2d\u7684cow - copy on write), \u8fd9\u79cd\u673a\u5236\u5728\u8d4b\u503c\u65f6\u4f1a\u8ba9\u4eba\u8ff7\u60d1 \u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u524d\u8fb9\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u8981\u518d\u4f7f\u7528\u8fed\u4ee3\u5668\u65f6\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u8fed\u4ee3\u5668 \u5bf9\u4e8e\u975econst\u5bb9\u5668, begin()/end()\u7b49\u5728\u6570\u636e\u6539\u53d8\u65f6\u4f1a\u8fdb\u884c\u6df1\u590d\u5236, \u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528const_iterator, constBegin()\u548cconstEnd QList int v = {1, 3, 5, 7, 9}; v[2] = 8; === v.append(11); v 13 \u4ee3\u7801(QList\u4e3a\u4f8b) Headers: #include QList #include QMutableListIterator #include QListIterator Java style QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QMutableListIterator int mutIter(list); // \u524d\u8fb9\u5bf9list\u7684\u64cd\u4f5c\u4f1a\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u9700\u8981\u4e34\u65f6\u5b9a\u4e49\u4e00\u4e2a while (mutIter.hasNext()) { // \u7531\u6b64\u53ef\u89c1, Java\u98ce\u683c\u7684\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20 mutIter.setValue(mutIter.next() + 3); // to remove item with mutIter.remove() } QListIterator int iter(list); while (iter.hasNext()) { str += + QString::number(iter.next()); } STL style QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QList int ::iterator iter = list.begin(); while (iter != list.end()) { *iter = *iter + 3; // \u7531\u6b64\u53ef\u89c1, STL\u98ce\u683c\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488 iter.isEmpty() to check if empty iter ++; } QList int ::const_iterator citer = list.constBegin(); while (citer != list.constEnd()) { str += + QString::number(*citer); citer ++; } foreach(\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b8f) QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } int v; foreach (v, list) { str += + QString::number(v); } \u5e38\u7528\u5173\u8054\u5b58\u50a8\u5bb9\u5668 \u8bf4\u660e QMap: \u5347\u5e8f\u5b58\u50a8. [], insert(), value(). \u5bf9\u4e8e\u975econstQMap, \u7528[]\u53d6\u4e0d\u5b58\u5728Key\u7684\u503c\u4f1a\u521b\u5efa\u8fd9\u4e2aKey\u5e76\u4e14Value\u8d4b\u4e86\u7a7a\u503c, \u6240\u4ee5\u8bf7\u4f7f\u7528value()\u51fd\u6570 QMultiMap: QMap\u662f\u5355\u503c\u7c7b\u578b, QMultiMap\u5141\u8bb8\u4e00\u4e2akey\u5bf9\u5e94\u591a\u4e2avalue QHash: \u5185\u90e8\u5b58\u50a8\u4e0d\u6392\u5e8f, \u67e5\u627e\u901f\u5ea6\u6bd4QMap\u5feb. reserve()\u6269\u5927\u7a7a\u95f4, squeeze()\u538b\u7f29\u7a7a\u95f4 QMultiHash: QHash\u4e5f\u662f\u5355\u503c\u7c7b\u578b, QMultiHash\u5141\u8bb8\u591a\u503c QCache: \u7f13\u5b58 QSet: \u4ec5\u5b58key \u904d\u5386(\u904d\u5386\u5173\u8054\u5b58\u50a8\u5bb9\u5668\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662fJava\u98ce\u683c\u904d\u5386\u5668, \u56e0\u4e3aJava\u98ce\u683c\u904d\u5386\u5668\u7684next previous\u8fd4\u56de\u7684\u662f\u952e\u503c\u5bf9) Java style QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMutableMapIterator int, QString mmapIter(map); while(mmapIter.hasNext()) { mmapIter.next(); // \u5982\u679c\u4e0d\u4f7f\u7528next\u8fd4\u56de\u503c mmapIter.setValue(mmapIter.value() + new ); } QMapIterator int, QString mapIter(map); while (mapIter.hasNext()) { str += \\n + mapIter.next().value(); // \u4f7f\u7528next\u8fd4\u56de\u503c } STL style QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMap int, QString ::iterator iter = map.begin(); while(iter != map.end()) { iter.value() += new ; iter ++; } QMap int, QString ::const_iterator citer = map.constBegin(); while(citer != map.constEnd()) { str += \\n + QString::number(citer.key()) + citer.value(); citer ++; } foreach \u5bf9\u4e8eQMap\u8fd9\u6837\u7684\u5bb9\u5668\u5982\u679c\u8981\u4f7f\u7528foreach\u5904\u7406\u6240\u6709key\u548cvalue\u7684\u60c5\u51b5, \u53ea\u80fdkey\u548cvalue\u5206\u522b\u5faa\u73af, \u4f46\u662f\u6709\u65f6\u5019\u6ca1\u6709\u610f\u4e49, \u4f8b\u5982: foreach(int k, map.keys()) { foreach(QString v, map.values()) { str += \\n + QString::number(k) + v; } } \u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528: QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); foreach(int k, map.keys()) { QString v = map.value(k); if (!v.isEmpty()) { str += \\n + QString::number(k) + : + v; } } Others QPair T1, T2 qCopyBackward QEqual","title":"Container"},{"location":"qt/7-container/#container","text":"","title":"Container"},{"location":"qt/7-container/#_1","text":"","title":"\u5e38\u7528\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668"},{"location":"qt/7-container/#_2","text":"QVector QLinkedList \\ / +----QList----+ | +----------+---------+ | | | QStringList QStack QQueue QVector: \u5411\u91cf, \u7c7b\u4f3c\u6570\u7ec4, \u5b58\u50a8\u7a7a\u95f4\u8fde\u7eed, \u9002\u5408\u83b7\u53d6\u968f\u673a\u4f4d\u7f6e\u6570\u636e\u6216\u8005\u672b\u5c3e\u5904\u6dfb\u52a0\u6570\u636e, \u4e0d\u9002\u5408\u4e2d\u95f4\u4f4d\u7f6e\u63d2\u5165\u5220\u9664\u6570\u636e. \u53ef\u4ee5\u4f7f\u7528[], append(), , \u904d\u5386\u5668 QLinkedList: \u94fe\u8868, \u9002\u5408\u6570\u636e\u63d2\u5165\u5220\u9664, \u4f46\u662f\u968f\u673a\u4f4d\u7f6e\u8bbf\u95ee\u6bd4\u8f83\u6162. \u53ef\u4ee5\u4f7f\u7528appen(), , \u904d\u5386\u5668 QList: \u540c\u65f6\u62e5\u6709QVector\u548cQLinkedList\u5927\u591a\u6570\u6709\u70b9, \u5c3d\u91cf\u4f7f\u7528QList\u5bb9\u5668\u66ff\u4ee3QVector\u548cQLinkedList QStringList QStack QQueue\u662fQList\u7684\u7279\u4f8b. QStack: push(), pop(), top(). QQueue: enqueue(), dequeue(), head().","title":"\u8bf4\u660e"},{"location":"qt/7-container/#_3","text":"\u4f7f\u7528\u904d\u5386\u5668\u548c\u4f7f\u7528foreach \u904d\u5386\u5668\u6709\u4e24\u79cd\u98ce\u683c: Java style(\u98ce\u683c\u7b80\u5355, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20) and STL style(\u529f\u80fd\u5f3a\u5927, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488) \u6bcf\u79cd\u5bb9\u5668\u7c7b\u90fd\u6709\u5bf9\u5e94\u7684\u4e24\u79cd\u904d\u5386\u5668: \u53ea\u8bfb\u904d\u5386\u5668\u548c\u8bfb\u5199\u904d\u5386\u5668 Java style: \u53ea\u8bfb\u904d\u5386\u5668: QVectorIterator, QLinkedListIterator, QListIterator... \u8bfb\u5199\u904d\u5386\u5668: QMutableVectorIterator, QMutableLinkedListIterator, QMutableListIterator... STL style: \u5bf9\u4e8e\u67d0\u4e9b\u8fd4\u56de\u5bb9\u5668\u7684\u51fd\u6570, \u5982\u679c\u4f7f\u7528STL\u98ce\u683c\u904d\u5386\u5668, \u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u62f7\u8d1d, \u7136\u540e\u518d\u904d\u5386, \u6765\u907f\u514d\u8c03\u7528\u4e34\u65f6\u5bf9\u8c61\u7684\u51fd\u6570 \u4f7f\u7528Java\u98ce\u683c\u904d\u5386\u5668\u65f6\u4e0d\u4f1a\u6709\u8fd9\u79cd\u95ee\u9898, \u56e0\u4e3a\u7cfb\u7edf\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u8fd9\u4e2a\u62f7\u8d1d(\u9690\u5f0f\u6570\u636e\u5171\u4eab, \u4f8b\u5982QByteArray, QBrush, QFont, QImage, QPixmap, Qstring) T::iterator T::const_iterator \u6ce8\u610f \u4f8b\u5982QList\u6709\u591a\u79cd\u7528\u6cd5\u8d4b\u503c, \u521d\u59cb\u5316\u65f6\u5019\u8d4b\u503c, [], append(), , \u5c3d\u91cf\u4f7f\u7528\u5bb9\u5668\u65f6\u4e0d\u8981\u4f7f\u7528[]\u800c\u4f7f\u7528at\u51fd\u6570, \u56e0\u4e3aQMap/QHash\u7b49\u5bb9\u5668\u4e2d\u53ef\u80fd\u4f1a\u63d2\u5165\u4e00\u4e2a\u503c\u4f46\u7ed3\u679c\u5e76\u4e0d\u662f\u81ea\u5df1\u9700\u8981\u7684. \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668\u6700\u597d\u4e00\u76f4\u4f7f\u7528\u8fed\u4ee3\u5668\u6216foreach, \u8fed\u4ee3\u5668\u4e5f\u6700\u597d\u4f7f\u7528STL\u98ce\u683c\u7684, \u56e0\u4e3aQT\u4e2d\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u673a\u5236(\u7c7b\u4f3ckernel\u4e2d\u7684cow - copy on write), \u8fd9\u79cd\u673a\u5236\u5728\u8d4b\u503c\u65f6\u4f1a\u8ba9\u4eba\u8ff7\u60d1 \u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u524d\u8fb9\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u8981\u518d\u4f7f\u7528\u8fed\u4ee3\u5668\u65f6\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u8fed\u4ee3\u5668 \u5bf9\u4e8e\u975econst\u5bb9\u5668, begin()/end()\u7b49\u5728\u6570\u636e\u6539\u53d8\u65f6\u4f1a\u8fdb\u884c\u6df1\u590d\u5236, \u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528const_iterator, constBegin()\u548cconstEnd QList int v = {1, 3, 5, 7, 9}; v[2] = 8; === v.append(11); v 13","title":"\u904d\u5386"},{"location":"qt/7-container/#qlist","text":"Headers: #include QList #include QMutableListIterator #include QListIterator","title":"\u4ee3\u7801(QList\u4e3a\u4f8b)"},{"location":"qt/7-container/#java-style","text":"QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QMutableListIterator int mutIter(list); // \u524d\u8fb9\u5bf9list\u7684\u64cd\u4f5c\u4f1a\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668\u5931\u6548, \u6240\u4ee5\u9700\u8981\u4e34\u65f6\u5b9a\u4e49\u4e00\u4e2a while (mutIter.hasNext()) { // \u7531\u6b64\u53ef\u89c1, Java\u98ce\u683c\u7684\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u5bb9\u5668\u4e2d\u5143\u7d20 mutIter.setValue(mutIter.next() + 3); // to remove item with mutIter.remove() } QListIterator int iter(list); while (iter.hasNext()) { str += + QString::number(iter.next()); }","title":"Java style"},{"location":"qt/7-container/#stl-style","text":"QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } QList int ::iterator iter = list.begin(); while (iter != list.end()) { *iter = *iter + 3; // \u7531\u6b64\u53ef\u89c1, STL\u98ce\u683c\u8fed\u4ee3\u5668, \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6307\u9488 iter.isEmpty() to check if empty iter ++; } QList int ::const_iterator citer = list.constBegin(); while (citer != list.constEnd()) { str += + QString::number(*citer); citer ++; }","title":"STL style"},{"location":"qt/7-container/#foreach","text":"QString str; QList int list; for (int i = 0; i 10; i ++) { list.append(i); } int v; foreach (v, list) { str += + QString::number(v); }","title":"foreach(\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b8f)"},{"location":"qt/7-container/#_4","text":"","title":"\u5e38\u7528\u5173\u8054\u5b58\u50a8\u5bb9\u5668"},{"location":"qt/7-container/#_5","text":"QMap: \u5347\u5e8f\u5b58\u50a8. [], insert(), value(). \u5bf9\u4e8e\u975econstQMap, \u7528[]\u53d6\u4e0d\u5b58\u5728Key\u7684\u503c\u4f1a\u521b\u5efa\u8fd9\u4e2aKey\u5e76\u4e14Value\u8d4b\u4e86\u7a7a\u503c, \u6240\u4ee5\u8bf7\u4f7f\u7528value()\u51fd\u6570 QMultiMap: QMap\u662f\u5355\u503c\u7c7b\u578b, QMultiMap\u5141\u8bb8\u4e00\u4e2akey\u5bf9\u5e94\u591a\u4e2avalue QHash: \u5185\u90e8\u5b58\u50a8\u4e0d\u6392\u5e8f, \u67e5\u627e\u901f\u5ea6\u6bd4QMap\u5feb. reserve()\u6269\u5927\u7a7a\u95f4, squeeze()\u538b\u7f29\u7a7a\u95f4 QMultiHash: QHash\u4e5f\u662f\u5355\u503c\u7c7b\u578b, QMultiHash\u5141\u8bb8\u591a\u503c QCache: \u7f13\u5b58 QSet: \u4ec5\u5b58key","title":"\u8bf4\u660e"},{"location":"qt/7-container/#java-javanextprevious","text":"","title":"\u904d\u5386(\u904d\u5386\u5173\u8054\u5b58\u50a8\u5bb9\u5668\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662fJava\u98ce\u683c\u904d\u5386\u5668, \u56e0\u4e3aJava\u98ce\u683c\u904d\u5386\u5668\u7684next&amp;previous\u8fd4\u56de\u7684\u662f\u952e\u503c\u5bf9)"},{"location":"qt/7-container/#java-style_1","text":"QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMutableMapIterator int, QString mmapIter(map); while(mmapIter.hasNext()) { mmapIter.next(); // \u5982\u679c\u4e0d\u4f7f\u7528next\u8fd4\u56de\u503c mmapIter.setValue(mmapIter.value() + new ); } QMapIterator int, QString mapIter(map); while (mapIter.hasNext()) { str += \\n + mapIter.next().value(); // \u4f7f\u7528next\u8fd4\u56de\u503c }","title":"Java style"},{"location":"qt/7-container/#stl-style_1","text":"QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); QMap int, QString ::iterator iter = map.begin(); while(iter != map.end()) { iter.value() += new ; iter ++; } QMap int, QString ::const_iterator citer = map.constBegin(); while(citer != map.constEnd()) { str += \\n + QString::number(citer.key()) + citer.value(); citer ++; }","title":"STL style"},{"location":"qt/7-container/#foreach_1","text":"\u5bf9\u4e8eQMap\u8fd9\u6837\u7684\u5bb9\u5668\u5982\u679c\u8981\u4f7f\u7528foreach\u5904\u7406\u6240\u6709key\u548cvalue\u7684\u60c5\u51b5, \u53ea\u80fdkey\u548cvalue\u5206\u522b\u5faa\u73af, \u4f46\u662f\u6709\u65f6\u5019\u6ca1\u6709\u610f\u4e49, \u4f8b\u5982: foreach(int k, map.keys()) { foreach(QString v, map.values()) { str += \\n + QString::number(k) + v; } } \u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528: QString str; QMap int, QString map; map.insert(2, 22222 ); map.insert(1, 11111 ); map.insert(4, 44444 ); map.insert(3, 33333 ); foreach(int k, map.keys()) { QString v = map.value(k); if (!v.isEmpty()) { str += \\n + QString::number(k) + : + v; } }","title":"foreach"},{"location":"qt/7-container/#others","text":"QPair T1, T2 qCopyBackward QEqual","title":"Others"},{"location":"qt/9-algo-data-type/","text":"Algo and Data type \u901a\u7528\u7b97\u6cd5(STL\u98ce\u683c\u7684\u904d\u5386\u5668) qFind qFill qCopy qSort qSwap qAbs qMin qMax \u6570\u636e\u7c7b\u578b QString QString str = aaa ; str = QString( bbb ); =, +, += str = str + bbb ; str += userName + \\n ; append str.append( ccc ); sprintf str.sprintf( %s ddd %d , aaaa , 555); arg str = QString( %1 %2 ).arg( aaa ).arg(111); number and setNum (translate number into string) str = QString::number(222); str.setNum(333); toXXX bool ok; int d = str.toInt( ok); if (ok) { } else { } mid, left, right QString a = 123456 ; QString b = a.mid(3, 2); indexOf QString a = abcdefg ; QString b = de ; int i = a.indexOf(b); startsWith, sendsWith if (url.startsWith( https:// ) url.endsWith( .png )) {} translate (c style string = QString) str += aaaa ; // str to be a QString QString( bbbb ); // \u5f3a\u5236\u8f6c\u6362 QString str = QString::fromUtf8( abcdefg ); char* a = str.toUtf8(); const char* a = qPrintable(QString( xxxxx )); replace, trimmed, toLowwer, toUpper, remove, insert, simplified QVariant \u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u503c, \u4e5f\u88ab\u7528\u4e8e\u6784\u5efameta-object, \u56e0\u6b64\u662fQtCore\u7684\u4e00\u90e8\u5206 value() QIcon icon = var.value QIcon (); // \u975eGUI\u6a21\u5757\u4e2d\u548cGUI\u6a21\u5757\u4e2d\u90fd\u9002\u7528 int a = var.toInt(); // \u975eGUI\u6a21\u5757\u4e2d, toString, to...","title":"Algo and Data type"},{"location":"qt/9-algo-data-type/#algo-and-data-type","text":"","title":"Algo and Data type"},{"location":"qt/9-algo-data-type/#stl","text":"qFind qFill qCopy qSort qSwap qAbs qMin qMax","title":"\u901a\u7528\u7b97\u6cd5(STL\u98ce\u683c\u7684\u904d\u5386\u5668)"},{"location":"qt/9-algo-data-type/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"qt/9-algo-data-type/#qstring","text":"QString str = aaa ; str = QString( bbb );","title":"QString"},{"location":"qt/9-algo-data-type/#_2","text":"str = str + bbb ; str += userName + \\n ;","title":"=, +, +="},{"location":"qt/9-algo-data-type/#append","text":"str.append( ccc );","title":"append"},{"location":"qt/9-algo-data-type/#sprintf","text":"str.sprintf( %s ddd %d , aaaa , 555);","title":"sprintf"},{"location":"qt/9-algo-data-type/#arg","text":"str = QString( %1 %2 ).arg( aaa ).arg(111);","title":"arg"},{"location":"qt/9-algo-data-type/#number-and-setnum-translate-number-into-string","text":"str = QString::number(222); str.setNum(333);","title":"number and setNum (translate number into string)"},{"location":"qt/9-algo-data-type/#toxxx","text":"bool ok; int d = str.toInt( ok); if (ok) { } else { }","title":"toXXX"},{"location":"qt/9-algo-data-type/#mid-left-right","text":"QString a = 123456 ; QString b = a.mid(3, 2);","title":"mid, left, right"},{"location":"qt/9-algo-data-type/#indexof","text":"QString a = abcdefg ; QString b = de ; int i = a.indexOf(b);","title":"indexOf"},{"location":"qt/9-algo-data-type/#startswith-sendswith","text":"if (url.startsWith( https:// ) url.endsWith( .png )) {}","title":"startsWith, sendsWith"},{"location":"qt/9-algo-data-type/#translate-c-style-string-qstring","text":"str += aaaa ; // str to be a QString QString( bbbb ); // \u5f3a\u5236\u8f6c\u6362 QString str = QString::fromUtf8( abcdefg ); char* a = str.toUtf8(); const char* a = qPrintable(QString( xxxxx ));","title":"translate (c style string &lt;=&gt; QString)"},{"location":"qt/9-algo-data-type/#replace-trimmed-tolowwer-toupper-remove-insert-simplified","text":"","title":"replace, trimmed, toLowwer, toUpper, remove, insert, simplified"},{"location":"qt/9-algo-data-type/#qvariant","text":"\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u503c, \u4e5f\u88ab\u7528\u4e8e\u6784\u5efameta-object, \u56e0\u6b64\u662fQtCore\u7684\u4e00\u90e8\u5206","title":"QVariant"},{"location":"qt/9-algo-data-type/#value","text":"QIcon icon = var.value QIcon (); // \u975eGUI\u6a21\u5757\u4e2d\u548cGUI\u6a21\u5757\u4e2d\u90fd\u9002\u7528 int a = var.toInt(); // \u975eGUI\u6a21\u5757\u4e2d, toString, to...","title":"value()"},{"location":"qt/8-model-view/","text":"Qt: model-view 1. description 2. item-view 3. model-view","title":"Qt: model-view"},{"location":"qt/8-model-view/#qt-model-view","text":"","title":"Qt: model-view"},{"location":"qt/8-model-view/#1-description","text":"","title":"1. description"},{"location":"qt/8-model-view/#2-item-view","text":"","title":"2. item-view"},{"location":"qt/8-model-view/#3-model-view","text":"","title":"3. model-view"},{"location":"qt/8-model-view/1-description/","text":"model-view framework \u6b64\u90e8\u5206\u4e3a\u4e2a\u4eba\u5bf9\u7f51\u7edc\u4e0a\u6587\u6863\u7684\u7406\u89e3, \u672a\u5fc5\u51c6\u786e, \u968f\u65f6\u4fee\u6539 description MVC (model-view-controller) in Smalltalk model: \u8d1f\u8d23\u83b7\u53d6\u9700\u8981\u663e\u793a\u7684\u6570\u636e, \u5e76\u4e14\u80fd\u591f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u4fee\u6539 view: \u8d1f\u8d23\u628a\u6a21\u578b\u6570\u636e\u663e\u793a\u7ed9\u7528\u6237(\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\u53ef\u80fd\u53ea\u663e\u793a\u4e00\u5c0f\u90e8\u5206) controller: \u8d1f\u8d23\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u5a92\u4ecb, \u5c06\u7528\u6237\u7684\u52a8\u4f5c\u89e3\u6790\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8f6c\u53d1\u7ed9\u6a21\u578b\u6267\u884c, \u5e76\u5c06\u6a21\u578b\u4e2d\u9700\u8981\u88ab\u663e\u793a\u7684\u6570\u636e\u76f4\u63a5\u8f6c\u53d1\u7ed9\u89c6\u56fe\u8fdb\u884c\u663e\u793a model-view in QT Qt\u4e2d\u7684MVC\u5e76\u4e0d\u662f\u4e09\u5c42\u67b6\u6784, \u800c\u662f\u4e00\u4e2amodel/view\u8bbe\u8ba1. view\u5c06\u7528\u6237\u8f93\u5165\u59d4\u6258\u7ed9delegate\u5904\u7406. model: \u76f8\u5f53\u4e8eMVC\u4e2d\u7684model, \u53d6\u56deview\u6240\u8981\u5c55\u793a\u7684\u6570\u636e, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u7ed9\u591a\u4e2aview, \u8ba9\u8fd9\u4e9bview\u80fd\u591f\u663e\u793a\u540c\u6837\u7684\u6570\u636e, \u4e5f\u5c31\u662f\u4e3a\u540c\u4e00\u4e2a\u6570\u636e\u63d0\u4f9b\u4e0d\u540c\u663e\u793a\u65b9\u5f0f, QT\u81ea\u52a8\u5bf9\u8fd9\u4e9bview\u4fdd\u6301\u540c\u6b65, \u81ea\u52a8\u5237\u65b0\u6240\u6709\u7684view\u4ee5\u663e\u793a\u6700\u65b0\u7684\u6570\u636e. \u8fd9\u6837\u6211\u4eec\u53ea\u5bf9model\u8fdb\u884c\u4fee\u6539, view\u4f1a\u81ea\u52a8\u66f4\u65b0 view: \u591a\u4e2aview\u53ef\u4ee5\u6ce8\u518c\u5230\u4e00\u4e2amodel\u4e0a delegate: \u5bf9\u5e94MVC\u4e2d\u7684controller, \u63d0\u4f9b\u5bf9item\u6e32\u67d3\u548c\u7f16\u8f91\u63a7\u5236, \u6bcf\u79cd\u89c6\u56feQT\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u4ee3\u7406 +--Delegate--+ | | \\|/ \\|/ DataSource --- Model ----- View difference in MVC(Smalltalk) and model-view(QT) QT\u7684model-view\u4e2d, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2aview model\u4e2d\u6570\u636e\u548cview\u4e2d\u663e\u793a\u7684\u6570\u636e\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3000 item view model\u548cview\u662f\u6bd4\u8f83\u5927\u7684\u7ec4\u4ef6, \u529f\u80fd\u6bd4\u8f83\u5f3a\u5927, \u5982\u679c\u53ea\u662f\u5c11\u91cf\u6570\u636e\u548c\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\u7684\u5730\u65b9, \u53ef\u4ee5\u4f7f\u7528\u8f7b\u91cf\u7ea7item-view\u7c7b: QListWidget, QTableWidget, QTreeWidget, \u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5bf9item\u64cd\u4f5c. \u8fd9\u4e9b\u8f7b\u91cf\u7ea7\u7ec4\u4ef6\u4e2d\u5305\u542b\u4e86\u5bf9\u5e94\u7684item, \u4f8b\u5982QTableWidget\u4e2d\u5305\u542b\u4e86QTableWidgetItem \u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u548c\u529f\u80fd\u5927\u7684\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528model\u548cview\u7c7b, model\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49model\u4e5f\u53ef\u4ee5\u662fQT\u9884\u7f6emodel, view\u7c7b\u5982QListView, QTableView, QTreeView(\u4f8b\u5982\u6570\u636e\u5e93\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528QTableView\u548cQSqlTableModel\u4e24\u4e2a\u7c7b)","title":"model-view framework"},{"location":"qt/8-model-view/1-description/#model-view-framework","text":"\u6b64\u90e8\u5206\u4e3a\u4e2a\u4eba\u5bf9\u7f51\u7edc\u4e0a\u6587\u6863\u7684\u7406\u89e3, \u672a\u5fc5\u51c6\u786e, \u968f\u65f6\u4fee\u6539","title":"model-view framework"},{"location":"qt/8-model-view/1-description/#description","text":"","title":"description"},{"location":"qt/8-model-view/1-description/#mvc-model-view-controller-in-smalltalk","text":"model: \u8d1f\u8d23\u83b7\u53d6\u9700\u8981\u663e\u793a\u7684\u6570\u636e, \u5e76\u4e14\u80fd\u591f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u4fee\u6539 view: \u8d1f\u8d23\u628a\u6a21\u578b\u6570\u636e\u663e\u793a\u7ed9\u7528\u6237(\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\u53ef\u80fd\u53ea\u663e\u793a\u4e00\u5c0f\u90e8\u5206) controller: \u8d1f\u8d23\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u5a92\u4ecb, \u5c06\u7528\u6237\u7684\u52a8\u4f5c\u89e3\u6790\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8f6c\u53d1\u7ed9\u6a21\u578b\u6267\u884c, \u5e76\u5c06\u6a21\u578b\u4e2d\u9700\u8981\u88ab\u663e\u793a\u7684\u6570\u636e\u76f4\u63a5\u8f6c\u53d1\u7ed9\u89c6\u56fe\u8fdb\u884c\u663e\u793a","title":"MVC (model-view-controller) in Smalltalk"},{"location":"qt/8-model-view/1-description/#model-view-in-qt","text":"Qt\u4e2d\u7684MVC\u5e76\u4e0d\u662f\u4e09\u5c42\u67b6\u6784, \u800c\u662f\u4e00\u4e2amodel/view\u8bbe\u8ba1. view\u5c06\u7528\u6237\u8f93\u5165\u59d4\u6258\u7ed9delegate\u5904\u7406. model: \u76f8\u5f53\u4e8eMVC\u4e2d\u7684model, \u53d6\u56deview\u6240\u8981\u5c55\u793a\u7684\u6570\u636e, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u7ed9\u591a\u4e2aview, \u8ba9\u8fd9\u4e9bview\u80fd\u591f\u663e\u793a\u540c\u6837\u7684\u6570\u636e, \u4e5f\u5c31\u662f\u4e3a\u540c\u4e00\u4e2a\u6570\u636e\u63d0\u4f9b\u4e0d\u540c\u663e\u793a\u65b9\u5f0f, QT\u81ea\u52a8\u5bf9\u8fd9\u4e9bview\u4fdd\u6301\u540c\u6b65, \u81ea\u52a8\u5237\u65b0\u6240\u6709\u7684view\u4ee5\u663e\u793a\u6700\u65b0\u7684\u6570\u636e. \u8fd9\u6837\u6211\u4eec\u53ea\u5bf9model\u8fdb\u884c\u4fee\u6539, view\u4f1a\u81ea\u52a8\u66f4\u65b0 view: \u591a\u4e2aview\u53ef\u4ee5\u6ce8\u518c\u5230\u4e00\u4e2amodel\u4e0a delegate: \u5bf9\u5e94MVC\u4e2d\u7684controller, \u63d0\u4f9b\u5bf9item\u6e32\u67d3\u548c\u7f16\u8f91\u63a7\u5236, \u6bcf\u79cd\u89c6\u56feQT\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u4ee3\u7406 +--Delegate--+ | | \\|/ \\|/ DataSource --- Model ----- View","title":"model-view in QT"},{"location":"qt/8-model-view/1-description/#difference-in-mvcsmalltalk-and-model-viewqt","text":"QT\u7684model-view\u4e2d, \u4e00\u4e2amodel\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2aview model\u4e2d\u6570\u636e\u548cview\u4e2d\u663e\u793a\u7684\u6570\u636e\u662f\u4e00\u4e00\u5bf9\u5e94\u7684","title":"difference in MVC(Smalltalk) and model-view(QT)"},{"location":"qt/8-model-view/1-description/#item-view","text":"model\u548cview\u662f\u6bd4\u8f83\u5927\u7684\u7ec4\u4ef6, \u529f\u80fd\u6bd4\u8f83\u5f3a\u5927, \u5982\u679c\u53ea\u662f\u5c11\u91cf\u6570\u636e\u548c\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\u7684\u5730\u65b9, \u53ef\u4ee5\u4f7f\u7528\u8f7b\u91cf\u7ea7item-view\u7c7b: QListWidget, QTableWidget, QTreeWidget, \u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5bf9item\u64cd\u4f5c. \u8fd9\u4e9b\u8f7b\u91cf\u7ea7\u7ec4\u4ef6\u4e2d\u5305\u542b\u4e86\u5bf9\u5e94\u7684item, \u4f8b\u5982QTableWidget\u4e2d\u5305\u542b\u4e86QTableWidgetItem \u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u548c\u529f\u80fd\u5927\u7684\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528model\u548cview\u7c7b, model\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49model\u4e5f\u53ef\u4ee5\u662fQT\u9884\u7f6emodel, view\u7c7b\u5982QListView, QTableView, QTreeView(\u4f8b\u5982\u6570\u636e\u5e93\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528QTableView\u548cQSqlTableModel\u4e24\u4e2a\u7c7b)","title":"item view"},{"location":"qt/8-model-view/2-item-view/","text":"item-view QListWidget Header #include QListWidget Data member QWidget *widget; QVBoxLayout *layout; QLabel *info; QListWidget *list Slot void MainWindow::curRowChanged(int curRow) { info- setText(tr( current row( ) + QString::number(curRow) + tr( ): ) + list- item(curRow)- text()); } Codes widget = new QWidget; layout = new QVBoxLayout; info = new QLabel; list = new QListWidget; list- addItem(new QListWidgetItem(QIcon( :/smiling.png ), tr( smiling ))); list- addItem(new QListWidgetItem(QIcon( :/sleeping.png ), tr( sleeping ))); list- addItem(new QListWidgetItem(QIcon( :/crying.png ), tr( crying ))); layout- addWidget(info); layout- addWidget(list); connect(list, SIGNAL(currentRowChanged(int)), this, SLOT(curRowChanged(int))); widget- setLayout(layout); setCentralWidget(widget); QTableWidget Header #include QTableWidget Data member QWidget *widget; QVBoxLayout *layout; QLabel *info; QTableWidget *table Slot void MainWindow::getTableItem(QTableWidgetItem *item) { info- setText(tr( current item( ) + QString::number(item- row()) + , + QString::number(item- column()) + ): + item- text()); } Codes layout = new QVBoxLayout; info = new QLabel; table = new QTableWidget; table- setRowCount(10); table- setColumnCount(3); QStringList headers; headers.append(tr( name )); headers.append(tr( age )); headers.append(tr( address )); table- setHorizontalHeaderLabels(headers); table- setItem(0, 0, new QTableWidgetItem(tr( aaa ))); table- setItem(1, 1, new QTableWidgetItem(tr( bbb ))); connect(table, SIGNAL(itemChanged(QTableWidgetItem*)), this, SLOT(getTableItem(QTableWidgetItem*))); layout- addWidget(info); layout- addWidget(table); widget- setLayout(layout); QTreeWidget setColumnCount\u53ef\u4ee5\u8bbe\u5b9a\u680f\u6570, \u5927\u4e8e1\u65f6\u4f1a\u663e\u793a\u4e3a\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50 QTreeWidget\u53ef\u4ee5\u6709\u591a\u4e2a\u6811\u6839, \u6240\u4ee5\u6811\u6839\u662f\u4e00\u4e2alist \u56e0\u4e3a\u53ef\u4ee5\u4e3a\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50, \u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684\u63cf\u8ff0\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868, \u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u8c03\u7528setHeaderLabels setColumnCount, \u4f1a\u5f62\u6210\u591a\u4e2a\u5217(\u8d44\u6e90\u7ba1\u7406\u5668\u6837\u5b50\u7684\u6811\u5f62\u7ed3\u6784) Header #include QTreeWidget Data member QWidget *widget; QVBoxLayout *layout; QLabel *info; QTreeWidget *tree; Slot void MainWindow::checkClicked(QTreeWidgetItem *item, int column) { info- setText(tr( item: ) + item- text(column) + , column: + QString::number(column)); } Codes layout = new QVBoxLayout; info = new QLabel; tree = new QTreeWidget; tree- setColumnCount(1); // === QTreeWidgetItem *root = new QTreeWidgetItem(tree, QStringList(QString( root ))); // === QTreeWidgetItem *node1 = new QTreeWidgetItem(root, QStringList(QString( node1 ))); root- addChild(node1); QTreeWidgetItem *node2 = new QTreeWidgetItem(node1, QStringList(QString( node2 ))); node2- setCheckState(0, Qt::Checked); node1- addChild(node2); QList QTreeWidgetItem * rootList; rootList.append(root); tree- insertTopLevelItems(0, rootList); tree- setHeaderHidden(true); tree- expandAll(); connect(tree, SIGNAL(itemClicked(QTreeWidgetItem *, int)), this, SLOT(checkClicked(QTreeWidgetItem *, int))); layout- addWidget(info); layout- addWidget(tree); widget- setLayout(layout);","title":"item-view"},{"location":"qt/8-model-view/2-item-view/#item-view","text":"","title":"item-view"},{"location":"qt/8-model-view/2-item-view/#qlistwidget","text":"","title":"QListWidget"},{"location":"qt/8-model-view/2-item-view/#header","text":"#include QListWidget","title":"Header"},{"location":"qt/8-model-view/2-item-view/#data-member","text":"QWidget *widget; QVBoxLayout *layout; QLabel *info; QListWidget *list","title":"Data member"},{"location":"qt/8-model-view/2-item-view/#slot","text":"void MainWindow::curRowChanged(int curRow) { info- setText(tr( current row( ) + QString::number(curRow) + tr( ): ) + list- item(curRow)- text()); }","title":"Slot"},{"location":"qt/8-model-view/2-item-view/#codes","text":"widget = new QWidget; layout = new QVBoxLayout; info = new QLabel; list = new QListWidget; list- addItem(new QListWidgetItem(QIcon( :/smiling.png ), tr( smiling ))); list- addItem(new QListWidgetItem(QIcon( :/sleeping.png ), tr( sleeping ))); list- addItem(new QListWidgetItem(QIcon( :/crying.png ), tr( crying ))); layout- addWidget(info); layout- addWidget(list); connect(list, SIGNAL(currentRowChanged(int)), this, SLOT(curRowChanged(int))); widget- setLayout(layout); setCentralWidget(widget);","title":"Codes"},{"location":"qt/8-model-view/2-item-view/#qtablewidget","text":"","title":"QTableWidget"},{"location":"qt/8-model-view/2-item-view/#header_1","text":"#include QTableWidget","title":"Header"},{"location":"qt/8-model-view/2-item-view/#data-member_1","text":"QWidget *widget; QVBoxLayout *layout; QLabel *info; QTableWidget *table","title":"Data member"},{"location":"qt/8-model-view/2-item-view/#slot_1","text":"void MainWindow::getTableItem(QTableWidgetItem *item) { info- setText(tr( current item( ) + QString::number(item- row()) + , + QString::number(item- column()) + ): + item- text()); }","title":"Slot"},{"location":"qt/8-model-view/2-item-view/#codes_1","text":"layout = new QVBoxLayout; info = new QLabel; table = new QTableWidget; table- setRowCount(10); table- setColumnCount(3); QStringList headers; headers.append(tr( name )); headers.append(tr( age )); headers.append(tr( address )); table- setHorizontalHeaderLabels(headers); table- setItem(0, 0, new QTableWidgetItem(tr( aaa ))); table- setItem(1, 1, new QTableWidgetItem(tr( bbb ))); connect(table, SIGNAL(itemChanged(QTableWidgetItem*)), this, SLOT(getTableItem(QTableWidgetItem*))); layout- addWidget(info); layout- addWidget(table); widget- setLayout(layout);","title":"Codes"},{"location":"qt/8-model-view/2-item-view/#qtreewidget","text":"setColumnCount\u53ef\u4ee5\u8bbe\u5b9a\u680f\u6570, \u5927\u4e8e1\u65f6\u4f1a\u663e\u793a\u4e3a\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50 QTreeWidget\u53ef\u4ee5\u6709\u591a\u4e2a\u6811\u6839, \u6240\u4ee5\u6811\u6839\u662f\u4e00\u4e2alist \u56e0\u4e3a\u53ef\u4ee5\u4e3a\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6837\u5b50, \u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684\u63cf\u8ff0\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868, \u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u8c03\u7528setHeaderLabels setColumnCount, \u4f1a\u5f62\u6210\u591a\u4e2a\u5217(\u8d44\u6e90\u7ba1\u7406\u5668\u6837\u5b50\u7684\u6811\u5f62\u7ed3\u6784)","title":"QTreeWidget"},{"location":"qt/8-model-view/2-item-view/#header_2","text":"#include QTreeWidget","title":"Header"},{"location":"qt/8-model-view/2-item-view/#data-member_2","text":"QWidget *widget; QVBoxLayout *layout; QLabel *info; QTreeWidget *tree;","title":"Data member"},{"location":"qt/8-model-view/2-item-view/#slot_2","text":"void MainWindow::checkClicked(QTreeWidgetItem *item, int column) { info- setText(tr( item: ) + item- text(column) + , column: + QString::number(column)); }","title":"Slot"},{"location":"qt/8-model-view/2-item-view/#codes_2","text":"layout = new QVBoxLayout; info = new QLabel; tree = new QTreeWidget; tree- setColumnCount(1); // === QTreeWidgetItem *root = new QTreeWidgetItem(tree, QStringList(QString( root ))); // === QTreeWidgetItem *node1 = new QTreeWidgetItem(root, QStringList(QString( node1 ))); root- addChild(node1); QTreeWidgetItem *node2 = new QTreeWidgetItem(node1, QStringList(QString( node2 ))); node2- setCheckState(0, Qt::Checked); node1- addChild(node2); QList QTreeWidgetItem * rootList; rootList.append(root); tree- insertTopLevelItems(0, rootList); tree- setHeaderHidden(true); tree- expandAll(); connect(tree, SIGNAL(itemClicked(QTreeWidgetItem *, int)), this, SLOT(checkClicked(QTreeWidgetItem *, int))); layout- addWidget(info); layout- addWidget(tree); widget- setLayout(layout);","title":"Codes"},{"location":"qt/8-model-view/3-model-view/","text":"Qt: model-view \u5728model-view\u4e2d, view\u5206\u4e3a\u4e09\u7c7b: list, table, tree, \u4f46\u662fmodel\u5343\u5947\u767e\u602a, \u4e0d\u540c\u7684\u5efa\u6a21\u4f1a\u6709\u4e0d\u540c\u7684model. \u5206\u4e3a\u9884\u5b9a\u4e49\u7684model(\u5982QStringListModel)\u548c\u81ea\u5b9a\u4e49\u7684model. 1. QStringListModel and QListView 2. QFileSystemModel and QTreeView 3. QSortFilterProxyModel and QListView 4. Self-defined Model 5. Self-defined Delegate","title":"Qt: model-view"},{"location":"qt/8-model-view/3-model-view/#qt-model-view","text":"\u5728model-view\u4e2d, view\u5206\u4e3a\u4e09\u7c7b: list, table, tree, \u4f46\u662fmodel\u5343\u5947\u767e\u602a, \u4e0d\u540c\u7684\u5efa\u6a21\u4f1a\u6709\u4e0d\u540c\u7684model. \u5206\u4e3a\u9884\u5b9a\u4e49\u7684model(\u5982QStringListModel)\u548c\u81ea\u5b9a\u4e49\u7684model.","title":"Qt: model-view"},{"location":"qt/8-model-view/3-model-view/#1-qstringlistmodel-and-qlistview","text":"","title":"1. QStringListModel and QListView"},{"location":"qt/8-model-view/3-model-view/#2-qfilesystemmodel-and-qtreeview","text":"","title":"2. QFileSystemModel and QTreeView"},{"location":"qt/8-model-view/3-model-view/#3-qsortfilterproxymodel-and-qlistview","text":"","title":"3. QSortFilterProxyModel and QListView"},{"location":"qt/8-model-view/3-model-view/#4-self-defined-model","text":"","title":"4. Self-defined Model"},{"location":"qt/8-model-view/3-model-view/#5-self-defined-delegate","text":"","title":"5. Self-defined Delegate"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/","text":"QStringListModel - QListView \u9884\u5b9a\u4e49model\u4e2dQStringListModel\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd. Header #include QStringListModel Data member QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *insertBtn, *deleteBtn, *showBtn; QStringListModel *model; QListView *listView Slots void MainWindow::insertData() { bool ok = false; QString str = QInputDialog::getText(NULL, tr( input ), tr( Input ), QLineEdit::Normal, tr( Default string ), ok); if (ok) { int curViewIdx = listView- currentIndex().row(); if (-1 == curViewIdx) { // No data or no select in view currently curViewIdx = 0; } model- insertRows(curViewIdx, 1); QModelIndex curModelIdx = model- index(curViewIdx); // TODO: \u6ca1\u6709\u5b9e\u9645\u610f\u4e49, \u56e0\u4e3alistView- currentIndex\u5df2\u7ecf\u53ef\u4ee5\u8fd4\u56deQModelIndex\u7c7b\u578b model- setData(curModelIdx, str); listView- setCurrentIndex(curModelIdx); listView- edit(curModelIdx); // edit status in view to this row } } void MainWindow::deleteData() { int curViewIdx = listView- currentIndex().row(); if (-1 != curViewIdx) { // remove selected row model- removeRows(curViewIdx, 1); } } void MainWindow::showData() { QString info; QStringList data = model- stringList(); QStringList::const_iterator iter = data.constBegin(); while (iter != data.constEnd()) { info += \\n + *iter; iter ++; } QMessageBox::information(NULL, tr( info: ), info); } Codes widget = new QWidget; mainLayout = new QVBoxLayout; insertBtn = new QPushButton(tr( insert ), this); deleteBtn = new QPushButton(tr( delete ), this); showBtn = new QPushButton(tr( show ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(insertBtn); btnLayout- addWidget(deleteBtn); btnLayout- addWidget(showBtn); model = new QStringListModel(this); QStringList data; data.append( 11111 ); data.append( 22222 ); data.append( 33333 ); model- setStringList(data); listView = new QListView(this); listView- setModel(model); mainLayout- addLayout(btnLayout); mainLayout- addWidget(listView); connect(insertBtn, SIGNAL(clicked()), this, SLOT(insertData())); connect(deleteBtn, SIGNAL(clicked()), this, SLOT(deleteData())); connect(showBtn, SIGNAL(clicked()), this, SLOT(showData())); widget- setLayout(mainLayout); setCentralWidget(widget);","title":"QStringListModel - QListView"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#qstringlistmodel-qlistview","text":"\u9884\u5b9a\u4e49model\u4e2dQStringListModel\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd.","title":"QStringListModel - QListView"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#header","text":"#include QStringListModel","title":"Header"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#data-member","text":"QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *insertBtn, *deleteBtn, *showBtn; QStringListModel *model; QListView *listView","title":"Data member"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#slots","text":"void MainWindow::insertData() { bool ok = false; QString str = QInputDialog::getText(NULL, tr( input ), tr( Input ), QLineEdit::Normal, tr( Default string ), ok); if (ok) { int curViewIdx = listView- currentIndex().row(); if (-1 == curViewIdx) { // No data or no select in view currently curViewIdx = 0; } model- insertRows(curViewIdx, 1); QModelIndex curModelIdx = model- index(curViewIdx); // TODO: \u6ca1\u6709\u5b9e\u9645\u610f\u4e49, \u56e0\u4e3alistView- currentIndex\u5df2\u7ecf\u53ef\u4ee5\u8fd4\u56deQModelIndex\u7c7b\u578b model- setData(curModelIdx, str); listView- setCurrentIndex(curModelIdx); listView- edit(curModelIdx); // edit status in view to this row } } void MainWindow::deleteData() { int curViewIdx = listView- currentIndex().row(); if (-1 != curViewIdx) { // remove selected row model- removeRows(curViewIdx, 1); } } void MainWindow::showData() { QString info; QStringList data = model- stringList(); QStringList::const_iterator iter = data.constBegin(); while (iter != data.constEnd()) { info += \\n + *iter; iter ++; } QMessageBox::information(NULL, tr( info: ), info); }","title":"Slots"},{"location":"qt/8-model-view/3-model-view/1-QStringListModel/#codes","text":"widget = new QWidget; mainLayout = new QVBoxLayout; insertBtn = new QPushButton(tr( insert ), this); deleteBtn = new QPushButton(tr( delete ), this); showBtn = new QPushButton(tr( show ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(insertBtn); btnLayout- addWidget(deleteBtn); btnLayout- addWidget(showBtn); model = new QStringListModel(this); QStringList data; data.append( 11111 ); data.append( 22222 ); data.append( 33333 ); model- setStringList(data); listView = new QListView(this); listView- setModel(model); mainLayout- addLayout(btnLayout); mainLayout- addWidget(listView); connect(insertBtn, SIGNAL(clicked()), this, SLOT(insertData())); connect(deleteBtn, SIGNAL(clicked()), this, SLOT(deleteData())); connect(showBtn, SIGNAL(clicked()), this, SLOT(showData())); widget- setLayout(mainLayout); setCentralWidget(widget);","title":"Codes"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/","text":"QFileSystemWatcher - QTreeView QDirModel\u5728\u65b0QT\u7248\u672c\u4e2d\u5df2\u7ecf\u5e9f\u5f03\u4e86, \u73b0\u5728\u4e3b\u8981\u7528QFileSystemWatcher\u548cQFileSystemModel Header #include QHeaderView #include QFileSystemModel #include QTreeView #include QModelIndex #include QDir Data member QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *createBtn, *removeBtn; QFileSystemModel *fsModel; QTreeView *treeView Slots void MainWindow::createDir() { bool ok; QString name; QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { index = fsModel- index(QDir::currentPath()); } name = QInputDialog::getText(NULL, tr( dir name ), tr( Input name ), QLineEdit::Normal, tr( Default ), ok); if (!ok) { return; } if (!name.isEmpty()) { if (!fsModel- mkdir(index, name).isValid()) { QMessageBox::information(NULL, tr( create dir fail ), tr( create dir %1 fail ).arg(name)); } } } void MainWindow::removeDir() { QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { // report an error return; } QString name = fsModel- fileName(index); bool ok; if (fsModel- fileInfo(index).isDir()) { ok = fsModel- rmdir(index); } else { ok = fsModel- remove(index); } if (!ok) { QMessageBox::information(NULL, tr( remove fail ), tr( remove dir %1 fail ).arg(name)); } } Codes createBtn = new QPushButton(tr( create ), this); removeBtn = new QPushButton(tr( remove ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(createBtn); btnLayout- addWidget(removeBtn); fsModel = new QFileSystemModel(this); fsModel- setReadOnly(false); fsModel- setRootPath(QDir::currentPath()); // monitor by QFileSystemWatcher treeView = new QTreeView(this); treeView- setModel(fsModel); treeView- header()- setStretchLastSection(true); treeView- header()- setSortIndicator(0, Qt::AscendingOrder); treeView- header()- setSortIndicatorShown(true); QModelIndex index = fsModel- index(QDir::currentPath()); treeView- setRootIndex(index); // show from this path treeView- expand(index); treeView- scrollTo(index); treeView- setColumnWidth(0, 20); treeView- resizeColumnToContents(0); mainLayout- addLayout(btnLayout); mainLayout- addWidget(treeView); connect(createBtn, SIGNAL(clicked()), this, SLOT(createDir())); connect(removeBtn, SIGNAL(clicked()), this, SLOT(removeDir()));","title":"QFileSystemWatcher - QTreeView"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#qfilesystemwatcher-qtreeview","text":"QDirModel\u5728\u65b0QT\u7248\u672c\u4e2d\u5df2\u7ecf\u5e9f\u5f03\u4e86, \u73b0\u5728\u4e3b\u8981\u7528QFileSystemWatcher\u548cQFileSystemModel","title":"QFileSystemWatcher - QTreeView"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#header","text":"#include QHeaderView #include QFileSystemModel #include QTreeView #include QModelIndex #include QDir","title":"Header"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#data-member","text":"QWidget *widget; QVBoxLayout *mainLayout; QHBoxLayout *btnLayout; QPushButton *createBtn, *removeBtn; QFileSystemModel *fsModel; QTreeView *treeView","title":"Data member"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#slots","text":"void MainWindow::createDir() { bool ok; QString name; QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { index = fsModel- index(QDir::currentPath()); } name = QInputDialog::getText(NULL, tr( dir name ), tr( Input name ), QLineEdit::Normal, tr( Default ), ok); if (!ok) { return; } if (!name.isEmpty()) { if (!fsModel- mkdir(index, name).isValid()) { QMessageBox::information(NULL, tr( create dir fail ), tr( create dir %1 fail ).arg(name)); } } } void MainWindow::removeDir() { QModelIndex index = treeView- currentIndex(); if (!index.isValid()) { // report an error return; } QString name = fsModel- fileName(index); bool ok; if (fsModel- fileInfo(index).isDir()) { ok = fsModel- rmdir(index); } else { ok = fsModel- remove(index); } if (!ok) { QMessageBox::information(NULL, tr( remove fail ), tr( remove dir %1 fail ).arg(name)); } }","title":"Slots"},{"location":"qt/8-model-view/3-model-view/2-QFileSystemModel/#codes","text":"createBtn = new QPushButton(tr( create ), this); removeBtn = new QPushButton(tr( remove ), this); btnLayout = new QHBoxLayout; btnLayout- addWidget(createBtn); btnLayout- addWidget(removeBtn); fsModel = new QFileSystemModel(this); fsModel- setReadOnly(false); fsModel- setRootPath(QDir::currentPath()); // monitor by QFileSystemWatcher treeView = new QTreeView(this); treeView- setModel(fsModel); treeView- header()- setStretchLastSection(true); treeView- header()- setSortIndicator(0, Qt::AscendingOrder); treeView- header()- setSortIndicatorShown(true); QModelIndex index = fsModel- index(QDir::currentPath()); treeView- setRootIndex(index); // show from this path treeView- expand(index); treeView- scrollTo(index); treeView- setColumnWidth(0, 20); treeView- resizeColumnToContents(0); mainLayout- addLayout(btnLayout); mainLayout- addWidget(treeView); connect(createBtn, SIGNAL(clicked()), this, SLOT(createDir())); connect(removeBtn, SIGNAL(clicked()), this, SLOT(removeDir()));","title":"Codes"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/","text":"QSortFilterProxyModel and QListView Header #include QWidget #include QVBoxLayout #include QHBoxLayout #include QStringListModel #include QSortFilterProxyModel #include QListView #include QComboBox #include QLabel #include QLineEdit Data member QVBoxLayout *mainLayout; QWidget *widget; QStringListModel *model; QSortFilterProxyModel *modelProxy; QListView *view; QLabel *filterLabel; QLineEdit *filterInput; QHBoxLayout *filterLayout; QLabel *syntaxLabel; QComboBox *syntaxBox; QHBoxLayout *syntaxLayout; Slots void MainWindow::showMatch(QString input) { QRegExp::PatternSyntax syntax = QRegExp::PatternSyntax(syntaxBox- itemData(syntaxBox- currentIndex()).toInt()); QRegExp regExp(input, Qt::CaseSensitive, syntax); modelProxy- setFilterRegExp(regExp); } Codes model = new QStringListModel(QColor::colorNames(), this); modelProxy = new QSortFilterProxyModel(this); modelProxy- setSourceModel(model); modelProxy- setFilterKeyColumn(0); view = new QListView(this); view- setModel(modelProxy); filterLabel = new QLabel(tr( Filter ), this); filterInput = new QLineEdit; filterLayout = new QHBoxLayout; filterLayout- addWidget(filterLabel); filterLayout- addWidget(filterInput); syntaxLabel = new QLabel(tr( Sytax ), this); syntaxBox = new QComboBox(this); syntaxBox- setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Preferred); syntaxBox- addItem(tr( Regular pattern ), QRegExp::RegExp); syntaxBox- addItem(tr( Wildcat ), QRegExp::Wildcard); syntaxBox- addItem(tr( Fixed String ), QRegExp::FixedString); syntaxLayout = new QHBoxLayout; syntaxLayout- addWidget(syntaxLabel); syntaxLayout- addWidget(syntaxBox); mainLayout = new QVBoxLayout; mainLayout- addWidget(view); mainLayout- addLayout(filterLayout); mainLayout- addLayout(syntaxLayout); widget- setLayout(mainLayout); connect(filterInput, SIGNAL(textChanged(QString)), this, SLOT(showMatch(QString)));","title":"QSortFilterProxyModel and QListView"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#qsortfilterproxymodel-and-qlistview","text":"","title":"QSortFilterProxyModel and QListView"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#header","text":"#include QWidget #include QVBoxLayout #include QHBoxLayout #include QStringListModel #include QSortFilterProxyModel #include QListView #include QComboBox #include QLabel #include QLineEdit","title":"Header"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#data-member","text":"QVBoxLayout *mainLayout; QWidget *widget; QStringListModel *model; QSortFilterProxyModel *modelProxy; QListView *view; QLabel *filterLabel; QLineEdit *filterInput; QHBoxLayout *filterLayout; QLabel *syntaxLabel; QComboBox *syntaxBox; QHBoxLayout *syntaxLayout;","title":"Data member"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#slots","text":"void MainWindow::showMatch(QString input) { QRegExp::PatternSyntax syntax = QRegExp::PatternSyntax(syntaxBox- itemData(syntaxBox- currentIndex()).toInt()); QRegExp regExp(input, Qt::CaseSensitive, syntax); modelProxy- setFilterRegExp(regExp); }","title":"Slots"},{"location":"qt/8-model-view/3-model-view/3-QSortFilterProxyModel/#codes","text":"model = new QStringListModel(QColor::colorNames(), this); modelProxy = new QSortFilterProxyModel(this); modelProxy- setSourceModel(model); modelProxy- setFilterKeyColumn(0); view = new QListView(this); view- setModel(modelProxy); filterLabel = new QLabel(tr( Filter ), this); filterInput = new QLineEdit; filterLayout = new QHBoxLayout; filterLayout- addWidget(filterLabel); filterLayout- addWidget(filterInput); syntaxLabel = new QLabel(tr( Sytax ), this); syntaxBox = new QComboBox(this); syntaxBox- setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Preferred); syntaxBox- addItem(tr( Regular pattern ), QRegExp::RegExp); syntaxBox- addItem(tr( Wildcat ), QRegExp::Wildcard); syntaxBox- addItem(tr( Fixed String ), QRegExp::FixedString); syntaxLayout = new QHBoxLayout; syntaxLayout- addWidget(syntaxLabel); syntaxLayout- addWidget(syntaxBox); mainLayout = new QVBoxLayout; mainLayout- addWidget(view); mainLayout- addLayout(filterLayout); mainLayout- addLayout(syntaxLayout); widget- setLayout(mainLayout); connect(filterInput, SIGNAL(textChanged(QString)), this, SLOT(showMatch(QString)));","title":"Codes"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/","text":"Self-defined model introduction QModelIndex - data | n * roles --+-DisplayRole +-EditRole +-ToolTipRole +-StatusTipRole +-WhatsThisRole | +-FontRole +-TextAlignmentRole +-TextColorRole +-BackgroundRole QModelIndex::parent() is invalid node, 0 child List model: root row | 0 +- data 1 +- data 2 +- data | ... Table model: root row | 0 d d d ... 1 d d d ... 2 d d d ... ......... column 0 1 2 ... QModelIndex::parent() is invalid node, 0 or 1 child Tree model: root row | 0 +--d d d ... 0 | +--d d d ... 1 | +--d d d ... 1 +--d d d ... 2 +--d d d ... ... column node can be located by QModelIndex::parent(), 0 or 1 or more child(s) Abstract class QObject | +---QAbstractItemModel---+ | | QAbstractListModel QAbstractTableModel example \u663e\u793a\u5404\u8d27\u5e01\u4e4b\u95f4\u7684\u6c47\u7387, \u7528\u4e00\u7ef4\u6570\u7ec4\u505a\u6570\u636e\u6e90, \u663e\u793a\u6210table \u5404\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb, \u53ef\u663e\u793a\u53ef\u4fee\u6539, \u4fee\u6539\u65f6\u9700\u8981emit\u4e00\u4e2a\u4fe1\u53f7\u6765\u5904\u7406 \u89e3\u6790\u5e03\u5c14\u8868\u8fbe\u5f0f, \u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u51fa\u6765","title":"Self-defined model"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#self-defined-model","text":"","title":"Self-defined model"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#introduction","text":"QModelIndex - data | n * roles --+-DisplayRole +-EditRole +-ToolTipRole +-StatusTipRole +-WhatsThisRole | +-FontRole +-TextAlignmentRole +-TextColorRole +-BackgroundRole QModelIndex::parent() is invalid node, 0 child List model: root row | 0 +- data 1 +- data 2 +- data | ... Table model: root row | 0 d d d ... 1 d d d ... 2 d d d ... ......... column 0 1 2 ... QModelIndex::parent() is invalid node, 0 or 1 child Tree model: root row | 0 +--d d d ... 0 | +--d d d ... 1 | +--d d d ... 1 +--d d d ... 2 +--d d d ... ... column node can be located by QModelIndex::parent(), 0 or 1 or more child(s)","title":"introduction"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#abstract-class","text":"QObject | +---QAbstractItemModel---+ | | QAbstractListModel QAbstractTableModel","title":"Abstract class"},{"location":"qt/8-model-view/3-model-view/4-self-defined-model/#example","text":"\u663e\u793a\u5404\u8d27\u5e01\u4e4b\u95f4\u7684\u6c47\u7387, \u7528\u4e00\u7ef4\u6570\u7ec4\u505a\u6570\u636e\u6e90, \u663e\u793a\u6210table \u5404\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb, \u53ef\u663e\u793a\u53ef\u4fee\u6539, \u4fee\u6539\u65f6\u9700\u8981emit\u4e00\u4e2a\u4fe1\u53f7\u6765\u5904\u7406 \u89e3\u6790\u5e03\u5c14\u8868\u8fbe\u5f0f, \u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u51fa\u6765","title":"example"},{"location":"qt/8-model-view/3-model-view/5-self-defined-delegate/","text":"self-defined delegate \u6807\u51c6\u7ec4\u4ef6\u4f7f\u7528QItemDelegate\u63d0\u4f9b\u7f16\u8f91\u529f\u80fd\u652f\u6301, \u8fd9\u79cd\u9ed8\u8ba4\u7684\u5b9e\u73b0\u7528\u5728QListView/QTableView/QTreeView\u4e2d view\u4f7f\u7528\u7684delegate\u53ef\u4ee5\u901a\u8fc7iteDelegate\u83b7\u5f97, \u4e5f\u53ef\u4ee5\u7528setItemDelegate\u8bbe\u7f6edelegate \u7236\u7c7b\u4e3aQItemDelegate\u548cQStyledItemDelegate, \u9ed8\u8ba4\u4e3aQStyledItemDelegate QStyledItemDelegate\u4f7f\u7528\u5f53\u524d\u7684\u98ce\u683c\u8fdb\u884c\u7ed8\u5236\u7ec4\u4ef6, \u6240\u4ee5\u5728\u81ea\u5b9a\u4e49delegate\u6216\u8005\u9700\u8981\u4f7f\u7528Qt style sheets\u65f6, \u6700\u597d\u4f7f\u7528QStyledItemDelegate\u4f5c\u4e3a\u7236\u7c7b. \u8fd9\u4e24\u4e2a\u7c7b\u901a\u5e38\u4e00\u6837, \u9664\u4e86\u9700\u8981\u4f7f\u7528style\u8fdb\u884c\u7ed8\u5236\u65f6\u5019(\u91cd\u8f7dpaing()\u548csizeHing()). \u81ea\u5b9a\u4e49\u7684delegate\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7f16\u8f91\u5668, \u800c\u4e0d\u4f7f\u7528\u5185\u7f6e\u7684\u7f16\u8f91\u5668\u5de5\u5382(\u9700\u8981\u5b9e\u73b0createEditor(), setEditorData(), updateEditorGeometry(), setModelData())","title":"self-defined delegate"},{"location":"qt/8-model-view/3-model-view/5-self-defined-delegate/#self-defined-delegate","text":"\u6807\u51c6\u7ec4\u4ef6\u4f7f\u7528QItemDelegate\u63d0\u4f9b\u7f16\u8f91\u529f\u80fd\u652f\u6301, \u8fd9\u79cd\u9ed8\u8ba4\u7684\u5b9e\u73b0\u7528\u5728QListView/QTableView/QTreeView\u4e2d view\u4f7f\u7528\u7684delegate\u53ef\u4ee5\u901a\u8fc7iteDelegate\u83b7\u5f97, \u4e5f\u53ef\u4ee5\u7528setItemDelegate\u8bbe\u7f6edelegate \u7236\u7c7b\u4e3aQItemDelegate\u548cQStyledItemDelegate, \u9ed8\u8ba4\u4e3aQStyledItemDelegate QStyledItemDelegate\u4f7f\u7528\u5f53\u524d\u7684\u98ce\u683c\u8fdb\u884c\u7ed8\u5236\u7ec4\u4ef6, \u6240\u4ee5\u5728\u81ea\u5b9a\u4e49delegate\u6216\u8005\u9700\u8981\u4f7f\u7528Qt style sheets\u65f6, \u6700\u597d\u4f7f\u7528QStyledItemDelegate\u4f5c\u4e3a\u7236\u7c7b. \u8fd9\u4e24\u4e2a\u7c7b\u901a\u5e38\u4e00\u6837, \u9664\u4e86\u9700\u8981\u4f7f\u7528style\u8fdb\u884c\u7ed8\u5236\u65f6\u5019(\u91cd\u8f7dpaing()\u548csizeHing()). \u81ea\u5b9a\u4e49\u7684delegate\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7f16\u8f91\u5668, \u800c\u4e0d\u4f7f\u7528\u5185\u7f6e\u7684\u7f16\u8f91\u5668\u5de5\u5382(\u9700\u8981\u5b9e\u73b0createEditor(), setEditorData(), updateEditorGeometry(), setModelData())","title":"self-defined delegate"},{"location":"qt/problems/","text":"Qt: problems 1. setCentralWidget and layout","title":"Qt: problems"},{"location":"qt/problems/#qt-problems","text":"","title":"Qt: problems"},{"location":"qt/problems/#1-setcentralwidget-and-layout","text":"","title":"1. setCentralWidget and layout"},{"location":"qt/problems/1-centralwidget/","text":"setCentralWidget layout create a widget add layout in this widget add more widgets in layout then call setCentralWidget(widget)","title":"setCentralWidget & layout"},{"location":"qt/problems/1-centralwidget/#setcentralwidget-layout","text":"create a widget add layout in this widget add more widgets in layout then call setCentralWidget(widget)","title":"setCentralWidget &amp; layout"}]}